<UNK>	0
<PAD>	1
<EOL>	2
	3
!	4
"	5
#	6
$	7
%	8
&	9
'	10
(	11
)	12
*	13
+	14
,	15
-	16
.	17
/	18
0	19
1	20
2	21
3	22
4	23
5	24
6	25
7	26
8	27
9	28
:	29
;	30
<	31
=	32
>	33
?	34
@	35
A	36
B	37
C	38
D	39
E	40
F	41
G	42
H	43
I	44
J	45
K	46
L	47
M	48
N	49
O	50
P	51
Q	52
R	53
S	54
T	55
U	56
V	57
W	58
X	59
Y	60
Z	61
[	62
\	63
]	64
^	65
_	66
`	67
a	68
b	69
c	70
d	71
e	72
f	73
g	74
h	75
i	76
j	77
k	78
l	79
m	80
n	81
o	82
p	83
q	84
r	85
s	86
t	87
u	88
v	89
w	90
x	91
y	92
z	93
{	94
|	95
}	96
~	97
true	98
false	99
abstract	100
assert	101
boolean	102
break	103
byte	104
case	105
catch	106
char	107
class	108
const	109
continue	110
default	111
do	112
double	113
else	114
enum	115
extends	116
final	117
finally	118
float	119
for	120
if	121
goto	122
implements	123
import	124
instanceof	125
int	126
interface	127
long	128
native	129
new	130
package	131
private	132
protected	133
public	134
return	135
short	136
static	137
strictfp	138
super	139
switch	140
synchronized	141
this	142
throw	143
throws	144
transient	145
try	146
void	147
volatile	148
while	149
module	150
open	151
requires	152
exports	153
opens	154
to	155
uses	156
provides	157
with	158
transitive	159
var	160
yield	161
record	162
sealed	163
permits	164
non-sealed	165
DECIMAL_LITERAL	166
HEX_LITERAL	167
OCT_LITERAL	168
BINARY_LITERAL	169
FLOAT_LITERAL	170
HEX_FLOAT_LITERAL	171
BOOL_LITERAL	172
CHAR_LITERAL	173
STRING_LITERAL	174
TEXT_BLOCK	175
null	176
(	177
)	178
{	179
}	180
[	181
]	182
;	183
,	184
.	185
=	186
>	187
<	188
!	189
~	190
?	191
:	192
==	193
<=	194
>=	195
!=	196
&&	197
||	198
++	199
--	200
+	201
-	202
*	203
/	204
&	205
|	206
^	207
%	208
+=	209
-=	210
*=	211
/=	212
&=	213
|=	214
^=	215
%=	216
<<=	217
>>=	218
>>>=	219
->	220
::	221
@	222
...	223
WS	224
COMMENT	225
LINE_COMMENT	226
 -> ""	227
.	228
; + <EOL> -> ";<EOL>"	229
e + r -> "er"	230
o + n -> "on"	231
(	232
) + ; + <EOL> -> ");<EOL>"	233
e + t -> "et"	234
i + n -> "in"	235
t + i -> "ti"	236
e + n -> "en"	237
e + s -> "es"	238
o + r -> "or"	239
{ + <EOL> -> "{<EOL>"	240
a + t -> "at"	241
} + <EOL> -> "}<EOL>"	242
t + r -> "tr"	243
( + ) -> "()"	244
l + e -> "le"	245
t + i + o + n -> "tion"	246
g + e + t -> "get"	247
a + l -> "al"	248
i + n + g -> "ing"	249
a + n -> "an"	250
s + t -> "st"	251
,	252
a + r -> "ar"	253
c + e -> "ce"	254
) + { + <EOL> -> "){<EOL>"	255
S + t + r -> "Str"	256
e + n + t -> "ent"	257
r + e -> "re"	258
. + g + e + t -> ".get"	259
i + t -> "it"	260
a + m -> "am"	261
r + o -> "ro"	262
import	263
S + t + r + i + n + g -> "String"	264
a + s -> "as"	265
e + c -> "ec"	266
=	267
. + s -> ".s"	268
u + t -> "ut"	269
o + m -> "om"	270
d + e -> "de"	271
a + p -> "ap"	272
a + c -> "ac"	273
( + ) + ; + <EOL> -> "();<EOL>"	274
t + e -> "te"	275
a + d -> "ad"	276
I + n -> "In"	277
( + STRING_LITERAL -> "(STRING_LITERAL"	278
a + g -> "ag"	279
a + t + e -> "ate"	280
i + s + t -> "ist"	281
new	282
. + c -> ".c"	283
s + e + r -> "ser"	284
c	285
C + o + n -> "Con"	286
o + l -> "ol"	287
i + l -> "il"	288
s + . -> "s."	289
u + n -> "un"	290
a + t + i + o + n -> "ation"	291
i + d -> "id"	292
i + s -> "is"	293
u + r -> "ur"	294
a + m + e -> "ame"	295
l + o -> "lo"	296
s	297
E + x -> "Ex"	298
e + l -> "el"	299
a + v -> "av"	300
q + u -> "qu"	301
e + d -> "ed"	302
a + b -> "ab"	303
L + i + s + t -> "List"	304
p + t + i + o + n -> "ption"	305
e + s + t -> "est"	306
i + c -> "ic"	307
u + l -> "ul"	308
S + t + r + i + n + g -> "String"	309
x + t -> "xt"	310
o + d + e -> "ode"	311
e + s + s -> "ess"	312
i + g -> "ig"	313
a + y -> "ay"	314
R + e -> "Re"	315
a + v + a -> "ava"	316
. + p -> ".p"	317
( + ) + { + <EOL> -> "(){<EOL>"	318
t + e + r -> "ter"	319
e + c + t -> "ect"	320
j + a + v + a -> "java"	321
y + p -> "yp"	322
s + e -> "se"	323
u + e -> "ue"	324
if + ( -> "if("	325
o + r + g -> "org"	326
a + g + e -> "age"	327
i + m -> "im"	328
p	329
u + m -> "um"	330
c + e + p + t + i + o + n -> "ception"	331
S + t -> "St"	332
. + s + e + t -> ".set"	333
m	334
e + m -> "em"	335
d + e + r -> "der"	336
E + x + c + e + p + t + i + o + n -> "Exception"	337
o + t -> "ot"	338
= + new -> "=new"	339
e + w -> "ew"	340
t + i + l -> "til"	341
a + n + d -> "and"	342
y + p + e -> "ype"	343
c + h -> "ch"	344
a + b + l + e -> "able"	345
I + d -> "Id"	346
v + i -> "vi"	347
j + e + c + t -> "ject"	348
p + l -> "pl"	349
<	350
P + r + o -> "Pro"	351
t + o -> "to"	352
p + e + r -> "per"	353
s + e + r + t -> "sert"	354
public + void -> "publicvoid"	355
i + o + n -> "ion"	356
F + i -> "Fi"	357
a + l + u + e -> "alue"	358
) + ) + ; + <EOL> -> "));<EOL>"	359
g + e + t -> "get"	360
N + a + m + e -> "Name"	361
o + m + . -> "om."	362
import + j + a + v + a -> "importjava"	363
r + e + s -> "res"	364
a + t + a -> "ata"	365
, + STRING_LITERAL -> ",STRING_LITERAL"	366
o + r + g + . -> "org."	367
u + p -> "up"	368
R + e + s -> "Res"	369
m + e + n + t -> "ment"	370
this + . -> "this."	371
( + ) + ) + ; + <EOL> -> "());<EOL>"	372
a + d + d -> "add"	373
o + c -> "oc"	374
t + y -> "ty"	375
return	376
public	377
T + y + p + e -> "Type"	378
u + l + t -> "ult"	379
b + j + e + c + t -> "bject"	380
, + DECIMAL_LITERAL -> ",DECIMAL_LITERAL"	381
E + n -> "En"	382
i + z -> "iz"	383
o + g -> "og"	384
o + d -> "od"	385
C + l -> "Cl"	386
e + . -> "e."	387
v + e + r -> "ver"	388
i + n + t -> "int"	389
A + r -> "Ar"	390
o + u + t -> "out"	391
M + a + p -> "Map"	392
t + h -> "th"	393
f + i -> "fi"	394
S + e + r -> "Ser"	395
r + i -> "ri"	396
t + e + x + t -> "text"	397
u + i + l -> "uil"	398
. + u -> ".u"	399
o + s -> "os"	400
) + . -> ")."	401
a + c + k -> "ack"	402
( + DECIMAL_LITERAL -> "(DECIMAL_LITERAL"	403
a + s + s + e + r + t -> "assert"	404
e + x + t -> "ext"	405
O + b + j + e + c + t -> "Object"	406
( + STRING_LITERAL + ) + ; + <EOL> -> "(STRING_LITERAL);<EOL>"	407
T + o -> "To"	408
e + x -> "ex"	409
S + t + r + i + n + g -> "String"	410
A + c -> "Ac"	411
>	412
C + o + m -> "Com"	413
t + o + r -> "tor"	414
p + o + n -> "pon"	415
o + u + n -> "oun"	416
. + m -> ".m"	417
V + i -> "Vi"	418
import + c -> "importc"	419
int	420
e + y -> "ey"	421
. + u + t + i + l -> ".util"	422
f + i + g -> "fig"	423
+ + STRING_LITERAL -> "+STRING_LITERAL"	424
v + i + c + e -> "vice"	425
P + a + r -> "Par"	426
e + n + d -> "end"	427
q + u + a + l -> "qual"	428
e + r + . -> "er."	429
C + h -> "Ch"	430
a + s + s -> "ass"	431
u + b -> "ub"	432
V + i + e + w -> "View"	433
r + a + y -> "ray"	434
final	435
p + u + t -> "put"	436
o + u + r -> "our"	437
import + o + r + g + . -> "importorg."	438
o + w -> "ow"	439
o + r + m -> "orm"	440
s + ( -> "s("	441
l + e + c -> "lec"	442
a + i + n -> "ain"	443
public + void -> "publicvoid"	444
S	445
O + N -> "ON"	446
a + n + g -> "ang"	447
i + t + y -> "ity"	448
public + static -> "publicstatic"	449
u + s -> "us"	450
import + c + o + m + . -> "importcom."	451
E + R -> "ER"	452
A + r + r + a + y -> "Array"	453
u + i + l + d + e + r -> "uilder"	454
v + e + n + t -> "vent"	455
e + n + e + r -> "ener"	456
d	457
a + t + h -> "ath"	458
D + a + t + a -> "Data"	459
C + o + l -> "Col"	460
. + u + t + i + l + . -> ".util."	461
F + i + l + e -> "File"	462
( + S + t + r + i + n + g -> "(String"	463
q + u + e + s + t -> "quest"	464
V + a + l + u + e -> "Value"	465
o + . -> "o."	466
o + d + e + l -> "odel"	467
T + r -> "Tr"	468
w + o + r -> "wor"	469
v + e -> "ve"	470
b	471
f + f -> "ff"	472
g + e + r -> "ger"	473
o + p -> "op"	474
( + ) + . -> "()."	475
a + s + s + e + r + t -> "assert"	476
s + e + t -> "set"	477
e + l + d -> "eld"	478
i + n + d -> "ind"	479
e + s + s + a + g + e -> "essage"	480
i + z + e -> "ize"	481
[ + ] -> "[]"	482
t + e + m -> "tem"	483
C + o + n + f + i + g -> "Config"	484
a + c + h -> "ach"	485
s + t + a + n -> "stan"	486
i + b -> "ib"	487
a + t + o + r -> "ator"	488
= + DECIMAL_LITERAL -> "=DECIMAL_LITERAL"	489
e + r + s -> "ers"	490
p + r -> "pr"	491
B + y -> "By"	492
( + c -> "(c"	493
o + r + t -> "ort"	494
o + u + r + c + e -> "ource"	495
D + e -> "De"	496
i + e + n + t -> "ient"	497
S + e + t -> "Set"	498
a + s + e -> "ase"	499
l + o + c -> "loc"	500
p + o + n + s + e -> "ponse"	501
private	502
r + e + a + t + e -> "reate"	503
A + s -> "As"	504
T + e + x + t -> "Text"	505
t + i + t + y -> "tity"	506
S + e + r + v + i + c + e -> "Service"	507
r + i + t -> "rit"	508
. + c + o + n -> ".con"	509
E + _ -> "E_"	510
v + a + l + u + e -> "value"	511
class	512
h + t -> "ht"	513
T + i + m -> "Tim"	514
I + N -> "IN"	515
u + c -> "uc"	516
i + p -> "ip"	517
B + u + i + l + d + e + r -> "Builder"	518
s + t + r -> "str"	519
L + o + g -> "Log"	520
T + h -> "Th"	521
e + a + m -> "eam"	522
+	523
U + t + i + l -> "Util"	524
import + j + a + v + a + . + u + t + i + l + . -> "importjava.util."	525
l + e + r -> "ler"	526
s + ; + <EOL> -> "s;<EOL>"	527
a + r + t -> "art"	528
o + u + n + t -> "ount"	529
. + f -> ".f"	530
} + else -> "}else"	531
a + p + p -> "app"	532
( + STRING_LITERAL + , -> "(STRING_LITERAL,"	533
d + e + x -> "dex"	534
( + new -> "(new"	535
t + e + d -> "ted"	536
u + r + e -> "ure"	537
o + o -> "oo"	538
K + e + y -> "Key"	539
a + n + n -> "ann"	540
f	541
. + a + d + d -> ".add"	542
a + c + e -> "ace"	543
L + i + s + t + < -> "List<"	544
. + d -> ".d"	545
n	546
C + o + n + t + e + x + t -> "Context"	547
I + t + e + m -> "Item"	548
C + l + a + s + s -> "Class"	549
. + b -> ".b"	550
. + l -> ".l"	551
f + o -> "fo"	552
y + s + t -> "yst"	553
l + o + g -> "log"	554
throws	555
I + m -> "Im"	556
A + p -> "Ap"	557
y + s + t + e + m -> "ystem"	558
if + ( -> "if("	559
c + o + n -> "con"	560
o + r + e -> "ore"	561
M + a + n -> "Man"	562
t	563
T + _ -> "T_"	564
) + ) + { + <EOL> -> ")){<EOL>"	565
A + d -> "Ad"	566
, + DECIMAL_LITERAL + , + DECIMAL_LITERAL -> ",DECIMAL_LITERAL,DECIMAL_LITERAL"	567
E + q + u + a + l -> "Equal"	568
r + e + s + u + l + t -> "result"	569
v + a + l -> "val"	570
i + t + i + o + n -> "ition"	571
p + a + r -> "par"	572
( + ) + . + g + e + t -> "().get"	573
i + a + l -> "ial"	574
R + E -> "RE"	575
i + n + e -> "ine"	576
M + e + s + s + a + g + e -> "Message"	577
a + l + l -> "all"	578
e + n + g -> "eng"	579
a + c + t + o + r -> "actor"	580
t + e + n + t -> "tent"	581
T + e + s + t -> "Test"	582
A + n -> "An"	583
w + o + r + k -> "work"	584
c + e + s + s -> "cess"	585
E + x + c + e + p + t + i + o + n + { + <EOL> -> "Exception{<EOL>"	586
I + D -> "ID"	587
r + o + i + d -> "roid"	588
s + o + n -> "son"	589
r + e -> "re"	590
a + n + s -> "ans"	591
null + ) + { + <EOL> -> "null){<EOL>"	592
S + e -> "Se"	593
M + e + t -> "Met"	594
STRING_LITERAL + ; + <EOL> -> "STRING_LITERAL;<EOL>"	595
R + e + q + u + e + s + t -> "Request"	596
S + t + a + t + e -> "State"	597
U + s + e + r -> "User"	598
T + i + m + e -> "Time"	599
F + i + e + l + d -> "Field"	600
a + s + h -> "ash"	601
i + t + h -> "ith"	602
a + n + d + r + o + i + d -> "android"	603
A + T -> "AT"	604
o + r + y -> "ory"	605
r + a + m + e -> "rame"	606
t + p -> "tp"	607
A + t -> "At"	608
< + S + t + r + i + n + g -> "<String"	609
c + r + i -> "cri"	610
r + o + u + p -> "roup"	611
e + r + y -> "ery"	612
. + n -> ".n"	613
( + ) + , -> "(),"	614
l	615
public + class -> "publicclass"	616
g + r -> "gr"	617
a + s + t -> "ast"	618
a + i + l -> "ail"	619
o + c + k -> "ock"	620
E + v + e + n + t -> "Event"	621
M + a + n + a + g -> "Manag"	622
l + e + m + e + n + t -> "lement"	623
r + i + n + t -> "rint"	624
u + r + r -> "urr"	625
N + o + d + e -> "Node"	626
i + n -> "in"	627
t + r + y -> "try"	628
. + w -> ".w"	629
null + ; + <EOL> -> "null;<EOL>"	630
. + c + o + m -> ".com"	631
u + l + l -> "ull"	632
, + S + t + r + i + n + g -> ",String"	633
. + class -> ".class"	634
, + STRING_LITERAL + ) + ; + <EOL> -> ",STRING_LITERAL);<EOL>"	635
a + d + e + r -> "ader"	636
A + l -> "Al"	637
I + n + t + e -> "Inte"	638
= + DECIMAL_LITERAL + ; + <EOL> -> "=DECIMAL_LITERAL;<EOL>"	639
o + b -> "ob"	640
t + i + c -> "tic"	641
P + a + t + h -> "Path"	642
i + o + . -> "io."	643
i + c + a + t + i + o + n -> "ication"	644
a + c + t + o + r + y -> "actory"	645
R + e + s + u + l + t -> "Result"	646
r + a -> "ra"	647
R + e + s + p + o + n + s + e -> "Response"	648
p + o + s -> "pos"	649
P + r + o + p + e + r -> "Proper"	650
t + e + s + t -> "test"	651
a + c + t -> "act"	652
r + o + r -> "ror"	653
S + t + r + e + a + m -> "Stream"	654
( + m -> "(m"	655
c + o + n -> "con"	656
P + a + r + a + m -> "Param"	657
D + a + t + e -> "Date"	658
DECIMAL_LITERAL + ] -> "DECIMAL_LITERAL]"	659
Q + u -> "Qu"	660
e + n + g + t + h -> "ength"	661
e + n + c + e -> "ence"	662
= + STRING_LITERAL + ; + <EOL> -> "=STRING_LITERAL;<EOL>"	663
( + int -> "(int"	664
l + o + c + k -> "lock"	665
a + t + c + h -> "atch"	666
public + void + s + e + t -> "publicvoidset"	667
t + i + m -> "tim"	668
e + s + . -> "es."	669
( + ) + ) + { + <EOL> -> "()){<EOL>"	670
n + a + m + e -> "name"	671
i + g + h + t -> "ight"	672
boolean	673
e + s + s + i + o + n -> "ession"	674
) + <EOL> -> ")<EOL>"	675
i + r -> "ir"	676
S + T -> "ST"	677
a + y + o + u + t -> "ayout"	678
o + t + a + t + i + o + n -> "otation"	679
E + N -> "EN"	680
P + o -> "Po"	681
s + t + a + n + c + e -> "stance"	682
a + r + d -> "ard"	683
g + o -> "go"	684
f + t -> "ft"	685
a + x -> "ax"	686
r + e + a + d -> "read"	687
import + a + n + d + r + o + i + d -> "importandroid"	688
L + i + s + t + e + n + e + r -> "Listener"	689
M + a + n + a + g + e + r -> "Manager"	690
E + n + t + i + t + y -> "Entity"	691
. + p + r + i + n + t -> ".print"	692
p + o + r + t -> "port"	693
c + o + m + . -> "com."	694
import + o + r + g -> "importorg"	695
u + r + r + e + n + t -> "urrent"	696
b + u -> "bu"	697
e + q + u + a + l -> "equal"	698
I + n + f + o -> "Info"	699
I + n + t + e + g + e + r -> "Integer"	700
o + r + g + . -> "org."	701
i + t + . -> "it."	702
private + static -> "privatestatic"	703
( + s -> "(s"	704
u + m + e + n + t -> "ument"	705
h + o + d -> "hod"	706
u + r + a + t + i + o + n -> "uration"	707
} + else + { + <EOL> -> "}else{<EOL>"	708
O + R -> "OR"	709
U + n -> "Un"	710
u + t + e -> "ute"	711
d + a + t + e -> "date"	712
t + i + v -> "tiv"	713
r + o + m -> "rom"	714
G + r + o + u + p -> "Group"	715
} + catch -> "}catch"	716
e + c + t + i + o + n -> "ection"	717
M + o + d + e + l -> "Model"	718
P + l -> "Pl"	719
l + e + t -> "let"	720
[ + DECIMAL_LITERAL + ] -> "[DECIMAL_LITERAL]"	721
f + o + r + m -> "form"	722
b + e + r -> "ber"	723
A + L -> "AL"	724
s + i + o + n -> "sion"	725
C + o + d + e -> "Code"	726
o + n + g -> "ong"	727
f + i + l + e -> "file"	728
F + a + c + t + o + r + y -> "Factory"	729
} + catch + ( -> "}catch("	730
a + r + i -> "ari"	731
e + ) + { + <EOL> -> "e){<EOL>"	732
u + s + e + r -> "user"	733
try + { + <EOL> -> "try{<EOL>"	734
S + t + a + t -> "Stat"	735
a + p + p + e + n + d -> "append"	736
C + l + i + e + n + t -> "Client"	737
k + e + y -> "key"	738
import + o + r + g + . + s -> "importorg.s"	739
r + o + w -> "row"	740
i + r + e -> "ire"	741
. + p + u + t -> ".put"	742
l + e + c + t + i + o + n -> "lection"	743
i + g + n -> "ign"	744
p + l + e -> "ple"	745
N + u + l + l -> "Null"	746
L + o + c -> "Loc"	747
m + o + n -> "mon"	748
f + e + r -> "fer"	749
I + O -> "IO"	750
, + STRING_LITERAL + , + STRING_LITERAL -> ",STRING_LITERAL,STRING_LITERAL"	751
m + o -> "mo"	752
O + r -> "Or"	753
O + f -> "Of"	754
D + e + f -> "Def"	755
y + s + t + e + m + . -> "ystem."	756
: + <EOL> -> ":<EOL>"	757
O + n -> "On"	758
( + p -> "(p"	759
k + e + n -> "ken"	760
t + a + i + n -> "tain"	761
. + p + r + o -> ".pro"	762
( + STRING_LITERAL + ) -> "(STRING_LITERAL)"	763
A + c + t + i + o + n -> "Action"	764
a + r + g -> "arg"	765
p + r + i + n + g -> "pring"	766
h	767
t + r + i + b -> "trib"	768
t + e + r + n -> "tern"	769
r + a + m + e + w + o + r + k -> "ramework"	770
u + d -> "ud"	771
H + a + n + d -> "Hand"	772
e + c + k -> "eck"	773
E + l + e + m + e + n + t -> "Element"	774
a + s + k -> "ask"	775
f + f + e + r -> "ffer"	776
i + . -> "i."	777
- + DECIMAL_LITERAL -> "-DECIMAL_LITERAL"	778
i + n + g + . -> "ing."	779
D + e + s -> "Des"	780
S + c -> "Sc"	781
I + n + s + t + a + n + c + e -> "Instance"	782
final + S + t + r + i + n + g -> "finalString"	783
o + r + d -> "ord"	784
extends	785
t + o + n -> "ton"	786
a + p + a + c + h -> "apach"	787
u + l + e -> "ule"	788
; + i -> ";i"	789
H + t -> "Ht"	790
s + e + t -> "set"	791
m + p -> "mp"	792
e + b -> "eb"	793
s + t -> "st"	794
r + i + t + e + r -> "riter"	795
a + s + s + e + r + t + E + q + u + a + l -> "assertEqual"	796
L + a + y + o + u + t -> "Layout"	797
P + r + e -> "Pre"	798
= + null + ; + <EOL> -> "=null;<EOL>"	799
I + n + d + e + x -> "Index"	800
v + i + e + w -> "view"	801
V + a + l -> "Val"	802
p + r + o -> "pro"	803
a + c + t + i + o + n -> "action"	804
u + t + t + o + n -> "utton"	805
j + u + n -> "jun"	806
r	807
S + y + s + t + e + m + . -> "System."	808
o + g + l + e -> "ogle"	809
S + h -> "Sh"	810
A + s + s + e + r + t -> "Assert"	811
t + o + S + t + r + i + n + g -> "toString"	812
e + n + c -> "enc"	813
o + r + m + a + t -> "ormat"	814
a + n + n + o + t + a + t + i + o + n -> "annotation"	815
H + a + s + h -> "Hash"	816
u + s + t -> "ust"	817
t + i + v + i + t + y -> "tivity"	818
u + n + c -> "unc"	819
u + t + h -> "uth"	820
e + a + n -> "ean"	821
i + f -> "if"	822
) + throws -> ")throws"	823
. + i + n -> ".in"	824
H + t + t + p -> "Http"	825
f + r + a + m + e + w + o + r + k -> "framework"	826
p + e + c -> "pec"	827
A + R -> "AR"	828
U + R -> "UR"	829
S + t + r + i + n + g + g + e + t -> "Stringget"	830
u + m + n -> "umn"	831
N + o + t -> "Not"	832
H + e -> "He"	833
false + ; + <EOL> -> "false;<EOL>"	834
p + a + r -> "par"	835
D + E -> "DE"	836
B + u -> "Bu"	837
i + c + k -> "ick"	838
F + i + l -> "Fil"	839
T + I -> "TI"	840
t + i + e + s -> "ties"	841
g + o + o + g + l + e -> "google"	842
m + l -> "ml"	843
i + a -> "ia"	844
s + . + g + e + t -> "s.get"	845
m + a + n + d -> "mand"	846
. + r + e -> ".re"	847
u + i + l + d -> "uild"	848
a + u + l + t -> "ault"	849
p + o + n + e + n + t -> "ponent"	850
j + u + n + i + t + . -> "junit."	851
R + e + c -> "Rec"	852
Q + u + e + r + y -> "Query"	853
!= + null + ) + { + <EOL> -> "!=null){<EOL>"	854
T + r + a + n + s -> "Trans"	855
( + DECIMAL_LITERAL + ) + ; + <EOL> -> "(DECIMAL_LITERAL);<EOL>"	856
N + u + m -> "Num"	857
w	858
p + o + s + i + t -> "posit"	859
A + N -> "AN"	860
O + u + t -> "Out"	861
l + n -> "ln"	862
I + n + p + u + t -> "Input"	863
) + , -> "),"	864
O + p + t + i + o + n -> "Option"	865
. + i + s -> ".is"	866
. + S -> ".S"	867
= + ( -> "=("	868
import + j + a + v + a + . -> "importjava."	869
> + ( + ) + ; + <EOL> -> ">();<EOL>"	870
p + r + i + n + g + f + r + a + m + e + w + o + r + k -> "pringframework"	871
p + l + i + c + a + t + i + o + n -> "plication"	872
C + o + n + f + i + g + u + r + a + t + i + o + n -> "Configuration"	873
s + t + a + n + t -> "stant"	874
= + c -> "=c"	875
o + u + n + d -> "ound"	876
t + r + o + l -> "trol"	877
C + o + n + n -> "Conn"	878
M + E -> "ME"	879
P + r + o + p + e + r + t + y -> "Property"	880
. + g -> ".g"	881
c + h -> "ch"	882
, + new -> ",new"	883
+ + STRING_LITERAL + + + STRING_LITERAL -> "+STRING_LITERAL+STRING_LITERAL"	884
a + b + e + l -> "abel"	885
o + r + e + . -> "ore."	886
L + i + s + t + ; + <EOL> -> "List;<EOL>"	887
e + v + e + n + t -> "event"	888
S + y + s + t + e + m + . + o + u + t -> "System.out"	889
E + x + c + e + p + t + i + o + n + e + ) + { + <EOL> -> "Exceptione){<EOL>"	890
D + _ -> "D_"	891
S + i + z + e -> "Size"	892
. + a + s + s + e + r + t -> ".assert"	893
u + n + d -> "und"	894
a + y + e + r -> "ayer"	895
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k -> "importorg.springframework"	896
. + c + r + e + a + t + e -> ".create"	897
L + E -> "LE"	898
( + ( -> "(("	899
a + r + c + h -> "arch"	900
DECIMAL_LITERAL + ) + { + <EOL> -> "DECIMAL_LITERAL){<EOL>"	901
t + i + v + e -> "tive"	902
l + e + a + n -> "lean"	903
L + o + n + g -> "Long"	904
C + o + l + o + r -> "Color"	905
. + p + r + i + n + t + l + n -> ".println"	906
. + s + e + r -> ".ser"	907
U + p -> "Up"	908
throw + new -> "thrownew"	909
P + a + n -> "Pan"	910
T + a + b + l + e -> "Table"	911
s + ) + { + <EOL> -> "s){<EOL>"	912
i + n + k -> "ink"	913
( + S + t + r + i + n + g -> "(String"	914
L + O -> "LO"	915
B + u + t + t + o + n -> "Button"	916
)	917
( + ) + throws -> "()throws"	918
o + s + t -> "ost"	919
if + ( + ! -> "if(!"	920
A + s + s + e + r + t + . + a + s + s + e + r + t -> "Assert.assert"	921
I + n + t -> "Int"	922
r + i + t + e -> "rite"	923
M + e + t + h + o + d -> "Method"	924
i + t + e + m -> "item"	925
l + i + e + n + t -> "lient"	926
a + r + g + e + t -> "arget"	927
b + o -> "bo"	928
E + r -> "Er"	929
c + o + m -> "com"	930
a + n + g + e -> "ange"	931
j	932
d + r -> "dr"	933
B + l + o + c + k -> "Block"	934
E + x + c + e + p + t + i + o + n + ; + <EOL> -> "Exception;<EOL>"	935
C + o + u + n + t -> "Count"	936
a + r + y -> "ary"	937
y + n -> "yn"	938
. + c + o + m + m + o + n -> ".common"	939
L + e -> "Le"	940
W + i + t + h -> "With"	941
R + e + s + o + u + r + c + e -> "Resource"	942
s + = -> "s="	943
true + ; + <EOL> -> "true;<EOL>"	944
G + r -> "Gr"	945
e + x -> "ex"	946
k + e -> "ke"	947
e + t + e + r -> "eter"	948
( + this -> "(this"	949
. + s + i + z + e -> ".size"	950
import + j + a + v + a + x -> "importjavax"	951
public + S + t + r + i + n + g + g + e + t -> "publicStringget"	952
n + e + t -> "net"	953
. + h -> ".h"	954
R + e + g -> "Reg"	955
i + o -> "io"	956
u + c + t -> "uct"	957
s + ) + ; + <EOL> -> "s);<EOL>"	958
o + o + l + e + a + n -> "oolean"	959
import + o + r + g + . + a + p + a + c + h -> "importorg.apach"	960
( + d -> "(d"	961
c + r + i + p -> "crip"	962
l + o + a + d -> "load"	963
H + a + n + d + l + e + r -> "Handler"	964
E + r + r + o + r -> "Error"	965
I + n + t + e + r -> "Inter"	966
e + n + t + i + t + y -> "entity"	967
A + t + t + r + i + b -> "Attrib"	968
r + e + s + p + o + n + s + e -> "response"	969
R + u + n -> "Run"	970
. + j -> ".j"	971
S + _ -> "S_"	972
L + o + g + g + e + r -> "Logger"	973
. + a + n + n + o + t + a + t + i + o + n -> ".annotation"	974
l + o + g -> "log"	975
l + i + s + t -> "list"	976
p + o + s + i + t + o + r + y -> "pository"	977
C + o + n + s + t + a + n + t -> "Constant"	978
p + o -> "po"	979
v + i + d -> "vid"	980
t + i + m + e -> "time"	981
F + o + r -> "For"	982
I + m + a + g + e -> "Image"	983
A + c + t + i + v + i + t + y -> "Activity"	984
p + r + o -> "pro"	985
C + O -> "CO"	986
J + s + o + n -> "Json"	987
, + DECIMAL_LITERAL + ) + ; + <EOL> -> ",DECIMAL_LITERAL);<EOL>"	988
B + u + f + f + e + r -> "Buffer"	989
e + r + ; + <EOL> -> "er;<EOL>"	990
l + o + w -> "low"	991
, + null -> ",null"	992
A + l + l -> "All"	993
q + l -> "ql"	994
S + y + s + t + e + m + . + o + u + t + . + p + r + i + n + t + l + n -> "System.out.println"	995
t + i + a + l -> "tial"	996
T + o + k + e + n -> "Token"	997
== + null + ) + { + <EOL> -> "==null){<EOL>"	998
G + e + n + e + r -> "Gener"	999
a + p + h -> "aph"	1000
S + I -> "SI"	1001
a + p + t + e + r -> "apter"	1002
A + C -> "AC"	1003
o + w + n -> "own"	1004
C + o + l + l + e + c + t + i + o + n -> "Collection"	1005
public + void + t + e + s + t -> "publicvoidtest"	1006
t + y + p + e -> "type"	1007
A + p + p + l + i + c + a + t + i + o + n -> "Application"	1008
P + o + s -> "Pos"	1009
t + . -> "t."	1010
B + a + s + e -> "Base"	1011
E + m + p -> "Emp"	1012
, + FLOAT_LITERAL -> ",FLOAT_LITERAL"	1013
r + e + s + u + l + t -> "result"	1014
package + c + o + m + . -> "packagecom."	1015
R + O -> "RO"	1016
N + o -> "No"	1017
import + static -> "importstatic"	1018
t + i + f -> "tif"	1019
a + n + c + e -> "ance"	1020
g + e -> "ge"	1021
for + ( + int -> "for(int"	1022
T + E -> "TE"	1023
P + e + r -> "Per"	1024
M + a + p + < + S + t + r + i + n + g -> "Map<String"	1025
. + o -> ".o"	1026
break + ; + <EOL> -> "break;<EOL>"	1027
e + q + u + a + l + s + ( -> "equals("	1028
[ + ] -> "[]"	1029
C + o + m + p + o + n + e + n + t -> "Component"	1030
o + o + k -> "ook"	1031
u + e + s -> "ues"	1032
r + a + w -> "raw"	1033
A + r + g -> "Arg"	1034
. + s + w -> ".sw"	1035
e + n + d + e + r -> "ender"	1036
S + o + u + r + c + e -> "Source"	1037
S + t + a + c + k -> "Stack"	1038
f + i + e + l + d -> "field"	1039
C + o + n + t + e + n + t -> "Content"	1040
u + s + e -> "use"	1041
C + a + l + l -> "Call"	1042
D + i + s -> "Dis"	1043
T + Y -> "TY"	1044
F + r + o + m -> "From"	1045
( + ) + ) -> "())"	1046
l + l -> "ll"	1047
. + p + a + r -> ".par"	1048
. + m + o + d + e + l -> ".model"	1049
a + w -> "aw"	1050
= + m -> "=m"	1051
a + s + s + e + r + t + E + q + u + a + l + s -> "assertEquals"	1052
L + a + b + e + l -> "Label"	1053
( + c + o + n -> "(con"	1054
. + c + o + r + e + . -> ".core."	1055
, + c -> ",c"	1056
A + G -> "AG"	1057
S + t + a + t + u + s -> "Status"	1058
C + o + n + n + e + c + t + i + o + n -> "Connection"	1059
return + new -> "returnnew"	1060
o + l + d + e + r -> "older"	1061
( + b -> "(b"	1062
M	1063
for + ( -> "for("	1064
. + M -> ".M"	1065
o + n + e -> "one"	1066
o + c + u + m + e + n + t -> "ocument"	1067
F + u + n + c -> "Func"	1068
f + e + r + e + n + c + e -> "ference"	1069
h + e + r -> "her"	1070
S + O + N -> "SON"	1071
. + a + p + p + e + n + d -> ".append"	1072
final + int -> "finalint"	1073
C + o + l + u + m + n -> "Column"	1074
. + r -> ".r"	1075
s + h -> "sh"	1076
A + b -> "Ab"	1077
b + a + c + k -> "back"	1078
u + r + n -> "urn"	1079
. + c + h -> ".ch"	1080
C + o + m + m + a + n + d -> "Command"	1081
t + e + r + n + a + l -> "ternal"	1082
import + j + a + v + a + . + i + o + . -> "importjava.io."	1083
L + o -> "Lo"	1084
s + t + a + r + t -> "start"	1085
i + t + o + r -> "itor"	1086
!= + null -> "!=null"	1087
g	1088
A + n + d -> "And"	1089
v + a + l + i + d -> "valid"	1090
D + e + f + a + u + l + t -> "Default"	1091
} + ) + ; + <EOL> -> "});<EOL>"	1092
D + o -> "Do"	1093
L + i + n + e -> "Line"	1094
T + a + s + k -> "Task"	1095
e + n + u -> "enu"	1096
true + ) + ; + <EOL> -> "true);<EOL>"	1097
( + STRING_LITERAL + + -> "(STRING_LITERAL+"	1098
++ + ) + { + <EOL> -> "++){<EOL>"	1099
n + e + w -> "new"	1100
D + e + t -> "Det"	1101
r + e + d -> "red"	1102
C + o + n + t + r + o + l -> "Control"	1103
v + a + r -> "var"	1104
s + t + r -> "str"	1105
q + u + e + r + y -> "query"	1106
( + DECIMAL_LITERAL + , -> "(DECIMAL_LITERAL,"	1107
D + e + c -> "Dec"	1108
i + l + l -> "ill"	1109
L + i + s + t + < -> "List<"	1110
. + a + n + n + o + t + a + t + i + o + n + . -> ".annotation."	1111
. + l + a + n + g -> ".lang"	1112
. + p + r + o + t + o -> ".proto"	1113
T + r + u + e -> "True"	1114
O + p + e + r -> "Oper"	1115
F + I -> "FI"	1116
i + r + e + c -> "irec"	1117
. + class + ) + ; + <EOL> -> ".class);<EOL>"	1118
[ + i -> "[i"	1119
v + l + e + t -> "vlet"	1120
( + R -> "(R"	1121
E + d -> "Ed"	1122
u + p + d + a + t + e -> "update"	1123
E + m + p + t + y -> "Empty"	1124
f + . -> "f."	1125
O + u + t + p + u + t -> "Output"	1126
) + . + g + e + t -> ").get"	1127
v + e + l -> "vel"	1128
r + e + e -> "ree"	1129
e + r + r + o + r -> "error"	1130
s + g -> "sg"	1131
c + r + i + p + t + i + o + n -> "cription"	1132
S + u + b -> "Sub"	1133
. + l + e + n + g + t + h -> ".length"	1134
a + d + d -> "add"	1135
( + STRING_LITERAL + ) + ) + ; + <EOL> -> "(STRING_LITERAL));<EOL>"	1136
u + g -> "ug"	1137
private + void -> "privatevoid"	1138
false + ) + ; + <EOL> -> "false);<EOL>"	1139
N + u + m + b + e + r -> "Number"	1140
private + final -> "privatefinal"	1141
a + c + h + e -> "ache"	1142
B + y + t + e -> "Byte"	1143
u + b + l + e -> "uble"	1144
P + a + g + e -> "Page"	1145
t + i + n + g -> "ting"	1146
R + e + t -> "Ret"	1147
( + ) + ) + . -> "())."	1148
d + e -> "de"	1149
= + g + e + t -> "=get"	1150
F + o + r + m + a + t -> "Format"	1151
S + E -> "SE"	1152
== + null -> "==null"	1153
R + o -> "Ro"	1154
O + N + _ -> "ON_"	1155
F + i + l + t + e + r -> "Filter"	1156
B + o -> "Bo"	1157
c + o + u + n + t -> "count"	1158
( + g + e + t -> "(get"	1159
B + o + o + l + e + a + n -> "Boolean"	1160
e + l + p + e + r -> "elper"	1161
. + s + t + r -> ".str"	1162
c + h + e + m -> "chem"	1163
w + o + r + d -> "word"	1164
i + n + d + e + x -> "index"	1165
m + o + v + e -> "move"	1166
a + t + e + d -> "ated"	1167
+ + DECIMAL_LITERAL -> "+DECIMAL_LITERAL"	1168
e + c + t + o + r -> "ector"	1169
a + m + e + s -> "ames"	1170
A + d + a + p + t + e + r -> "Adapter"	1171
M + o + d -> "Mod"	1172
f + l -> "fl"	1173
C + h + a + r -> "Char"	1174
a + i + n + t -> "aint"	1175
E + n + t + r + y -> "Entry"	1176
, + int -> ",int"	1177
R + e + p + o + s + i + t + o + r + y -> "Repository"	1178
l + e + c + t -> "lect"	1179
e + n + s + i + o + n -> "ension"	1180
l + e + g -> "leg"	1181
T + O -> "TO"	1182
i + d + t + h -> "idth"	1183
J + S + O + N -> "JSON"	1184
A + u + t + h -> "Auth"	1185
T + y + p + e + . -> "Type."	1186
a + t + e + g -> "ateg"	1187
a + n + t -> "ant"	1188
C	1189
r + a + g -> "rag"	1190
I + N + G -> "ING"	1191
+ + STRING_LITERAL + + -> "+STRING_LITERAL+"	1192
g + e + r + . -> "ger."	1193
e + r + s + i + o + n -> "ersion"	1194
T + h + a + t -> "That"	1195
> + g + e + t -> ">get"	1196
( + r + e -> "(re"	1197
S + e + r + v + e + r -> "Server"	1198
V + e + r + s + i + o + n -> "Version"	1199
private + S + t + r + i + n + g -> "privateString"	1200
d + a + t + a -> "data"	1201
i + a + l + o + g -> "ialog"	1202
a + p + i + . -> "api."	1203
I + m + p + l -> "Impl"	1204
, + m -> ",m"	1205
_	1206
h + e -> "he"	1207
[ + i + ] -> "[i]"	1208
U + L -> "UL"	1209
t + r + a + n + s -> "trans"	1210
( + int -> "(int"	1211
= + s -> "=s"	1212
P + a + n + e + l -> "Panel"	1213
A + t + t + r + i + b + u + t + e -> "Attribute"	1214
N + A -> "NA"	1215
. + c + l + o -> ".clo"	1216
A + r + r + a + y + L + i + s + t -> "ArrayList"	1217
e + e -> "ee"	1218
B + e + a + n -> "Bean"	1219
( + i -> "(i"	1220
E + R + _ -> "ER_"	1221
o + r + d + e + r -> "order"	1222
s + . + a + d + d -> "s.add"	1223
o + r + g + . + j + u + n + i + t + . -> "org.junit."	1224
M + o + d + e -> "Mode"	1225
( + final -> "(final"	1226
r + s + t -> "rst"	1227
} + else + if + ( -> "}elseif("	1228
i + a + l + i + z -> "ializ"	1229
A + d + d + r -> "Addr"	1230
for + ( + int + i -> "for(inti"	1231
E + x + e + c -> "Exec"	1232
u + a + l -> "ual"	1233
U + t + i + l + s + . -> "Utils."	1234
P + r + o + v + i + d -> "Provid"	1235
. + s + w + i + n + g + . -> ".swing."	1236
( + STRING_LITERAL + ) + . -> "(STRING_LITERAL)."	1237
P + o + i + n + t -> "Point"	1238
i + e + s -> "ies"	1239
T + a + g -> "Tag"	1240
V + i + s -> "Vis"	1241
i + l + d -> "ild"	1242
P + a + r + a + m + e + t + e + r -> "Parameter"	1243
a + n + n + e + l -> "annel"	1244
return + false + ; + <EOL> -> "returnfalse;<EOL>"	1245
g + l -> "gl"	1246
G + e + t -> "Get"	1247
< + > + ( + ) + ; + <EOL> -> "<>();<EOL>"	1248
h + t + t + p -> "http"	1249
t + e + s -> "tes"	1250
( + C -> "(C"	1251
c + r + e + a + t + e -> "create"	1252
C + o + m + p -> "Comp"	1253
o	1254
( + STRING_LITERAL + + -> "(STRING_LITERAL+"	1255
D + o + u + b + l + e -> "Double"	1256
import + o + r + g + . + a + p + a + c + h + e + . -> "importorg.apache."	1257
public + boolean -> "publicboolean"	1258
( + S -> "(S"	1259
A + p + p -> "App"	1260
( + STRING_LITERAL + , + STRING_LITERAL + ) + ; + <EOL> -> "(STRING_LITERAL,STRING_LITERAL);<EOL>"	1261
i + m + p + l + e -> "imple"	1262
I + C -> "IC"	1263
D + a + t -> "Dat"	1264
, + <EOL> -> ",<EOL>"	1265
e + l + l -> "ell"	1266
O + r + d + e + r -> "Order"	1267
p + r + e + s + s + i + o + n -> "pression"	1268
T + h + r + e + a + d -> "Thread"	1269
A + P -> "AP"	1270
this + ; + <EOL> -> "this;<EOL>"	1271
P + a + r + s + e + r -> "Parser"	1272
. + i + d -> ".id"	1273
i + f + i -> "ifi"	1274
P + a + c + k -> "Pack"	1275
< + ? -> "<?"	1276
s + p -> "sp"	1277
e + q + u + a + l + s -> "equals"	1278
o + d + y -> "ody"	1279
A + c + c + e + s + s -> "Access"	1280
. + e + x -> ".ex"	1281
S + p -> "Sp"	1282
i + t + e -> "ite"	1283
c + r + i + p + t + o + r -> "criptor"	1284
C + l + i + c + k -> "Click"	1285
T + e + m -> "Tem"	1286
import + n + e + t -> "importnet"	1287
s + = + new -> "s=new"	1288
= + DECIMAL_LITERAL + ; + i -> "=DECIMAL_LITERAL;i"	1289
f + f + s + e + t -> "ffset"	1290
A + d + d + r + e + s + s -> "Address"	1291
r + l -> "rl"	1292
a + p + i -> "api"	1293
p + o + r -> "por"	1294
U + N -> "UN"	1295
u + t + i + o + n -> "ution"	1296
a + r + k -> "ark"	1297
l + d -> "ld"	1298
u + s + t + o + m -> "ustom"	1299
r + a + g + m + e + n + t -> "ragment"	1300
j + a + v + a + x -> "javax"	1301
T + H -> "TH"	1302
W + o + r -> "Wor"	1303
M + a + p + < + S + t + r + i + n + g + , -> "Map<String,"	1304
v + a + l + u + e -> "value"	1305
) + ) -> "))"	1306
O + p -> "Op"	1307
R + o + w -> "Row"	1308
p + l + a + t + e -> "plate"	1309
. + C -> ".C"	1310
a + l + e -> "ale"	1311
n + e + r -> "ner"	1312
s + ( + ) + ; + <EOL> -> "s();<EOL>"	1313
P + r + o + p + e + r + t + i + e + s -> "Properties"	1314
V + a + l + i + d -> "Valid"	1315
a + v + e -> "ave"	1316
s + , -> "s,"	1317
for + ( + int + i + = + DECIMAL_LITERAL + ; + i -> "for(inti=DECIMAL_LITERAL;i"	1318
R + e + c + o + r + d -> "Record"	1319
. + P -> ".P"	1320
i + k -> "ik"	1321
+ + STRING_LITERAL + + -> "+STRING_LITERAL+"	1322
e + p -> "ep"	1323
L + o + c + a + t + i + o + n -> "Location"	1324
( + M -> "(M"	1325
< + T -> "<T"	1326
o + u + t -> "out"	1327
e + ) + ; + <EOL> -> "e);<EOL>"	1328
C + r + e + a + t + e -> "Create"	1329
implements	1330
U + r + l -> "Url"	1331
. + c + o + n + t + a + i + n -> ".contain"	1332
I + s -> "Is"	1333
_ + c -> "_c"	1334
+ + STRING_LITERAL + ) + ; + <EOL> -> "+STRING_LITERAL);<EOL>"	1335
R + e + a + d + e + r -> "Reader"	1336
. + s + h -> ".sh"	1337
a + s + s + e + r + t + T + h + a + t -> "assertThat"	1338
B + y + I + d -> "ById"	1339
( + f -> "(f"	1340
T + h + r + o + w -> "Throw"	1341
I + n + p + u + t + S + t + r + e + a + m -> "InputStream"	1342
o + n + t -> "ont"	1343
s + h -> "sh"	1344
import + j + a + v + a + . + u + t + i + l + . + L + i + s + t + ; + <EOL> -> "importjava.util.List;<EOL>"	1345
i + v -> "iv"	1346
L + i + n + k -> "Link"	1347
P + r + o + c + e + s + s -> "Process"	1348
Y + _ -> "Y_"	1349
m + i + n -> "min"	1350
a + o -> "ao"	1351
e + a + t -> "eat"	1352
b + u + g -> "bug"	1353
l + e + n + g + t + h -> "length"	1354
D + e + l -> "Del"	1355
m + i + s -> "mis"	1356
c + o + l -> "col"	1357
( + ) + ) + ) + ; + <EOL> -> "()));<EOL>"	1358
( + t -> "(t"	1359
==	1360
. + p + r + o + t + o + b + u -> ".protobu"	1361
r + e + g -> "reg"	1362
O + b -> "Ob"	1363
U + p + d + a + t + e -> "Update"	1364
D + o + c + u + m + e + n + t -> "Document"	1365
d + e + d -> "ded"	1366
b + u + i + l + d -> "build"	1367
r + i + c -> "ric"	1368
T + r + e + e -> "Tree"	1369
L + _ -> "L_"	1370
A + S -> "AS"	1371
C + h + e + c + k -> "Check"	1372
n + u + m -> "num"	1373
public + void + o + n -> "publicvoidon"	1374
s + e -> "se"	1375
r + e + t -> "ret"	1376
( + STRING_LITERAL + , + STRING_LITERAL -> "(STRING_LITERAL,STRING_LITERAL"	1377
L + o + c + a + l -> "Local"	1378
A + r + g + u + m + e + n + t -> "Argument"	1379
public + static -> "publicstatic"	1380
a + z -> "az"	1381
H + e + l + p + e + r -> "Helper"	1382
P + r + o + d -> "Prod"	1383
. + s + t -> ".st"	1384
c + e + s -> "ces"	1385
v + i + s -> "vis"	1386
i + d + g + e + t -> "idget"	1387
r + a + f + t -> "raft"	1388
i + s + t + r + y -> "istry"	1389
. + g + e + t + N + a + m + e -> ".getName"	1390
DECIMAL_LITERAL + ; + <EOL> -> "DECIMAL_LITERAL;<EOL>"	1391
m + a + p -> "map"	1392
o + r + g + . + j + u + n + i + t + . + A + s + s + e + r + t + . + a + s + s + e + r + t -> "org.junit.Assert.assert"	1393
. + t + o -> ".to"	1394
p + l + a + y -> "play"	1395
c + l -> "cl"	1396
F + u + n + c + t + i + o + n -> "Function"	1397
i + l + e -> "ile"	1398
, + DECIMAL_LITERAL + , + DECIMAL_LITERAL + , + DECIMAL_LITERAL + , + DECIMAL_LITERAL -> ",DECIMAL_LITERAL,DECIMAL_LITERAL,DECIMAL_LITERAL,DECIMAL_LITERAL"	1399
w + j -> "wj"	1400
u + p + p + o + r + t -> "upport"	1401
i + t + e + r -> "iter"	1402
H + a + s + h + M + a + p -> "HashMap"	1403
c + h + e + m + a -> "chema"	1404
e + t + h + o + d -> "ethod"	1405
c + e + p -> "cep"	1406
x + m + l -> "xml"	1407
a + t + e + r -> "ater"	1408
w + j + g + l -> "wjgl"	1409
. + l + a + n + g + . -> ".lang."	1410
. + s + i + z + e + ( + ) -> ".size()"	1411
; + i + ++ + ) + { + <EOL> -> ";i++){<EOL>"	1412
o + b + j -> "obj"	1413
C + o + n + s + t + r -> "Constr"	1414
u + n + d + l + e -> "undle"	1415
= + false + ; + <EOL> -> "=false;<EOL>"	1416
d + a + t + a -> "data"	1417
i + n + t + e + r -> "inter"	1418
i + n + d + o + w -> "indow"	1419
S + e + s + s + i + o + n -> "Session"	1420
e + n + s -> "ens"	1421
C + a + s + e -> "Case"	1422
C + E -> "CE"	1423
t + x -> "tx"	1424
E + n + d -> "End"	1425
, + s -> ",s"	1426
. + p + r + o + t + o + b + u + f + . -> ".protobuf."	1427
. + p + a + r + s + e -> ".parse"	1428
a + m + p + l + e -> "ample"	1429
a + t + i -> "ati"	1430
p + e + c + t + e + d -> "pected"	1431
I + t + e + r -> "Iter"	1432
i + t + i + a + l -> "itial"	1433
w + j + g + l + 3 -> "wjgl3"	1434
P + o + s + i + t + i + o + n -> "Position"	1435
I + S -> "IS"	1436
return + null + ; + <EOL> -> "returnnull;<EOL>"	1437
W + r + i + t + e + r -> "Writer"	1438
import + c + o + m -> "importcom"	1439
R + e + f -> "Ref"	1440
o + l + d -> "old"	1441
p + a + r + a + m -> "param"	1442
C + O + N -> "CON"	1443
a + d + a + t + a -> "adata"	1444
_ + _ -> "__"	1445
s + t + r + a + c + t -> "stract"	1446
j + a + v + a + x + . + s + w + i + n + g + . -> "javax.swing."	1447
. + * -> ".*"	1448
. + * + ; + <EOL> -> ".*;<EOL>"	1449
y + n + c -> "ync"	1450
c + o + l -> "col"	1451
f + a + c + e -> "face"	1452
L + e + v + e + l -> "Level"	1453
h + a + s -> "has"	1454
c + o + n + t + e + x + t -> "context"	1455
c + l -> "cl"	1456
M + a + p + p + e + r -> "Mapper"	1457
a + r + e -> "are"	1458
. + t -> ".t"	1459
} + ; + <EOL> -> "};<EOL>"	1460
. + d + e -> ".de"	1461
F + A -> "FA"	1462
O + p + e + r + a + t + i + o + n -> "Operation"	1463
v + o -> "vo"	1464
D + i + a + l + o + g -> "Dialog"	1465
T + y + p -> "Typ"	1466
S + t + a + r + t -> "Start"	1467
a + f -> "af"	1468
P + l + a + y + e + r -> "Player"	1469
l + e + c + t + e + d -> "lected"	1470
public + static + void -> "publicstaticvoid"	1471
S + y + s + t + e + m -> "System"	1472
a + k -> "ak"	1473
P	1474
_ + 1 -> "_1"	1475
. + c + l + i + e + n + t -> ".client"	1476
( + i + n -> "(in"	1477
L + O + G -> "LOG"	1478
g + o + o + g + l + e + . + p + r + o + t + o + b + u + f + . -> "google.protobuf."	1479
j + a + v + a + . + l + a + n + g + . -> "java.lang."	1480
, + int -> ",int"	1481
o + m + a + i + n -> "omain"	1482
I + n + t + e + n + t -> "Intent"	1483
= + true + ; + <EOL> -> "=true;<EOL>"	1484
u + r + l -> "url"	1485
d + i + t + i + o + n -> "dition"	1486
import + a + n + d + r + o + i + d + . -> "importandroid."	1487
t + a + i + n + e + r -> "tainer"	1488
A + b + s + t + r + a + c + t -> "Abstract"	1489
N + o + t + N + u + l + l -> "NotNull"	1490
return + true + ; + <EOL> -> "returntrue;<EOL>"	1491
D + e + s + c + r + i + p + t + o + r -> "Descriptor"	1492
[ + ] + { -> "[]{"	1493
e	1494
e + s + ; + <EOL> -> "es;<EOL>"	1495
P + r + o + v + i + d + e + r -> "Provider"	1496
. + t + o + S + t + r + i + n + g -> ".toString"	1497
R + e + f + e + r + e + n + c + e -> "Reference"	1498
e + c + u + r -> "ecur"	1499
T + r + a + c + e -> "Trace"	1500
i + s + t + e + r -> "ister"	1501
) + ) + . -> "))."	1502
N + A + M + E -> "NAME"	1503
R + e + t + u + r + n -> "Return"	1504
a + u + t + h -> "auth"	1505
a + k + e -> "ake"	1506
. + m + i + n -> ".min"	1507
e + c + u + r + i + t + y -> "ecurity"	1508
C + H -> "CH"	1509
I + O + E + x + c + e + p + t + i + o + n + { + <EOL> -> "IOException{<EOL>"	1510
a + i + r -> "air"	1511
F + l -> "Fl"	1512
4 + j -> "4j"	1513
D + e + t + a + i + l -> "Detail"	1514
i + x -> "ix"	1515
return + ; + <EOL> -> "return;<EOL>"	1516
public + int -> "publicint"	1517
A + p + i -> "Api"	1518
. + a + d + d + ( -> ".add("	1519
B + e -> "Be"	1520
import + o + r + g + . + j + u + n + i + t + . -> "importorg.junit."	1521
u + g + i + n -> "ugin"	1522
0 + 0 -> "00"	1523
y + s -> "ys"	1524
e + n + t + i -> "enti"	1525
S + e + r + v + l + e + t -> "Servlet"	1526
o + p + e + n -> "open"	1527
B + o + x -> "Box"	1528
U + R + L -> "URL"	1529
F + o + r + m -> "Form"	1530
s + ( + ) + { + <EOL> -> "s(){<EOL>"	1531
return + this + ; + <EOL> -> "returnthis;<EOL>"	1532
i + l + i + t + y -> "ility"	1533
D + i + r + e + c -> "Direc"	1534
( + STRING_LITERAL + , -> "(STRING_LITERAL,"	1535
a + n + d + o + m -> "andom"	1536
a + b + l + e + d -> "abled"	1537
s + b -> "sb"	1538
l + i + n + e -> "line"	1539
C + a + c + h + e -> "Cache"	1540
A + r + r + a + y + L + i + s + t + < -> "ArrayList<"	1541
c + h + e + d -> "ched"	1542
:	1543
case	1544
u + l + t + i -> "ulti"	1545
E + n + u + m -> "Enum"	1546
U + E -> "UE"	1547
S + e + t + t + i + n + g -> "Setting"	1548
T + R -> "TR"	1549
public + static + final + S + t + r + i + n + g -> "publicstaticfinalString"	1550
s + e + r + v + e + r -> "server"	1551
i + n + a + l -> "inal"	1552
y + c -> "yc"	1553
( + true + ) + ; + <EOL> -> "(true);<EOL>"	1554
R + u + l + e -> "Rule"	1555
A + D -> "AD"	1556
Q + L -> "QL"	1557
< + S + t + r + i + n + g + > -> "<String>"	1558
package	1559
K + E -> "KE"	1560
d + b -> "db"	1561
V + A + L -> "VAL"	1562
e + n + t + r + y -> "entry"	1563
F + r + a + m + e -> "Frame"	1564
P + r -> "Pr"	1565
( + ) + throws + E + x + c + e + p + t + i + o + n + { + <EOL> -> "()throwsException{<EOL>"	1566
C + o + n + s + t + a + n + t + s + . -> "Constants."	1567
e + . + g + e + t -> "e.get"	1568
y + l + e -> "yle"	1569
U + I + D -> "UID"	1570
instanceof	1571
a + s + s + e + r + t + E + q + u + a + l + s + ( -> "assertEquals("	1572
a + t + t + e + r + n -> "attern"	1573
i + l + t + e + r -> "ilter"	1574
S + p + e + c -> "Spec"	1575
. + s + e + t + T + e + x + t -> ".setText"	1576
r + a + p -> "rap"	1577
s + u + m -> "sum"	1578
A + s + s + e + r + t + . + a + s + s + e + r + t -> "Assert.assert"	1579
M + e + m -> "Mem"	1580
i + d + e -> "ide"	1581
r + i + t + e + r + i + a -> "riteria"	1582
u + t + o + r -> "utor"	1583
_ + P -> "_P"	1584
f + i + x -> "fix"	1585
. + e + q + u + a + l + s + ( -> ".equals("	1586
. + w + e + b -> ".web"	1587
T + y + p + e + ; + <EOL> -> "Type;<EOL>"	1588
F + r + a + g + m + e + n + t -> "Fragment"	1589
k + . -> "k."	1590
p + a + r + a + m -> "param"	1591
S + e + r + v + i + c + e + ; + <EOL> -> "Service;<EOL>"	1592
C + o + n + t + r + o + l + l + e + r -> "Controller"	1593
o + t + a + l -> "otal"	1594
M + e + n + u -> "Menu"	1595
e + r + s + i + s + t -> "ersist"	1596
W + e + b -> "Web"	1597
E + x + p + r + e + s + s + i + o + n -> "Expression"	1598
A + T + I -> "ATI"	1599
B + a + c + k -> "Back"	1600
. + g + e + t + ( -> ".get("	1601
D + e + p -> "Dep"	1602
H + e + a + d + e + r -> "Header"	1603
. + f + o + r + m + a + t -> ".format"	1604
m + a + p -> "map"	1605
i + n + i + t + i + o + n -> "inition"	1606
. + f + i + n + d -> ".find"	1607
I + l -> "Il"	1608
g + r + a + p + h -> "graph"	1609
. + v -> ".v"	1610
r + u + n -> "run"	1611
T + Y + P -> "TYP"	1612
n + e + w -> "new"	1613
. + c + o + l -> ".col"	1614
m + b -> "mb"	1615
s + o -> "so"	1616
N + a + m + e + s -> "Names"	1617
import + c + o + m + . + g + o + o + g + l + e -> "importcom.google"	1618
f + i + n + d -> "find"	1619
i + k + a + r + i -> "ikari"	1620
a + m + p -> "amp"	1621
t + i + t -> "tit"	1622
u + s + . -> "us."	1623
R + e + g + i + s + t + r + y -> "Registry"	1624
l + e + t + e -> "lete"	1625
l + e + c + t + o + r -> "lector"	1626
i + f + y -> "ify"	1627
I + d + ; + <EOL> -> "Id;<EOL>"	1628
e + c + r + a + f + t -> "ecraft"	1629
M + a + t + c + h -> "Match"	1630
T + e + m + p + l + a + t + e -> "Template"	1631
l + e + g + a + l -> "legal"	1632
B + u + n + d + l + e -> "Bundle"	1633
( + STRING_LITERAL + ) + ) + { + <EOL> -> "(STRING_LITERAL)){<EOL>"	1634
d + e + s -> "des"	1635
p + l -> "pl"	1636
i + v + e -> "ive"	1637
M + o -> "Mo"	1638
( + this + . -> "(this."	1639
A + B -> "AB"	1640
l + i + s + t -> "list"	1641
i + s + h -> "ish"	1642
l + e + a + r -> "lear"	1643
V + a + r + i -> "Vari"	1644
M + o + c + k -> "Mock"	1645
u + s + e + r -> "user"	1646
p + l + e + t -> "plet"	1647
V + e + r -> "Ver"	1648
B + y + t + e + s -> "Bytes"	1649
m + i + s + s + i + o + n -> "mission"	1650
T + r + a + n + s + a + c + t + i + o + n -> "Transaction"	1651
P + r + o + t + o -> "Proto"	1652
B + a + r -> "Bar"	1653
> + > -> ">>"	1654
S + t + a + t + e + m + e + n + t -> "Statement"	1655
T + a + r + g + e + t -> "Target"	1656
o + n -> "on"	1657
a + b + a + s + e -> "abase"	1658
c + u + r + r + e + n + t -> "current"	1659
h + e + n -> "hen"	1660
N + O -> "NO"	1661
import + j + a + v + a + . + u + t + i + l + . + A + r + r + a + y -> "importjava.util.Array"	1662
r + o + n -> "ron"	1663
S + e + r + i + a + l + i + z -> "Serializ"	1664
o + r + a + g + e -> "orage"	1665
. + w + r + i + t + e -> ".write"	1666
M + P -> "MP"	1667
r + e + c -> "rec"	1668
r + o + u + n + d -> "round"	1669
R + e + a + d -> "Read"	1670
o + p + y -> "opy"	1671
, + FLOAT_LITERAL + , + FLOAT_LITERAL -> ",FLOAT_LITERAL,FLOAT_LITERAL"	1672
v + a + l + u + e + s -> "values"	1673
_ + m -> "_m"	1674
( + p + r + o -> "(pro"	1675
, + STRING_LITERAL + , + STRING_LITERAL + , + STRING_LITERAL + , + STRING_LITERAL -> ",STRING_LITERAL,STRING_LITERAL,STRING_LITERAL,STRING_LITERAL"	1676
A + n + n -> "Ann"	1677
. + B -> ".B"	1678
l + y -> "ly"	1679
, + p -> ",p"	1680
n + o + d + e -> "node"	1681
I + l + l + e + g + a + l -> "Illegal"	1682
= + p -> "=p"	1683
a + s + s + w + o + r + d -> "assword"	1684
l + o + y -> "loy"	1685
W + i + d + t + h -> "Width"	1686
W + i + n + d + o + w -> "Window"	1687
public + S + t + r + i + n + g -> "publicString"	1688
p + l + y -> "ply"	1689
j + s + o + n -> "json"	1690
s + e + ( + ) + ; + <EOL> -> "se();<EOL>"	1691
S + S -> "SS"	1692
I + d + ) + ; + <EOL> -> "Id);<EOL>"	1693
n + a + m + e -> "name"	1694
u + b + l -> "ubl"	1695
a + . -> "a."	1696
p + o + i + n + t -> "point"	1697
t + o + k + e + n -> "token"	1698
protected + void -> "protectedvoid"	1699
+ + STRING_LITERAL + + + STRING_LITERAL + + + STRING_LITERAL + + + STRING_LITERAL -> "+STRING_LITERAL+STRING_LITERAL+STRING_LITERAL+STRING_LITERAL"	1700
_ + s -> "_s"	1701
S + e + a + r + c + h -> "Search"	1702
W + o + r + k -> "Work"	1703
r + e + q + u + e + s + t -> "request"	1704
r + e + s + e + n + t -> "resent"	1705
a + t + u + s -> "atus"	1706
b + e -> "be"	1707
. + g + e + t + C -> ".getC"	1708
a + t + r + i -> "atri"	1709
C + h + a + n + n + e + l -> "Channel"	1710
e + c + u + t + e -> "ecute"	1711
HEX_LITERAL + , -> "HEX_LITERAL,"	1712
a + s + s + e + r + t + T + r + u + e -> "assertTrue"	1713
s + t + r + i + n + g -> "string"	1714
N + a + m + e + ; + <EOL> -> "Name;<EOL>"	1715
V + i + s + i + b -> "Visib"	1716
. + p + l -> ".pl"	1717
a + t + i + v + e -> "ative"	1718
i + d -> "id"	1719
V + a + l + u + e + s -> "Values"	1720
a + t + r + i + x -> "atrix"	1721
o + c + k + e + t -> "ocket"	1722
== + DECIMAL_LITERAL + ) + { + <EOL> -> "==DECIMAL_LITERAL){<EOL>"	1723
U + n + i + t -> "Unit"	1724
l + o + c + a + l -> "local"	1725
( + R + . + i + d -> "(R.id"	1726
. + m + o + d + e + l + . -> ".model."	1727
n + e + x + t -> "next"	1728
U + M -> "UM"	1729
protected	1730
m + i + t -> "mit"	1731
e + d + i + a -> "edia"	1732
( + byte -> "(byte"	1733
l + o + b -> "lob"	1734
v + i + c -> "vic"	1735
o + m + e -> "ome"	1736
s + c -> "sc"	1737
public + static + final + int -> "publicstaticfinalint"	1738
M + a + x -> "Max"	1739
. + s + e -> ".se"	1740
E + n + c -> "Enc"	1741
t + e + s + t -> "test"	1742
i + s -> "is"	1743
l + e + s -> "les"	1744
. + o + f -> ".of"	1745
( + null -> "(null"	1746
f + i + r + s + t -> "first"	1747
A + c + c + o + u + n + t -> "Account"	1748
q + u + e -> "que"	1749
r + o + o + t -> "root"	1750
C + o + n + v + e + r -> "Conver"	1751
_ + S -> "_S"	1752
a + t + e + g + o + r + y -> "ategory"	1753
package + o + r + g + . -> "packageorg."	1754
u + t + a + b + l + e -> "utable"	1755
. + s + u + b -> ".sub"	1756
E + x + t -> "Ext"	1757
D + e + f + i + n + i + t + i + o + n -> "Definition"	1758
R + e + l -> "Rel"	1759
g + r + e + s + s -> "gress"	1760
u + r + s -> "urs"	1761
P + r + o + j + e + c + t -> "Project"	1762
r + y -> "ry"	1763
. + s + e + r + v + i + c + e -> ".service"	1764
return + m -> "returnm"	1765
T + i + t -> "Tit"	1766
] + ; + <EOL> -> "];<EOL>"	1767
S + t + o + r + e -> "Store"	1768
J + o + b -> "Job"	1769
. + g + e + t + I + d -> ".getId"	1770
e + d + ( -> "ed("	1771
T + i + p -> "Tip"	1772
i + m + a + g + e -> "image"	1773
G + r + a + p + h -> "Graph"	1774
o + i + n -> "oin"	1775
S + t + a + c + k + T + r + a + c + e -> "StackTrace"	1776
e + n + c + y -> "ency"	1777
this + . + m -> "this.m"	1778
N + a + m + e + ) + ; + <EOL> -> "Name);<EOL>"	1779
p + i + n + g -> "ping"	1780
H + o + l + d + e + r -> "Holder"	1781
C + h + a + n + g + e -> "Change"	1782
!= + null + && -> "!=null&&"	1783
r + e + q + u + e + s + t -> "request"	1784
) + ) + ) + ; + <EOL> -> ")));<EOL>"	1785
. + m + i + n + e + c + r + a + f + t -> ".minecraft"	1786
U + S -> "US"	1787
A + X -> "AX"	1788
x + y -> "xy"	1789
F + A + U + L -> "FAUL"	1790
E + x + c + e + p + t + i + o + n + , -> "Exception,"	1791
B	1792
T + h + r + o + w + a + b + l + e -> "Throwable"	1793
V + i + e + w + ; + <EOL> -> "View;<EOL>"	1794
t + i + f + i + c + a + t + i + o + n -> "tification"	1795
a + r + r + a + y -> "array"	1796
d + e + f -> "def"	1797
o + t + h + e + r -> "other"	1798
D + E + F + A + U + L -> "DEFAUL"	1799
( + l -> "(l"	1800
if + ( + m -> "if(m"	1801
s + e + r + v + i + c + e -> "service"	1802
) + . + a + d + d -> ").add"	1803
( + P -> "(P"	1804
e + t + e + r + s -> "eters"	1805
o + n + d -> "ond"	1806
R + u + n + t + i + m + e -> "Runtime"	1807
E + X -> "EX"	1808
p + a + r + e -> "pare"	1809
import + i + o + . -> "importio."	1810
r + e + s -> "res"	1811
c + u + r + r + e + n + t -> "current"	1812
q + u + i + r + e -> "quire"	1813
S + u -> "Su"	1814
c + h + e + c + k -> "check"	1815
T + E + R -> "TER"	1816
V + e + c + t + o + r -> "Vector"	1817
= + c + o + n -> "=con"	1818
( + FLOAT_LITERAL -> "(FLOAT_LITERAL"	1819
} + catch + ( + E + x + c + e + p + t + i + o + n + e + ) + { + <EOL> -> "}catch(Exceptione){<EOL>"	1820
( + false + ) + ; + <EOL> -> "(false);<EOL>"	1821
a + g + e + s -> "ages"	1822
p + l + a + c + e -> "place"	1823
t + e + m + p -> "temp"	1824
o + b + j + e + c + t -> "object"	1825
E + n + a + b + l + e + d -> "Enabled"	1826
O + p + t + i + o + n + a + l -> "Optional"	1827
i + c + a + t + e -> "icate"	1828
A + p + p + l + i + c + a + t + i + o + n + C + o + n + f + i + g + u + r + a + t + i + o + n -> "ApplicationConfiguration"	1829
a + s + e + . -> "ase."	1830
a + d + e -> "ade"	1831
B + o + d + y -> "Body"	1832
w + i + t + h -> "with"	1833
C + a + l + l + b + a + c + k -> "Callback"	1834
. + w + i + d + g + e + t -> ".widget"	1835
, + S + t + r + i + n + g -> ",String"	1836
m + e + s + s + a + g + e -> "message"	1837
, + DECIMAL_LITERAL + , -> ",DECIMAL_LITERAL,"	1838
, + final -> ",final"	1839
N + e + x + t -> "Next"	1840
j + a + v + a + . -> "java."	1841
I + L -> "IL"	1842
. + c + o + n + t + e + n + t -> ".content"	1843
r + c -> "rc"	1844
O + u + t + p + u + t + S + t + r + e + a + m -> "OutputStream"	1845
o + w + e + r -> "ower"	1846
w + j + g + l + 3 + A + p + p + l + i + c + a + t + i + o + n + C + o + n + f + i + g + u + r + a + t + i + o + n -> "wjgl3ApplicationConfiguration"	1847
. + s + t + r + e + a + m -> ".stream"	1848
N + e + w -> "New"	1849
e + e + d -> "eed"	1850
DECIMAL_LITERAL + ) + ; + <EOL> -> "DECIMAL_LITERAL);<EOL>"	1851
M + a + p + ; + <EOL> -> "Map;<EOL>"	1852
l + o + a + t -> "loat"	1853
T + i + t + l + e -> "Title"	1854
import + n + e + t + . + m + i + n + e + c + r + a + f + t -> "importnet.minecraft"	1855
public + int + g + e + t -> "publicintget"	1856
D + B -> "DB"	1857
V + i + e + w + B + y + I + d -> "ViewById"	1858
i + k + a + r + i + C + o + n + f + i + g -> "ikariConfig"	1859
. + L -> ".L"	1860
E + C -> "EC"	1861
I + t + e + r + a + t + o + r -> "Iterator"	1862
e + m + p -> "emp"	1863
. + c + o + n + t + a + i + n + s -> ".contains"	1864
a + l + l + e -> "alle"	1865
, + null + ) + ; + <EOL> -> ",null);<EOL>"	1866
C + h + a + n + g -> "Chang"	1867
_ + p -> "_p"	1868
a + n + k -> "ank"	1869
H + e + i + g + h + t -> "Height"	1870
l + a + n + g -> "lang"	1871
i + m + a + l -> "imal"	1872
M + i + n -> "Min"	1873
. + v + a + l + u + e -> ".value"	1874
u + s + h -> "ush"	1875
. + s + c -> ".sc"	1876
M + e + t + a + d + a + t + a -> "Metadata"	1877
D + i + r -> "Dir"	1878
C + e + l + l -> "Cell"	1879
C + o + n + s + t + r + a + i + n + t -> "Constraint"	1880
. + n + e + x + t -> ".next"	1881
L + E + _ -> "LE_"	1882
1 + 1 -> "11"	1883
u + c + c + e + s + s -> "uccess"	1884
a + b + l + e + ; + <EOL> -> "able;<EOL>"	1885
( + ) + . + s + e + t -> "().set"	1886
D + e + s + c + r + i + p + t + i + o + n -> "Description"	1887
e + t + w + o + r + k -> "etwork"	1888
boolean + i + s -> "booleanis"	1889
u + i + d -> "uid"	1890
_ + b -> "_b"	1891
o + v + e + r -> "over"	1892
i + c + e -> "ice"	1893
P + r + i -> "Pri"	1894
L + e + n + g + t + h -> "Length"	1895
a + w + t + . -> "awt."	1896
i + z + e + d -> "ized"	1897
0 + ) + ; + <EOL> -> "0);<EOL>"	1898
. + g + e + t + V + a + l + u + e -> ".getValue"	1899
V + i + e + w + B + y + I + d + ( + R + . + i + d -> "ViewById(R.id"	1900
M + o + n -> "Mon"	1901
E + D -> "ED"	1902
U + T -> "UT"	1903
T + o + o + l -> "Tool"	1904
C + o + n + t + a + i + n + e + r -> "Container"	1905
p + r + e -> "pre"	1906
) + . + s + e + t -> ").set"	1907
= + b -> "=b"	1908
O + f + f + s + e + t -> "Offset"	1909
i + z + a + t + i + o + n -> "ization"	1910
O + b + j + e + c + t -> "Object"	1911
s + t + a + t + e -> "state"	1912
. + p + r + i + n + t + S + t + a + c + k + T + r + a + c + e -> ".printStackTrace"	1913
M + L -> "ML"	1914
. + g + e + t + S -> ".getS"	1915
. + G -> ".G"	1916
h + a + n + d -> "hand"	1917
i + e -> "ie"	1918
s + t + a + r + t -> "start"	1919
e + a + t + u + r + e -> "eature"	1920
l + e + f + t -> "left"	1921
I + d + , -> "Id,"	1922
t + o + p -> "top"	1923
c + e + p + t -> "cept"	1924
Q + u + e -> "Que"	1925
public + final -> "publicfinal"	1926
. + c + l + o + s + e + ( + ) + ; + <EOL> -> ".close();<EOL>"	1927
p + l + i + t -> "plit"	1928
A + u + t -> "Aut"	1929
M + e + t + a -> "Meta"	1930
e + l + e + m + e + n + t -> "element"	1931
P + a + c + k + a + g + e -> "Package"	1932
U + P -> "UP"	1933
i + m + p + l -> "impl"	1934
. + p + u + t + ( -> ".put("	1935
l + o + g + i + c -> "logic"	1936
import + j + a + v + a + . + u + t + i + l -> "importjava.util"	1937
S + t + y + l + e -> "Style"	1938
a + n + y -> "any"	1939
long	1940
. + g + e + t + I + n + s + t + a + n + c + e -> ".getInstance"	1941
< + > -> "<>"	1942
1 + , -> "1,"	1943
r + e + s + p + o + n + s + e -> "response"	1944
u + t + e + s -> "utes"	1945
case + DECIMAL_LITERAL -> "caseDECIMAL_LITERAL"	1946
c + o + n + f + i + g -> "config"	1947
e + n + t + i + c -> "entic"	1948
case + DECIMAL_LITERAL + : + <EOL> -> "caseDECIMAL_LITERAL:<EOL>"	1949
e + r + s + i + s + t + e + n + c + e -> "ersistence"	1950
A + n + n + o + t + a + t + i + o + n -> "Annotation"	1951
. + p + r + i + n + t + S + t + a + c + k + T + r + a + c + e + ( + ) + ; + <EOL> -> ".printStackTrace();<EOL>"	1952
B + i + t -> "Bit"	1953
e + c + l -> "ecl"	1954
L + O + G -> "LOG"	1955
P + o + l -> "Pol"	1956
. + d + a + t + a -> ".data"	1957
r + e + e + n -> "reen"	1958
e + c + o + n + d -> "econd"	1959
n + o -> "no"	1960
a + r + e + d -> "ared"	1961
= + d -> "=d"	1962
L + o + g -> "Log"	1963
import + o + r + g + . + a + p + a + c + h + e -> "importorg.apache"	1964
T + a + b -> "Tab"	1965
( + int + ) -> "(int)"	1966
R + e + n + d + e + r -> "Render"	1967
, + b -> ",b"	1968
-> + { + <EOL> -> "->{<EOL>"	1969
i + n + p + u + t -> "input"	1970
T + o + p -> "Top"	1971
> + { + <EOL> -> ">{<EOL>"	1972
p + o + s -> "pos"	1973
s + b + . + a + p + p + e + n + d -> "sb.append"	1974
S + e + l + e + c + t + e + d -> "Selected"	1975
r + o + l + l -> "roll"	1976
a + l + e + n + d -> "alend"	1977
( + c + o + n + t + e + x + t -> "(context"	1978
E + x + c + e + p + t + i + o + n + ( + STRING_LITERAL + ) + ; + <EOL> -> "Exception(STRING_LITERAL);<EOL>"	1979
p + c -> "pc"	1980
return + this + . -> "returnthis."	1981
g + r + o + u + n + d -> "ground"	1982
V + a + r -> "Var"	1983
private + S + t + r + i + n + g -> "privateString"	1984
P + o + s + t -> "Post"	1985
E + L -> "EL"	1986
A + s + s -> "Ass"	1987
. + g + e + t + S + t + r + i + n + g -> ".getString"	1988
P + o + r + t -> "Port"	1989
( + this + ) + ; + <EOL> -> "(this);<EOL>"	1990
( + r -> "(r"	1991
t + n -> "tn"	1992
b + u + i + l + d + e + r -> "builder"	1993
S + y + s + t + e + m + . + o + u + t + . + p + r + i + n + t + l + n + ( + STRING_LITERAL + ) + ; + <EOL> -> "System.out.println(STRING_LITERAL);<EOL>"	1994
for + ( + int + i + = + DECIMAL_LITERAL + ; + i + < -> "for(inti=DECIMAL_LITERAL;i<"	1995
p + a + r + a + t + o + r -> "parator"	1996
( + ) + . + a + d + d -> "().add"	1997
r + e + s + h -> "resh"	1998
N + a + m + e + , -> "Name,"	1999
. + o + n -> ".on"	2000
a + s + t + e + r -> "aster"	2001
K + _ -> "K_"	2002
u + t + i + l -> "util"	2003
. + F -> ".F"	2004
. + e + q + u + a + l + s -> ".equals"	2005
D + A + T -> "DAT"	2006
A + g -> "Ag"	2007
e + n + t + i + f + i -> "entifi"	2008
A + r + r + a + y + L + i + s + t + < + > + ( + ) + ; + <EOL> -> "ArrayList<>();<EOL>"	2009
Q + u + e + u + e -> "Queue"	2010
T + A + G -> "TAG"	2011
s + _ -> "s_"	2012
o + u + r + c + e + s -> "ources"	2013
G + r + i + d -> "Grid"	2014
F + a + c + t + o + r + y + ; + <EOL> -> "Factory;<EOL>"	2015
Z + E -> "ZE"	2016
c + o + m -> "com"	2017
i + s + E + m + p + t + y -> "isEmpty"	2018
2 + ) + ; + <EOL> -> "2);<EOL>"	2019
r + a + p + p + e + r -> "rapper"	2020
E + x + p -> "Exp"	2021
+ + STRING_LITERAL + ; + <EOL> -> "+STRING_LITERAL;<EOL>"	2022
( + ) + , -> "(),"	2023
import + j + a + v + a + . + u + t + i + l + . + A + r + r + a + y + L + i + s + t + ; + <EOL> -> "importjava.util.ArrayList;<EOL>"	2024
u + s + t + e + r -> "uster"	2025
e + r + s + o + n -> "erson"	2026
U + s -> "Us"	2027
a + s + s + e + r + t + T + h + a + t + ( -> "assertThat("	2028
> + > -> ">>"	2029
w + o + r + l + d -> "world"	2030
r + i + v + e + r -> "river"	2031
C + u + s + t + o + m -> "Custom"	2032
private + static + final + S + t + r + i + n + g -> "privatestaticfinalString"	2033
u + t + u + r + e -> "uture"	2034
e + ; + <EOL> -> "e;<EOL>"	2035
C + l + i + c + k + L + i + s + t + e + n + e + r -> "ClickListener"	2036
D + E + F + A + U + L + T + _ -> "DEFAULT_"	2037
M + a + p + < + S + t + r + i + n + g + , + O + b + j + e + c + t -> "Map<String,Object"	2038
t + i + t + l + e -> "title"	2039
L + o + a + d -> "Load"	2040
D + O -> "DO"	2041
m + o + d + e + l -> "model"	2042
a + c + t + e + r -> "acter"	2043
p + h -> "ph"	2044
V + E + R -> "VER"	2045
R + I -> "RI"	2046
C + o + n + t + e + x + t + ; + <EOL> -> "Context;<EOL>"	2047
[ + DECIMAL_LITERAL + ] + ; + <EOL> -> "[DECIMAL_LITERAL];<EOL>"	2048
= + new -> "=new"	2049
D + a + t + a + b + a + s + e -> "Database"	2050
P + r + o + d + u + c + t -> "Product"	2051
L + I -> "LI"	2052
D + e + v + i + c + e -> "Device"	2053
h + a + s + h -> "hash"	2054
f + i + l + e -> "file"	2055
a + d + o -> "ado"	2056
HEX_LITERAL + ; + <EOL> -> "HEX_LITERAL;<EOL>"	2057
L + o + a + d + e + r -> "Loader"	2058
M + a + p + p + i + n + g -> "Mapping"	2059
D + I -> "DI"	2060
. + r + e + a + d -> ".read"	2061
q + u + e + n + c + e -> "quence"	2062
a + s + s + e + r + t + E + q + u + a + l + s + ( + DECIMAL_LITERAL + , -> "assertEquals(DECIMAL_LITERAL,"	2063
. + c + o + n + f + i + g -> ".config"	2064
e + x + p + e + c + t + e + d -> "expected"	2065
i + n + d + i + n + g -> "inding"	2066
i + t + h + u + b -> "ithub"	2067
d + x -> "dx"	2068
C + h + i + l + d -> "Child"	2069
, + STRING_LITERAL + , -> ",STRING_LITERAL,"	2070
n + e + c + t + i + o + n -> "nection"	2071
m + a + x -> "max"	2072
D + T + O -> "DTO"	2073
P + o + o + l -> "Pool"	2074
v + e + r -> "ver"	2075
a + l + e + n + d + a + r -> "alendar"	2076
e + a + r -> "ear"	2077
U + R + I -> "URI"	2078
. + w + i + d + g + e + t + . -> ".widget."	2079
> + DECIMAL_LITERAL + ) + { + <EOL> -> ">DECIMAL_LITERAL){<EOL>"	2080
j + a + v + a + . + l + a + n + g + . + S + t + r + i + n + g -> "java.lang.String"	2081
P + a + r + e + n + t -> "Parent"	2082
private + static + final -> "privatestaticfinal"	2083
C + o + n + t + e + x + t + c + o + n + t + e + x + t -> "Contextcontext"	2084
s + . + f -> "s.f"	2085
. + c + l -> ".cl"	2086
E + d + i + t -> "Edit"	2087
R + o + l + e -> "Role"	2088
l + o + c + a + t + i + o + n -> "location"	2089
U + r + i -> "Uri"	2090
public + interface -> "publicinterface"	2091
w + r + i + t + e -> "write"	2092
t + r + a + c + t -> "tract"	2093
t + o + r + y -> "tory"	2094
i + v + e + r -> "iver"	2095
final + S + t + r + i + n + g -> "finalString"	2096
l + o + g + g + e + r + . -> "logger."	2097
T + e + s + t + ; + <EOL> -> "Test;<EOL>"	2098
J	2099
++ + ; + <EOL> -> "++;<EOL>"	2100
C + a + r + d -> "Card"	2101
( + DECIMAL_LITERAL + , + DECIMAL_LITERAL + , + DECIMAL_LITERAL -> "(DECIMAL_LITERAL,DECIMAL_LITERAL,DECIMAL_LITERAL"	2102
= + new + S + t + r + i + n + g -> "=newString"	2103
G + a + m + e -> "Game"	2104
E + q + u + a + l + s -> "Equals"	2105
i + m + i + t -> "imit"	2106
t + h -> "th"	2107
return + g + e + t -> "returnget"	2108
u + r + s + o + r -> "ursor"	2109
M + a + t + h -> "Math"	2110
M + _ -> "M_"	2111
e + t + a -> "eta"	2112
U + U + I + D -> "UUID"	2113
i + n + e + . -> "ine."	2114
B + i + g -> "Big"	2115
D + o + w + n -> "Down"	2116
T + e + r -> "Ter"	2117
m + s -> "ms"	2118
i + e + r -> "ier"	2119
import + static + o + r + g + . -> "importstaticorg."	2120
1 + ) + ; + <EOL> -> "1);<EOL>"	2121
l + o + t -> "lot"	2122
I + n + t + e + r + n + a + l -> "Internal"	2123
D + e + c + i + m + a + l -> "Decimal"	2124
I + n + i + t + i + a + l -> "Initial"	2125
n + a + m + e + ; + <EOL> -> "name;<EOL>"	2126
P + a + r + s + e -> "Parse"	2127
if + ( + s -> "if(s"	2128
u + a + g + e -> "uage"	2129
U + t + i + l + s + ; + <EOL> -> "Utils;<EOL>"	2130
v + a + l + u + e + ) + ; + <EOL> -> "value);<EOL>"	2131
F + l + o + a + t -> "Float"	2132
1 + 0 -> "10"	2133
, + false + ) + ; + <EOL> -> ",false);<EOL>"	2134
R + o + o + t -> "Root"	2135
g + r + o + u + p -> "group"	2136
r + e + m + o + v + e -> "remove"	2137
g + i + t + h + u + b -> "github"	2138
t + y + p + e -> "type"	2139
m + o + t + e -> "mote"	2140
F + o + u + n + d -> "Found"	2141
D + a + o -> "Dao"	2142
v + a + r -> "var"	2143
V + o -> "Vo"	2144
I + c + o + n -> "Icon"	2145
i + g + n + m + e + n + t -> "ignment"	2146
public + boolean + i + s -> "publicbooleanis"	2147
R + u + n + n -> "Runn"	2148
R + e + s + t -> "Rest"	2149
4 + j + . -> "4j."	2150
m + a + i + n -> "main"	2151
C + o + m + p + l + e + t -> "Complet"	2152
i + t + o + . -> "ito."	2153
( + j -> "(j"	2154
e + d + u -> "edu"	2155
S + I + Z + E -> "SIZE"	2156
i + n + p + u + t -> "input"	2157
a + p + a + c + h + e + . -> "apache."	2158
F + a + l -> "Fal"	2159
p + a + c + e -> "pace"	2160
M + a + n + a + g + e + r + ; + <EOL> -> "Manager;<EOL>"	2161
B + u + s -> "Bus"	2162
o + d + e + r -> "oder"	2163
d + a + t -> "dat"	2164
M + O -> "MO"	2165
( + DECIMAL_LITERAL + ) + ) + ; + <EOL> -> "(DECIMAL_LITERAL));<EOL>"	2166
a + i + t -> "ait"	2167
) + && -> ")&&"	2168
this + . + p -> "this.p"	2169
u + d + e -> "ude"	2170
c + r + i + p + t -> "cript"	2171
M + o + d + u + l + e -> "Module"	2172
N + o + n -> "Non"	2173
e + s + t + a + m + p -> "estamp"	2174
s + ( + ) -> "s()"	2175
g + r + i + d -> "grid"	2176
l + f -> "lf"	2177
J + S + O + N + O + b + j + e + c + t -> "JSONObject"	2178
e + c + h -> "ech"	2179
a + r + i + o -> "ario"	2180
. + t + e + s + t -> ".test"	2181
k + n -> "kn"	2182
S + i + m + p + l + e -> "Simple"	2183
T + y + p + e + s -> "Types"	2184
u + i -> "ui"	2185
r + e + s + o + u + r + c + e -> "resource"	2186
I + O + E + x + c + e + p + t + i + o + n + ; + <EOL> -> "IOException;<EOL>"	2187
A + d + d -> "Add"	2188
public + L + i + s + t + < -> "publicList<"	2189
. + b + i + n + d -> ".bind"	2190
( + byte + ) -> "(byte)"	2191
( + i + d -> "(id"	2192
i + c + y -> "icy"	2193
b + u -> "bu"	2194
P + h -> "Ph"	2195
S + t + o + r + a + g + e -> "Storage"	2196
D + r + a + w -> "Draw"	2197
t + e + x -> "tex"	2198
I + n + t + e + r + f + a + c + e -> "Interface"	2199
P + a + i + r -> "Pair"	2200
v + i + e + w + . -> "view."	2201
H + t + t + p + S + e + r + v + l + e + t -> "HttpServlet"	2202
e + . + p + r + i + n + t + S + t + a + c + k + T + r + a + c + e + ( + ) + ; + <EOL> -> "e.printStackTrace();<EOL>"	2203
i + t + e + m -> "item"	2204
s + i + z + e -> "size"	2205
s + . + p + u + t -> "s.put"	2206
( + V + i + e + w -> "(View"	2207
HEX_LITERAL + , + HEX_LITERAL + , -> "HEX_LITERAL,HEX_LITERAL,"	2208
R + e + s + o + l -> "Resol"	2209
a + l + c -> "alc"	2210
v	2211
D + e + l + e + t -> "Delet"	2212
y + m + b -> "ymb"	2213
C + l + o -> "Clo"	2214
X + m + l -> "Xml"	2215
R + a + n + g + e -> "Range"	2216
o + t + h -> "oth"	2217
F + i + l + e -> "File"	2218
R + E + S -> "RES"	2219
M + a + t + r + i + x -> "Matrix"	2220
S + c + h + e + m + a -> "Schema"	2221
s + . + l + e + n + g + t + h -> "s.length"	2222
import + j + a + v + a + . + n -> "importjava.n"	2223
H + o + s + t -> "Host"	2224
a + s + s + e + r + t + E + q + u + a + l + s + ( + STRING_LITERAL + , -> "assertEquals(STRING_LITERAL,"	2225
e + n + t + i + a + l -> "ential"	2226
, + false -> ",false"	2227
- + DECIMAL_LITERAL + ; + <EOL> -> "-DECIMAL_LITERAL;<EOL>"	2228
i + c + a + l -> "ical"	2229
a + t + i + c -> "atic"	2230
p + e + r + t + y -> "perty"	2231
E + x + e + c + u + t + o + r -> "Executor"	2232
m + o + d + e + l -> "model"	2233
o + d + e + s -> "odes"	2234
p + o + r + t + e + d -> "ported"	2235
e + g -> "eg"	2236
B + o + u + n + d -> "Bound"	2237
C + a + p -> "Cap"	2238
P + a + n + e -> "Pane"	2239
y + m + b + o + l -> "ymbol"	2240
f + o + r + e -> "fore"	2241
L + a + s + t -> "Last"	2242
i + n + f + o -> "info"	2243
l + e + m -> "lem"	2244
R + a + n + d + o + m -> "Random"	2245
D + A -> "DA"	2246
a + u + s + e -> "ause"	2247
U + I -> "UI"	2248
w + e -> "we"	2249
S + e + t + ; + <EOL> -> "Set;<EOL>"	2250
a + p + e -> "ape"	2251
E + m -> "Em"	2252
import + l -> "importl"	2253
( + k + e + y -> "(key"	2254
s + t + a + t + u + s -> "status"	2255
c + o + u + n + t -> "count"	2256
D + t + o -> "Dto"	2257
F + i + r + s + t -> "First"	2258
e + v + e + n + t -> "event"	2259
E + ) + ; + <EOL> -> "E);<EOL>"	2260
P + a + y -> "Pay"	2261
return + STRING_LITERAL + ; + <EOL> -> "returnSTRING_LITERAL;<EOL>"	2262
i + g + h -> "igh"	2263
. + s + u + p + p + o + r + t -> ".support"	2264
. + p + u + t + ( + STRING_LITERAL + , -> ".put(STRING_LITERAL,"	2265
v + i + e + w -> "view"	2266
L + i + n + k + e + d -> "Linked"	2267
t + h + e + n -> "then"	2268
B + l -> "Bl"	2269
E + N + T -> "ENT"	2270
byte + [ + ] -> "byte[]"	2271
S + w -> "Sw"	2272
f + e + r + e + n + c -> "ferenc"	2273
. + H -> ".H"	2274
C + o + n + t -> "Cont"	2275
v + e + r + t -> "vert"	2276
p + a + t + h -> "path"	2277
P + a + t + t + e + r + n -> "Pattern"	2278
c + o + m + . + g + o + o + g + l + e + . + p + r + o + t + o + b + u + f + . -> "com.google.protobuf."	2279
F + a + l + s + e -> "False"	2280
a + c -> "ac"	2281
this + . + c -> "this.c"	2282
= + DECIMAL_LITERAL + ; -> "=DECIMAL_LITERAL;"	2283
b + r -> "br"	2284
e + n + t + e + r -> "enter"	2285
D + a + t + e + T + i + m + e -> "DateTime"	2286
s + e + r + t + i + o + n -> "sertion"	2287
. + p + e + r + s + i + s + t + e + n + c + e -> ".persistence"	2288
d + o -> "do"	2289
l + o + b + a + l -> "lobal"	2290
M + u + l + t + i -> "Multi"	2291
P + R + O -> "PRO"	2292
. + n + e + w -> ".new"	2293
e + r + n -> "ern"	2294
i + n + t + e + n + t -> "intent"	2295
a + r + g + s -> "args"	2296
a + t + t + r + i + b -> "attrib"	2297
e + t + . -> "et."	2298
this + . + s -> "this.s"	2299
t + i + m + e + . -> "time."	2300
a + r + n -> "arn"	2301
U + t + i + l + s -> "Utils"	2302
E + N + T + _ -> "ENT_"	2303
R + e + p + o + r + t -> "Report"	2304
o + m + b + o -> "ombo"	2305
o + u + t + p + u + t -> "output"	2306
G + r + o + u + p + L + a + y + o + u + t -> "GroupLayout"	2307
D + i + s + p + l + a + y -> "Display"	2308
M + e + t + r + i + c -> "Metric"	2309
== + DECIMAL_LITERAL -> "==DECIMAL_LITERAL"	2310
F + o + n + t -> "Font"	2311
import + o + r + g + . + j -> "importorg.j"	2312
D + i -> "Di"	2313
S + i + g + n -> "Sign"	2314
o + f -> "of"	2315
T + e + x + t + V + i + e + w -> "TextView"	2316
P + O -> "PO"	2317
p + e + r + t + i + e + s -> "perties"	2318
h + t + t + p + . -> "http."	2319
t + a + r + g + e + t -> "target"	2320
J + a + v + a -> "Java"	2321
C + o -> "Co"	2322
G + e + n + e + r + a + t + o + r -> "Generator"	2323
l + e + r + . -> "ler."	2324
( + ) + ) + ) + { + <EOL> -> "())){<EOL>"	2325
W + r + a + p + p + e + r -> "Wrapper"	2326
s + u + b -> "sub"	2327
) + throws + I + O + E + x + c + e + p + t + i + o + n + { + <EOL> -> ")throwsIOException{<EOL>"	2328
. + c + l + o + u + d -> ".cloud"	2329
M + a + n + a + g + e + r + . -> "Manager."	2330
( + ( -> "(("	2331
d + i + s -> "dis"	2332
, + O + b + j + e + c + t -> ",Object"	2333
. + s + h + o + w -> ".show"	2334
i + d + ; + <EOL> -> "id;<EOL>"	2335
a + c + i + o + n -> "acion"	2336
o + k -> "ok"	2337
j + a + v + a + . + u + t + i + l + . -> "java.util."	2338
import + j + a + v + a + . + i + o + . + I + O + E + x + c + e + p + t + i + o + n + ; + <EOL> -> "importjava.io.IOException;<EOL>"	2339
b + a + d -> "bad"	2340
A + n + i + m -> "Anim"	2341
r + e + s + s -> "ress"	2342
I + l + l + e + g + a + l + A + r + g + u + m + e + n + t -> "IllegalArgument"	2343
A + _ -> "A_"	2344
P + a + r + a + m + e + t + e + r + s -> "Parameters"	2345
) + throws + E + x + c + e + p + t + i + o + n + { + <EOL> -> ")throwsException{<EOL>"	2346
< + DECIMAL_LITERAL -> "<DECIMAL_LITERAL"	2347
P + e + r + m + i + s + s + i + o + n -> "Permission"	2348
o + u + n + t + e + r -> "ounter"	2349
i + l + l + i + s -> "illis"	2350
i + p + s + e -> "ipse"	2351
. + v + a + l + u + e + O + f -> ".valueOf"	2352
b + u + i + l + d + ( + ) + ; + <EOL> -> "build();<EOL>"	2353
f + l + o + w -> "flow"	2354
E + x + t + e + n + s + i + o + n -> "Extension"	2355
L + i + s + t -> "List"	2356
( + u + s + e + r -> "(user"	2357
. + a + p + i + . -> ".api."	2358
s + e + a + r + c + h -> "search"	2359
u + n + c + t + i + o + n -> "unction"	2360
( + d + a + t + a -> "(data"	2361
v + i + r + o + n -> "viron"	2362
A + m -> "Am"	2363
t + e + p -> "tep"	2364
g + n -> "gn"	2365
( + DECIMAL_LITERAL + ) -> "(DECIMAL_LITERAL)"	2366
a + v + e + d -> "aved"	2367
e + n + e -> "ene"	2368
i + n + c -> "inc"	2369
u + p + d + a + t + e -> "update"	2370
O + b + j -> "Obj"	2371
V + a + l + u + e + ( -> "Value("	2372
G	2373
a + t + t -> "att"	2374
T + i + p + o -> "Tipo"	2375
import + j + a + v + a + . + u + t + i + l + . + M + a + p + ; + <EOL> -> "importjava.util.Map;<EOL>"	2376
C + o + n + s + u + m -> "Consum"	2377
e + n + t + i + f + i + e + r -> "entifier"	2378
v + i + r + o + n + m + e + n + t -> "vironment"	2379
M + a + p + < + S + t + r + i + n + g + , + S + t + r + i + n + g -> "Map<String,String"	2380
FLOAT_LITERAL + ; + <EOL> -> "FLOAT_LITERAL;<EOL>"	2381
. + c + o + n + c + u + r + r + e + n + t -> ".concurrent"	2382
s + c -> "sc"	2383
< + S + t + r + i + n + g + > -> "<String>"	2384
v + a + l + u + e + ) + { + <EOL> -> "value){<EOL>"	2385
I + N + G + _ -> "ING_"	2386
m + y -> "my"	2387
l + e + d -> "led"	2388
P + r + o + g + r + e + s + s -> "Progress"	2389
C + o + n + d + i + t + i + o + n -> "Condition"	2390
i + n + i + t -> "init"	2391
= + HEX_LITERAL + ; + <EOL> -> "=HEX_LITERAL;<EOL>"	2392
public + static + final -> "publicstaticfinal"	2393
[	2394
v + a + l + u -> "valu"	2395
n + o + d + e -> "node"	2396
c + l + i + e + n + t -> "client"	2397
_ + 2 -> "_2"	2398
f + o + r -> "for"	2399
S + T + _ -> "ST_"	2400
( + n + a + m + e -> "(name"	2401
B + u + f + f + e + r + e + d -> "Buffered"	2402
V + A + L + U + E -> "VALUE"	2403
( + r + e + q + u + e + s + t -> "(request"	2404
, + - + DECIMAL_LITERAL -> ",-DECIMAL_LITERAL"	2405
M + s + g -> "Msg"	2406
G + e + n + e + r + a + l -> "General"	2407
. + g + d + x -> ".gdx"	2408
b + a + d + l + o + g + i + c -> "badlogic"	2409
a + s + i + c -> "asic"	2410
e + n + t + i + c + a + t + i + o + n -> "entication"	2411
P + a + r + t -> "Part"	2412
. + g + e + t + C + l + a + s + s -> ".getClass"	2413
s + . + s -> "s.s"	2414
i + t + e + r + a + t + o + r -> "iterator"	2415
I + d + ) + { + <EOL> -> "Id){<EOL>"	2416
N + a + m + e + = -> "Name="	2417
. + b + e + a + n -> ".bean"	2418
E + x + t + r -> "Extr"	2419
T + I + O + N -> "TION"	2420
E + x + e + c + u + t + i + o + n -> "Execution"	2421
b + a + d + l + o + g + i + c + . + g + d + x -> "badlogic.gdx"	2422
A + s + y + n + c -> "Async"	2423
j + a + v + a + x + . + s + w + i + n + g + . + G + r + o + u + p + L + a + y + o + u + t -> "javax.swing.GroupLayout"	2424
a + t + e + r + i + a + l -> "aterial"	2425
r + e + f -> "ref"	2426
P + r + o + t + o + c + o + l -> "Protocol"	2427
o + u + l -> "oul"	2428
V + a + r + i + a + b + l + e -> "Variable"	2429
import + l + o + m + b + o -> "importlombo"	2430
T + r + a + n + s + f + o + r + m -> "Transform"	2431
. + c + o + n + t + e + n + t + . -> ".content."	2432
C + u + r + r + e + n + t -> "Current"	2433
e + c + l + i + p + s + e -> "eclipse"	2434
g + r + a + m -> "gram"	2435
C + h + a + n + g + e + d -> "Changed"	2436
class + S -> "classS"	2437
P + _ -> "P_"	2438
1 + 2 -> "12"	2439
v + i + s + i + t -> "visit"	2440
o + r + i + g -> "orig"	2441
. + s + e + r + v + l + e + t -> ".servlet"	2442
T + I + O + N + _ -> "TION_"	2443
A + T + I + O + N + _ -> "ATION_"	2444
f + i + l + t + e + r -> "filter"	2445
t + o -> "to"	2446
if + ( + c -> "if(c"	2447
P + E + R -> "PER"	2448
i + n + g + l + e -> "ingle"	2449
a + t + u + r + e -> "ature"	2450
. + c + o + n + t + e + x + t -> ".context"	2451
u + p + p + o + r + t + e + d -> "upported"	2452
( + DECIMAL_LITERAL + , + DECIMAL_LITERAL -> "(DECIMAL_LITERAL,DECIMAL_LITERAL"	2453
H + e + a + d -> "Head"	2454
T + y + p + e + ( -> "Type("	2455
P + l + u + g + i + n -> "Plugin"	2456
P + r + e + s + e + n + t -> "Present"	2457
f + i + n + d -> "find"	2458
, + c + o + n -> ",con"	2459
, + true + ) + ; + <EOL> -> ",true);<EOL>"	2460
D + i + r + e + c + t + o + r + y -> "Directory"	2461
o + m + . + g + o + o + g + l + e + . + p + r + o + t + o + b + u + f + . -> "om.google.protobuf."	2462
= + STRING_LITERAL -> "=STRING_LITERAL"	2463
e + a + s -> "eas"	2464
I + n + v + a + l + i + d -> "Invalid"	2465
p + a + r + e + n + t -> "parent"	2466
i + l + d + r -> "ildr"	2467
N + e + t + w + o + r + k -> "Network"	2468
B + O -> "BO"	2469
import + a + n + d + r + o + i + d + . + w + i + d + g + e + t + . -> "importandroid.widget."	2470
c + h + e + d + u + l + e -> "chedule"	2471
l + a + s + t -> "last"	2472
t + a + b + l + e -> "table"	2473
A + u + t + h + o + r -> "Author"	2474
v + a + l + u + e + ; + <EOL> -> "value;<EOL>"	2475
i + l + d + r + e + n -> "ildren"	2476
M + E + _ -> "ME_"	2477
L + o + c + k -> "Lock"	2478
E + q + u + a + l + T + o -> "EqualTo"	2479
m + t -> "mt"	2480
t + u + a + l -> "tual"	2481
. + m + a + p -> ".map"	2482
a + t + c + h + e + r -> "atcher"	2483
i + m + e + n + s + i + o + n -> "imension"	2484
I	2485
l + w + j + g + l + 3 + A + p + p + l + i + c + a + t + i + o + n + C + o + n + f + i + g + u + r + a + t + i + o + n -> "lwjgl3ApplicationConfiguration"	2486
I + m + m -> "Imm"	2487
r + e + s + t -> "rest"	2488
V + I -> "VI"	2489
i + c + t -> "ict"	2490
C + o + n + v + e + r + t + e + r -> "Converter"	2491
g + m + e + n + t -> "gment"	2492
} + , -> "},"	2493
public + int -> "publicint"	2494
C + h + a + r + a + c + t + e + r -> "Character"	2495
O + p + t + i + o + n + s -> "Options"	2496
s + e + d -> "sed"	2497
S + C -> "SC"	2498
N + o + t + i + f + i + c + a + t + i + o + n -> "Notification"	2499
. + s + e + r + v + e + r -> ".server"	2500
i + c + s + . -> "ics."	2501
g + e + n + e + r -> "gener"	2502
M + i + l + l + i + s -> "Millis"	2503
C + r + i + t + e + r + i + a -> "Criteria"	2504
S + o + c + k + e + t -> "Socket"	2505
R + e + c + e -> "Rece"	2506
i + b + r -> "ibr"	2507
C + o + l + l + e + c + t + o + r -> "Collector"	2508
. + s + q + l -> ".sql"	2509
( + a -> "(a"	2510
I + n + d -> "Ind"	2511
c + i + o + n -> "cion"	2512
r + y + p -> "ryp"	2513
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + w + e + b -> "importorg.springframework.web"	2514
return + s -> "returns"	2515
i + n + d + e + x -> "index"	2516
d + e + b + u + g -> "debug"	2517
== + null + ) + <EOL> -> "==null)<EOL>"	2518
import + a + n + d + r + o + i + d + . + v + i + e + w + . -> "importandroid.view."	2519
A + s + s + e + r + t + i + o + n -> "Assertion"	2520
P + r + o + f + i + l + e -> "Profile"	2521
t + a + r + g + e + t -> "target"	2522
d + ; + <EOL> -> "d;<EOL>"	2523
B + u + i + l + d -> "Build"	2524
i + f + i + c + a + t + i + o + n -> "ification"	2525
O + p + e + n -> "Open"	2526
F + i + l + e + s -> "Files"	2527
private + int -> "privateint"	2528
S + t + r + i + n + g + ( -> "String("	2529
P + o + i + n + t + e + r -> "Pointer"	2530
z + z -> "zz"	2531
t + i + t + i + o + n -> "tition"	2532
== + null + || -> "==null||"	2533
import + l + o + m + b + o + k + . -> "importlombok."	2534
A + r + r + a + y + s + . -> "Arrays."	2535
public + boolean -> "publicboolean"	2536
. + s + e + c + u + r + i + t + y -> ".security"	2537
C + a + t + e + g + o + r + y -> "Category"	2538
= + new + J -> "=newJ"	2539
i + n + a + t + i + o + n -> "ination"	2540
a	2541
r + e + t -> "ret"	2542
. + h + a + s -> ".has"	2543
p + a + r + e + n + t -> "parent"	2544
S + t + a + t + u + s + . -> "Status."	2545
S + e + l + e + c + t + i + o + n -> "Selection"	2546
s + W + i + t + h -> "sWith"	2547
e + m + p + t + y -> "empty"	2548
E + x + c + e + p + t + i + o + n + e + x -> "Exceptionex"	2549
4 + j + . + L + o + g + g + e + r -> "4j.Logger"	2550
O + n + C + l + i + c + k + L + i + s + t + e + n + e + r -> "OnClickListener"	2551
a + g + e + r -> "ager"	2552
) + ) + <EOL> -> "))<EOL>"	2553
C + O + L -> "COL"	2554
f + o + r + m + a + t -> "format"	2555
F + u + t + u + r + e -> "Future"	2556
M + a + p + < -> "Map<"	2557
. + c + o + r + e -> ".core"	2558
L + o + g + . -> "Log."	2559
o + u + l + d -> "ould"	2560
t + r -> "tr"	2561
. + c + l + e + a + r -> ".clear"	2562
F + _ -> "F_"	2563
a + c + t + u + a + l -> "actual"	2564
R + o + u + t -> "Rout"	2565
C + o + m + p + a + t -> "Compat"	2566
d + e + l + e + t + e -> "delete"	2567
I + g + n -> "Ign"	2568
F + e + a + t + u + r + e -> "Feature"	2569
( + ) + . + t + o + S + t + r + i + n + g -> "().toString"	2570
N + o + t + F + o + u + n + d -> "NotFound"	2571
p + o + s + i + t + i + o + n -> "position"	2572
S + Q + L -> "SQL"	2573
C + o + m + m + o + n -> "Common"	2574
= + h -> "=h"	2575
, + true -> ",true"	2576
. + c + u + r + r + e + n + t -> ".current"	2577
( + e + x -> "(ex"	2578
e + x + t + e + n + s + i + o + n -> "extension"	2579
t + i + e + s + . -> "ties."	2580
d + u + c + t -> "duct"	2581
r + e + g -> "reg"	2582
final + int -> "finalint"	2583
t + a -> "ta"	2584
W + e -> "We"	2585
a + t + i + s -> "atis"	2586
public + abstract -> "publicabstract"	2587
S + T + R -> "STR"	2588
S + u + p + p + o + r + t -> "Support"	2589
s + i -> "si"	2590
T + Y + P + E + _ -> "TYPE_"	2591
S + h + o + r + t -> "Short"	2592
L + A -> "LA"	2593
T + h + r + o + w + a + b + l + e + { + <EOL> -> "Throwable{<EOL>"	2594
return + r + e + s + u + l + t -> "returnresult"	2595
if + ( + ! -> "if(!"	2596
L + a + n + g -> "Lang"	2597
. + d + a + t -> ".dat"	2598
= + f -> "=f"	2599
. + t + r -> ".tr"	2600
P + r + o + c + e + s + s + o + r -> "Processor"	2601
a + t + f + o + r + m -> "atform"	2602
M + a + i + n -> "Main"	2603
m + e + t + h + o + d -> "method"	2604
S + e + q + u + e + n + c + e -> "Sequence"	2605
w + i + d + t + h -> "width"	2606
R + e + c + t -> "Rect"	2607
c + o + n + t + e + n + t -> "content"	2608
v + e + r + s + i + o + n -> "version"	2609
. + T -> ".T"	2610
a + n + n + e + r -> "anner"	2611
finally + { + <EOL> -> "finally{<EOL>"	2612
} + finally + { + <EOL> -> "}finally{<EOL>"	2613
this + . + j -> "this.j"	2614
. + B + u + i + l + d + e + r -> ".Builder"	2615
S + t + e + p -> "Step"	2616
i + n + e + s -> "ines"	2617
c + a + l + l -> "call"	2618
B + i + n -> "Bin"	2619
s + t + r + i + n + g -> "string"	2620
import + a + n + d + r + o + i + d + . + c + o + n + t + e + n + t + . -> "importandroid.content."	2621
A + r + e -> "Are"	2622
I + m + m + u + t + a + b + l + e -> "Immutable"	2623
. + a + p + p -> ".app"	2624
, + d -> ",d"	2625
i + a + s -> "ias"	2626
G + E + R -> "GER"	2627
( + O + b + j + e + c + t -> "(Object"	2628
. + i + n + f + o -> ".info"	2629
u + m + m -> "umm"	2630
e + s + t + i + o + n -> "estion"	2631
D + o + c -> "Doc"	2632
P + a + s + s + w + o + r + d -> "Password"	2633
C + l + a + s + s + < + ? -> "Class<?"	2634
c + h + e + d + u + l -> "chedul"	2635
o + c + k + i + t + o + . -> "ockito."	2636
( + S + t + r + i + n + g + [ + ] -> "(String[]"	2637
v + a + l + i + d + a + t + e -> "validate"	2638
u + c + k -> "uck"	2639
( + r + e + s + u + l + t -> "(result"	2640
( + c + h -> "(ch"	2641
b + o + a + r + d -> "board"	2642
. + c + h + e + c + k -> ".check"	2643
c + l + a + s + s -> "class"	2644
S + u + b + s -> "Subs"	2645
I + T -> "IT"	2646
l + o + y + m + e + n + t -> "loyment"	2647
A + u + d -> "Aud"	2648
. + s + i + z + e + ( + ) + ) + ; + <EOL> -> ".size());<EOL>"	2649
I + d + = -> "Id="	2650
L + e + f + t -> "Left"	2651
s + t + a + t + e -> "state"	2652
P + o + l + i + c + y -> "Policy"	2653
< + T + > -> "<T>"	2654
m + d -> "md"	2655
. + b + i + n + d + . + a + n + n + o + t + a + t + i + o + n + . -> ".bind.annotation."	2656
S + e + t -> "Set"	2657
. + s + t + a + r + t -> ".start"	2658
0 + _ -> "0_"	2659
. + s + u + b + s + t + r + i + n + g -> ".substring"	2660
n + u + m -> "num"	2661
d + o -> "do"	2662
A + X + _ -> "AX_"	2663
super + . + o + n -> "super.on"	2664
E + R + R -> "ERR"	2665
( + n -> "(n"	2666
b + a + s + e -> "base"	2667
h + e -> "he"	2668
E + m + a + i + l -> "Email"	2669
y + c + l + e + r -> "ycler"	2670
O + n + e -> "One"	2671
k + e + y -> "key"	2672
. + a + c -> ".ac"	2673
B + o + r + d + e + r -> "Border"	2674
D + e + c + l -> "Decl"	2675
P + a + c + k + e + t -> "Packet"	2676
e + n + a + m + e -> "ename"	2677
. + a + p + i -> ".api"	2678
O + R + _ -> "OR_"	2679
_ + d -> "_d"	2680
d + e + f + a + u + l + t -> "default"	2681
o + u + s + e -> "ouse"	2682
. + g + e + t + T + e + x + t -> ".getText"	2683
( + c + o + l -> "(col"	2684
R + e + d -> "Red"	2685
a + t + e + g + y -> "ategy"	2686
X + M + L -> "XML"	2687
= + new + A + r + r + a + y + L + i + s + t + < + > + ( + ) + ; + <EOL> -> "=newArrayList<>();<EOL>"	2688
S + e + t + < -> "Set<"	2689
B + y + t + e + A + r + r + a + y -> "ByteArray"	2690
} + catch + ( + I + O -> "}catch(IO"	2691
S + e + t + t + i + n + g + s -> "Settings"	2692
F + a + i + l -> "Fail"	2693
. + e + n + t + i + t + y -> ".entity"	2694
U + n + s -> "Uns"	2695
s + s -> "ss"	2696
j + a + v + a + x + . + s + w + i + n + g + . + J -> "javax.swing.J"	2697
E + S -> "ES"	2698
. + s + e + n + d -> ".send"	2699
S + T + A + N -> "STAN"	2700
P + r + o + x + y -> "Proxy"	2701
E + d + i + t + o + r -> "Editor"	2702
. + d + r + a + w -> ".draw"	2703
t + h + e + n + R + e + t + u + r + n -> "thenReturn"	2704
E + q + u + a + l + s + ( -> "Equals("	2705
b + l -> "bl"	2706
= + new + F + i + l + e -> "=newFile"	2707
A + t + t + r + i + b + u + t + e + s -> "Attributes"	2708
r + u + p -> "rup"	2709
_ + f -> "_f"	2710
I + f -> "If"	2711
import + o + r + g + . + e + c + l + i + p + s + e -> "importorg.eclipse"	2712
i + f + i + e + d -> "ified"	2713
. + r + u + n -> ".run"	2714
P + r + e + d -> "Pred"	2715
v + e + d -> "ved"	2716
( + S + t + r + i + n + g + n + a + m + e -> "(Stringname"	2717
T + e + s + t + { + <EOL> -> "Test{<EOL>"	2718
public + interface -> "publicinterface"	2719
i + t + e + r + . -> "iter."	2720
o + p + t + i + o + n -> "option"	2721
i + s + t + r -> "istr"	2722
return + c -> "returnc"	2723
N + a + m + e + ( + ) + { + <EOL> -> "Name(){<EOL>"	2724
B + o + o + k -> "Book"	2725
T + r + a + c + k -> "Track"	2726
} + , + { -> "},{"	2727
B + a + c + k + g + r + o + u + n + d -> "Background"	2728
v + e + r + i + f + y -> "verify"	2729
i + m + e -> "ime"	2730
H + T -> "HT"	2731
D + a + y -> "Day"	2732
a + m + e + r -> "amer"	2733
u + n + k -> "unk"	2734
S + E + R -> "SER"	2735
public + static + void + m + a + i + n -> "publicstaticvoidmain"	2736
a + p + p + l + y -> "apply"	2737
a + n + c + e + l -> "ancel"	2738
I + n + f -> "Inf"	2739
s + o + u + r + c + e -> "source"	2740
. + class + , -> ".class,"	2741
b + y -> "by"	2742
d + f -> "df"	2743
i + p + e -> "ipe"	2744
P + u + b + l -> "Publ"	2745
_ + s + t -> "_st"	2746
d + e + o -> "deo"	2747
m + s + g -> "msg"	2748
. + e + r + r + o + r -> ".error"	2749
( + f + i + l + e -> "(file"	2750
B + a + g -> "Bag"	2751
c + o + l + u + m + n -> "column"	2752
F + l + a + g -> "Flag"	2753
O + v + e + r -> "Over"	2754
a + j -> "aj"	2755
a + s + L + i + s + t -> "asList"	2756
T + o + a + s + t -> "Toast"	2757
b + o + x -> "box"	2758
F + O -> "FO"	2759
. + c + o + n + c + u + r + r + e + n + t + . -> ".concurrent."	2760
K + E + Y -> "KEY"	2761
S + t + r + u + c + t -> "Struct"	2762
u + c + t + o + r -> "uctor"	2763
import + c + o + m + . + s -> "importcom.s"	2764
I + d + ( -> "Id("	2765
V + i + s + i + b + l + e -> "Visible"	2766
e + r + g + e -> "erge"	2767
< + T + > -> "<T>"	2768
p + a + r + s + e -> "parse"	2769
this + . + g + e + t -> "this.get"	2770
_ + 0 + 0 -> "_00"	2771
d + k -> "dk"	2772
c + e + l -> "cel"	2773
, + FLOAT_LITERAL + ) + ; + <EOL> -> ",FLOAT_LITERAL);<EOL>"	2774
m + i + n -> "min"	2775
o + u + s -> "ous"	2776
( + c + o + m -> "(com"	2777
R + i + g + h + t -> "Right"	2778
2 + 0 -> "20"	2779
d + e + p -> "dep"	2780
P + r + o + d + u + c -> "Produc"	2781
private + static + final -> "privatestaticfinal"	2782
N + a + m + e + ( + ) + ) + ; + <EOL> -> "Name());<EOL>"	2783
I + n + s + t + a + n + c + e + S + t + a + t + e -> "InstanceState"	2784
a + t + e + s -> "ates"	2785
N + u + l + l + ( -> "Null("	2786
a + r + g + s + ) + { + <EOL> -> "args){<EOL>"	2787
( + true -> "(true"	2788
d + i + s -> "dis"	2789
e + e + t -> "eet"	2790
D + e + l + e + t + e -> "Delete"	2791
V + O -> "VO"	2792
a + c + k + s + o + n -> "ackson"	2793
o + m + i + c -> "omic"	2794
f + e + r + e + n + c + e + s -> "ferences"	2795
k + n + o + w + n -> "known"	2796
. + c + o + m + m + o + n + s + . -> ".commons."	2797
W + o + r + l + d -> "World"	2798
M + e + m + b + e + r -> "Member"	2799
( + long -> "(long"	2800
1 + 3 -> "13"	2801
R + e + g + i + o + n -> "Region"	2802
S + u + c + c + e + s + s -> "Success"	2803
A + t + t -> "Att"	2804
f + x -> "fx"	2805
. + d + o + m + a + i + n -> ".domain"	2806
R + e + s + o + u + r + c + e + s -> "Resources"	2807
h + a + n + d -> "hand"	2808
h + e + i + g + h + t -> "height"	2809
, + DECIMAL_LITERAL + , + DECIMAL_LITERAL + , + DECIMAL_LITERAL + , + DECIMAL_LITERAL + , + DECIMAL_LITERAL + , + DECIMAL_LITERAL + , + DECIMAL_LITERAL + , + DECIMAL_LITERAL -> ",DECIMAL_LITERAL,DECIMAL_LITERAL,DECIMAL_LITERAL,DECIMAL_LITERAL,DECIMAL_LITERAL,DECIMAL_LITERAL,DECIMAL_LITERAL,DECIMAL_LITERAL"	2810
T + i + m + e + s + t + a + m + p -> "Timestamp"	2811
0 + = + new -> "0=new"	2812
v + i + c + e + s -> "vices"	2813
s + [ + DECIMAL_LITERAL + ] -> "s[DECIMAL_LITERAL]"	2814
e + v + e + n + t + . -> "event."	2815
b + a + r -> "bar"	2816
i + n + i + s + h -> "inish"	2817
( + STRING_LITERAL + ) + . + a + p + p + e + n + d -> "(STRING_LITERAL).append"	2818
- + FLOAT_LITERAL -> "-FLOAT_LITERAL"	2819
0 + . + s + e + t -> "0.set"	2820
P + e + r + s + o + n -> "Person"	2821
import + c + o + m + . + f -> "importcom.f"	2822
( + ) + throws + T + h + r + o + w + a + b + l + e + { + <EOL> -> "()throwsThrowable{<EOL>"	2823
r + o + p -> "rop"	2824
if + ( + i + s -> "if(is"	2825
j + a + v + a + . + a + w + t + . -> "java.awt."	2826
= + i + n -> "=in"	2827
public + static + void + m + a + i + n + ( + S + t + r + i + n + g + [ + ] -> "publicstaticvoidmain(String[]"	2828
D + S -> "DS"	2829
1 + . + g + e + t -> "1.get"	2830
F + u + n + c + i + o + n -> "Funcion"	2831
q + u + e + r + y -> "query"	2832
u + p + l + e -> "uple"	2833
. + g + e + t + L + o + g + g + e + r -> ".getLogger"	2834
, + S -> ",S"	2835
import + j + a + v + a + . + i + o + . + F + i + l + e -> "importjava.io.File"	2836
S + e + l + e + c + t -> "Select"	2837
e + x + e + c + u + t + e -> "execute"	2838
o + u + t + p + u + t -> "output"	2839
a + s + s + e + r + t + F + a + l + s + e -> "assertFalse"	2840
i + s + t + a + n + c + e -> "istance"	2841
import + j + a + v + a + x + . -> "importjavax."	2842
i + s + . -> "is."	2843
. + c + o + m + p -> ".comp"	2844
B + r -> "Br"	2845
= + c + r + e + a + t + e -> "=create"	2846
P + r + i + m -> "Prim"	2847
E + n + g -> "Eng"	2848
l + f + 4 + j + . + L + o + g + g + e + r -> "lf4j.Logger"	2849
p + r + o + c + e + s + s -> "process"	2850
L + o + g + i + n -> "Login"	2851
P + l + a + y -> "Play"	2852
P + A + R -> "PAR"	2853
. + r + e + m + o + v + e -> ".remove"	2854
( + double -> "(double"	2855
c + e + l + l -> "cell"	2856
= + this + . -> "=this."	2857
o + f + f + s + e + t -> "offset"	2858
public + B + u + i + l + d + e + r -> "publicBuilder"	2859
B + i + n + d + i + n + g -> "Binding"	2860
u + x -> "ux"	2861
e + s + t + e + d -> "ested"	2862
T + Y + _ -> "TY_"	2863
i + f + i + e + r -> "ifier"	2864
k + a -> "ka"	2865
p + l + a + y + e + r -> "player"	2866
s + e + r + v -> "serv"	2867
N + a + m + e + ) + { + <EOL> -> "Name){<EOL>"	2868
u + r + i -> "uri"	2869
e + s + s + a + g + e + s -> "essages"	2870
. + I -> ".I"	2871
p + a + g + e -> "page"	2872
l + a + s + s -> "lass"	2873
d + e + s -> "des"	2874
o + ; + <EOL> -> "o;<EOL>"	2875
_ + c + o + n -> "_con"	2876
6 + 4 -> "64"	2877
T + i + m + e + o + u + t -> "Timeout"	2878
w + e + b -> "web"	2879
D + b -> "Db"	2880
B + u + i + l + d + e + r + ( + ) + ; + <EOL> -> "Builder();<EOL>"	2881
t + i + f + y -> "tify"	2882
D + a + t + a + S + o + u + r + c + e -> "DataSource"	2883
s + . + s + e + t -> "s.set"	2884
o + p + e -> "ope"	2885
n + a + p -> "nap"	2886
v + e + n + t + o + r + y -> "ventory"	2887
. + a + d + d + ( + new -> ".add(new"	2888
( + CHAR_LITERAL -> "(CHAR_LITERAL"	2889
I + g + n + o + r + e -> "Ignore"	2890
M + a + r + k -> "Mark"	2891
w + h + e + n -> "when"	2892
. + N -> ".N"	2893
A + P + I -> "API"	2894
C + l + u + s + t + e + r -> "Cluster"	2895
E + l -> "El"	2896
F + o + l + d + e + r -> "Folder"	2897
i + z + e + r -> "izer"	2898
a + b + l + e + s -> "ables"	2899
I + d + ( + ) + { + <EOL> -> "Id(){<EOL>"	2900
t + a + g -> "tag"	2901
S + q + l -> "Sql"	2902
import + o + r + g + . + s + l + f + 4 + j + . + L + o + g + g + e + r -> "importorg.slf4j.Logger"	2903
f + i + e + l + d -> "field"	2904
( + ) + . + e + q + u + a + l + s + ( -> "().equals("	2905
S + c + r + o + l + l -> "Scroll"	2906
a + p + p + l + i + c + a + t + i + o + n -> "application"	2907
package + c + o + m -> "packagecom"	2908
l + e + c + t + . -> "lect."	2909
s + e + s + s + i + o + n -> "session"	2910
I + n + t + e + g + e + r + . -> "Integer."	2911
F + l + o + w -> "Flow"	2912
l + a + t + i + o + n -> "lation"	2913
( + h -> "(h"	2914
I + N + _ -> "IN_"	2915
. + o + s + . -> ".os."	2916
m + a + n -> "man"	2917
H + a + s + h + M + a + p + ; + <EOL> -> "HashMap;<EOL>"	2918
I + n + v -> "Inv"	2919
a + t + t + r -> "attr"	2920
s + t + a + c + k -> "stack"	2921
e + r + r -> "err"	2922
a + z + z -> "azz"	2923
!= + null + ) + <EOL> -> "!=null)<EOL>"	2924
T + e + x + t + F + i + e + l + d -> "TextField"	2925
I + d + e + n + t + i + f + i + e + r -> "Identifier"	2926
A + v -> "Av"	2927
W + o + r + d -> "Word"	2928
import + j + a + v + a + x + . + p + e + r + s + i + s + t + e + n + c + e -> "importjavax.persistence"	2929
for + ( + int + i + = + DECIMAL_LITERAL + ; + i + < -> "for(inti=DECIMAL_LITERAL;i<"	2930
. + c + o + n + t + a + i + n + s + ( -> ".contains("	2931
. + c + h + a + r -> ".char"	2932
i + n + t + e -> "inte"	2933
R + e + p -> "Rep"	2934
A + L + _ -> "AL_"	2935
R + e + q + u + e + s + t + r + e + q + u + e + s + t -> "Requestrequest"	2936
) + , + new -> "),new"	2937
E + n + v + i + r + o + n + m + e + n + t -> "Environment"	2938
s + h + o + t -> "shot"	2939
> + DECIMAL_LITERAL -> ">DECIMAL_LITERAL"	2940
I + G -> "IG"	2941
I + D + _ -> "ID_"	2942
S + P -> "SP"	2943
c + . -> "c."	2944
r + m -> "rm"	2945
a + ; + <EOL> -> "a;<EOL>"	2946
g + r + a + p + h + i + c + s + . -> "graphics."	2947
, + this -> ",this"	2948
i + s + t + o + r + y -> "istory"	2949
b + o + o + k -> "book"	2950
a + n + d + a + r + d -> "andard"	2951
a + v + e + d + I + n + s + t + a + n + c + e + S + t + a + t + e -> "avedInstanceState"	2952
T + Y + P + E -> "TYPE"	2953
i + j -> "ij"	2954
s + l -> "sl"	2955
u + n -> "un"	2956
S + T + A + T -> "STAT"	2957
private + static -> "privatestatic"	2958
r + e + c -> "rec"	2959
private + int -> "privateint"	2960
R + e + m + o + t + e -> "Remote"	2961
o + b + j + e + c + t -> "object"	2962
i + t + i + v + e -> "itive"	2963
u + m + e -> "ume"	2964
1 + = -> "1="	2965
p + l + a + y + e + r -> "player"	2966
B + e + f + o + r + e -> "Before"	2967
y + n + a + m -> "ynam"	2968
C + r + e -> "Cre"	2969
D + i + m + e + n + s + i + o + n -> "Dimension"	2970
C + L -> "CL"	2971
a + o + . -> "ao."	2972
o + b + j -> "obj"	2973
V + a + l + u + e + ; + <EOL> -> "Value;<EOL>"	2974
b + o + t -> "bot"	2975
. + u + t + i + l + s + . -> ".utils."	2976
. + i + s + E + m + p + t + y -> ".isEmpty"	2977
u + r + e + s -> "ures"	2978
( + float -> "(float"	2979
M + e + d + i + a -> "Media"	2980
A + n + a + l -> "Anal"	2981
T + o + t + a + l -> "Total"	2982
O + p + e + r + a + t + o + r -> "Operator"	2983
) + , + <EOL> -> "),<EOL>"	2984
1 + . -> "1."	2985
. + l + e + n + g + t + h + ( + ) -> ".length()"	2986
C + o + m + m + e + n + t -> "Comment"	2987
t + a + s + k -> "task"	2988
H + a + s + h + M + a + p + < + > + ( + ) + ; + <EOL> -> "HashMap<>();<EOL>"	2989
. + g + e + t + K + e + y -> ".getKey"	2990
import + d + e -> "importde"	2991
t + r + a + n + s + a + c + t + i + o + n -> "transaction"	2992
public + class + S -> "publicclassS"	2993
N + o + t + N + u + l + l + ( -> "NotNull("	2994
r + e + d + e + n + t + i + a + l -> "redential"	2995
o + i + n + t -> "oint"	2996
2 + = -> "2="	2997
p + i -> "pi"	2998
i	2999
return + DECIMAL_LITERAL + ; + <EOL> -> "returnDECIMAL_LITERAL;<EOL>"	3000
i + t + i + e + s -> "ities"	3001
l + e + v + e + l -> "level"	3002
r + i + t + e + r + i + o + n -> "riterion"	3003
D + a + t + e + ; + <EOL> -> "Date;<EOL>"	3004
( + ) + ) + <EOL> -> "())<EOL>"	3005
2 + ; + <EOL> -> "2;<EOL>"	3006
a + t + i + o + n + . -> "ation."	3007
. + c + o + n + t + r + o + l -> ".control"	3008
R + e + s + o + l + v + e + r -> "Resolver"	3009
j + u + p -> "jup"	3010
v + t -> "vt"	3011
, + f -> ",f"	3012
e + m + a + i + l -> "email"	3013
. + c + o + m + m + o + n + . -> ".common."	3014
b + i + t -> "bit"	3015
import + static -> "importstatic"	3016
f + f + e + r + . -> "ffer."	3017
G + E -> "GE"	3018
R + E + F -> "REF"	3019
r + o -> "ro"	3020
( + x -> "(x"	3021
( + null + ) + ; + <EOL> -> "(null);<EOL>"	3022
a + r + r -> "arr"	3023
N + a + m + e + ( -> "Name("	3024
_ + 0 + 0 + 5 -> "_005"	3025
A + c + t + i + v + e -> "Active"	3026
U + t + i + l + s + . + g + e + t -> "Utils.get"	3027
import + a + n + d + r + o + i + d + . + s + u + p + p + o + r + t -> "importandroid.support"	3028
super + ( -> "super("	3029
if + ( + p -> "if(p"	3030
H + O -> "HO"	3031
A + r + r + a + y + s + . + a + s + L + i + s + t -> "Arrays.asList"	3032
o + t + y + p + e -> "otype"	3033
W + r + i + t + e -> "Write"	3034
i + o + d -> "iod"	3035
o + d + i + n + g -> "oding"	3036
_ + i + d -> "_id"	3037
a + s + t + i + c -> "astic"	3038
u + d + e + n + t -> "udent"	3039
R + A -> "RA"	3040
e + n + s + o + r -> "ensor"	3041
t + e + x + t -> "text"	3042
u + c + t + i + o + n -> "uction"	3043
( + I + n + t + e + g + e + r -> "(Integer"	3044
L + O + C -> "LOC"	3045
I + t + e + m + S + t + a + c + k -> "ItemStack"	3046
return + p -> "returnp"	3047
f + f + e + c + t -> "ffect"	3048
w + a + y -> "way"	3049
x	3050
p + o + s + i + t + i + o + n -> "position"	3051
u + l + e + s -> "ules"	3052
( + i + n + p + u + t -> "(input"	3053
A + c + t + i + o + n + L + i + s + t + e + n + e + r -> "ActionListener"	3054
n + u + m + b + e + r -> "number"	3055
return + r + e + s + u + l + t + ; + <EOL> -> "returnresult;<EOL>"	3056
G + o -> "Go"	3057
I + N + S + T + A + N -> "INSTAN"	3058
e + r + e -> "ere"	3059
a + l + c + u + l -> "alcul"	3060
( + STRING_LITERAL + ) + , -> "(STRING_LITERAL),"	3061
t + r + a + n + s + f + o + r + m -> "transform"	3062
B + i + g + D + e + c + i + m + a + l -> "BigDecimal"	3063
a + b + i + l + i + t + y -> "ability"	3064
E + v + e + n + t + ; + <EOL> -> "Event;<EOL>"	3065
i + a + n -> "ian"	3066
D + e + s + c -> "Desc"	3067
i + t + c + h -> "itch"	3068
1 + 6 -> "16"	3069
import + a + n + d + r + o + i + d + . + o + s + . -> "importandroid.os."	3070
o + p + e + r -> "oper"	3071
V + i + e + w + . -> "View."	3072
o + r + m + a + l -> "ormal"	3073
H + t + t + p + C + l + i + e + n + t -> "HttpClient"	3074
import + j + a + v + a + . + u + t + i + l + . + c + o + n + c + u + r + r + e + n + t + . -> "importjava.util.concurrent."	3075
, + double -> ",double"	3076
D + A + O -> "DAO"	3077
p + e + c + t -> "pect"	3078
l + o + g + g -> "logg"	3079
V + i + s + i + b + i + l + i + t + y -> "Visibility"	3080
. + h + t + t + p + . -> ".http."	3081
o + o + t -> "oot"	3082
i + t + h + m -> "ithm"	3083
. + g + e + t + T + y + p + e -> ".getType"	3084
1 + 8 -> "18"	3085
a + m + e + r + a -> "amera"	3086
e + t + c + h -> "etch"	3087
g + r + e + g -> "greg"	3088
a + t + a + l -> "atal"	3089
_ + l -> "_l"	3090
R + u + n + n + a + b + l + e -> "Runnable"	3091
import + m -> "importm"	3092
H + a + n + d + l + e -> "Handle"	3093
v + o + k + e -> "voke"	3094
C + h + a + t -> "Chat"	3095
C + o + n + s + u + m + e + r -> "Consumer"	3096
e + . + g + e + t + M + e + s + s + a + g + e -> "e.getMessage"	3097
( + i + ) + ; + <EOL> -> "(i);<EOL>"	3098
a + c + t + i + v + e -> "active"	3099
1 + 4 -> "14"	3100
r + e + s + o + l -> "resol"	3101
P + l + a + n -> "Plan"	3102
e + l + i + n + e -> "eline"	3103
. + a + p + p + e + n + d + ( + STRING_LITERAL + ) + ; + <EOL> -> ".append(STRING_LITERAL);<EOL>"	3104
a + u + t -> "aut"	3105
a + l -> "al"	3106
A + u + t + h + e + n + t + i + c + a + t + i + o + n -> "Authentication"	3107
( + ) + -> -> "()->"	3108
E + x + p + r -> "Expr"	3109
E + x + i + s + t -> "Exist"	3110
e + d + i + t -> "edit"	3111
e + e + k -> "eek"	3112
M + y -> "My"	3113
D + r + i + v + e + r -> "Driver"	3114
A + r + e + a -> "Area"	3115
S + y + m + b + o + l -> "Symbol"	3116
G + l + o + b + a + l -> "Global"	3117
B + a + t + c + h -> "Batch"	3118
D + u + r + a + t + i + o + n -> "Duration"	3119
S + t + r + i + n + g + [ + ] -> "String[]"	3120
s + [ + i + ] -> "s[i]"	3121
j + u + p + i + t + e + r + . -> "jupiter."	3122
public + S + t + r + i + n + g + t + o + S + t + r + i + n + g -> "publicStringtoString"	3123
N + _ -> "N_"	3124
) + || -> ")||"	3125
s + ( + ) + ) + { + <EOL> -> "s()){<EOL>"	3126
E + n + g + i + n + e -> "Engine"	3127
i + b + l + e -> "ible"	3128
e + a + s + u + r + e -> "easure"	3129
o + y -> "oy"	3130
a + n + g + l + e -> "angle"	3131
h + a + s + h + C + o + d + e -> "hashCode"	3132
s + o + l -> "sol"	3133
A + G + E + _ -> "AGE_"	3134
S + c + o + r + e -> "Score"	3135
. + s + a + v + e -> ".save"	3136
W + _ -> "W_"	3137
h + e + a + d -> "head"	3138
q + u + e + u + e -> "queue"	3139
n + a + p + s + h + o + t -> "napshot"	3140
I + d + ( + ) + ) + ; + <EOL> -> "Id());<EOL>"	3141
D + o + m + a + i + n -> "Domain"	3142
i + c + t + i + o + n -> "iction"	3143
+ + STRING_LITERAL + , -> "+STRING_LITERAL,"	3144
G + e + n + e + r + a + t + e + d -> "Generated"	3145
- + DECIMAL_LITERAL + ) + ; + <EOL> -> "-DECIMAL_LITERAL);<EOL>"	3146
* + DECIMAL_LITERAL -> "*DECIMAL_LITERAL"	3147
a + d + a + p + t + e + r -> "adapter"	3148
B + i + t + m + a + p -> "Bitmap"	3149
. + d + e + b + u + g -> ".debug"	3150
H + E -> "HE"	3151
h + i + k + a + r + i + C + o + n + f + i + g -> "hikariConfig"	3152
c + o + d + e -> "code"	3153
P + r + e + f + i + x -> "Prefix"	3154
E + x + c + e + p + t + i + o + n + e + x + ) + { + <EOL> -> "Exceptionex){<EOL>"	3155
a + c + e + s -> "aces"	3156
t + o + m -> "tom"	3157
( + DECIMAL_LITERAL + ) + . + g + e + t -> "(DECIMAL_LITERAL).get"	3158
D + e + t + a + i + l + s -> "Details"	3159
o + r + g + . + j + u + n + i + t + . + A + s + s + e + r + t + . + a + s + s + e + r + t + T + r + u + e -> "org.junit.Assert.assertTrue"	3160
i + s + E + q + u + a + l + T + o -> "isEqualTo"	3161
( + m + e + s + s + a + g + e -> "(message"	3162
l + a + s + t -> "last"	3163
import + o + r + g + . + j + u + n + i + t + . + T + e + s + t + ; + <EOL> -> "importorg.junit.Test;<EOL>"	3164
. + c + l + e + a + r + ( + ) + ; + <EOL> -> ".clear();<EOL>"	3165
R + e + q + u + i + r + e -> "Require"	3166
S + t + r + a + t + e + g + y -> "Strategy"	3167
s + e + r + i + a + l -> "serial"	3168
. + f + r + o + m -> ".from"	3169
t + i + c + l + e -> "ticle"	3170
F + o + o -> "Foo"	3171
. + f + o + r + m + a + t + ( + STRING_LITERAL + , -> ".format(STRING_LITERAL,"	3172
1 + ; + <EOL> -> "1;<EOL>"	3173
t + a + b + l + e -> "table"	3174
. + b + u + i + l + d -> ".build"	3175
t + e + m + p + l + a + t + e -> "template"	3176
e + x + c + e + p + t + i + o + n -> "exception"	3177
a + s + s + e + r + t + T + r + u + e + ( -> "assertTrue("	3178
public + S + t + r + i + n + g + t + o + S + t + r + i + n + g + ( + ) + { + <EOL> -> "publicStringtoString(){<EOL>"	3179
( + STRING_LITERAL + , + new -> "(STRING_LITERAL,new"	3180
R + e + p + o + s + i + t + o + r + y + ; + <EOL> -> "Repository;<EOL>"	3181
a + n + c + h -> "anch"	3182
e + t + a + d + a + t + a -> "etadata"	3183
v + c -> "vc"	3184
U + t + i + l + ; + <EOL> -> "Util;<EOL>"	3185
return + ( -> "return("	3186
a + t + i + o + n + ; + <EOL> -> "ation;<EOL>"	3187
, + STRING_LITERAL + ) + ) + ; + <EOL> -> ",STRING_LITERAL));<EOL>"	3188
g + o + r -> "gor"	3189
. + j + a + c + k + s + o + n -> ".jackson"	3190
E + a + c + h -> "Each"	3191
+ + STRING_LITERAL + + + STRING_LITERAL + + + STRING_LITERAL + + + STRING_LITERAL + + + STRING_LITERAL + + + STRING_LITERAL + + + STRING_LITERAL + + + STRING_LITERAL -> "+STRING_LITERAL+STRING_LITERAL+STRING_LITERAL+STRING_LITERAL+STRING_LITERAL+STRING_LITERAL+STRING_LITERAL+STRING_LITERAL"	3192
i + b + r + a + r + y -> "ibrary"	3193
2 + , -> "2,"	3194
I + P -> "IP"	3195
G + _ -> "G_"	3196
M + S -> "MS"	3197
V + e + r + t + e + x -> "Vertex"	3198
. + b + u + i + l + d + e + r -> ".builder"	3199
r + e + f -> "ref"	3200
t + o + o + l -> "tool"	3201
2 + . -> "2."	3202
e + c + t + e + d -> "ected"	3203
e + r + o -> "ero"	3204
C + o + n + t + a + c + t -> "Contact"	3205
P + e + r + f + o + r + m -> "Perform"	3206
E + x + c + e + p + t + i + o + n + ( + ) + ; + <EOL> -> "Exception();<EOL>"	3207
e + r + t -> "ert"	3208
. + g + e + t + M + e + s + s + a + g + e -> ".getMessage"	3209
( + e + ) + ; + <EOL> -> "(e);<EOL>"	3210
G + e + n + e + r + i + c -> "Generic"	3211
a + r + g -> "arg"	3212
R + a + d -> "Rad"	3213
s + . + m -> "s.m"	3214
) + ? -> ")?"	3215
( + STRING_LITERAL + , + DECIMAL_LITERAL + ) + ; + <EOL> -> "(STRING_LITERAL,DECIMAL_LITERAL);<EOL>"	3216
f + i + l -> "fil"	3217
s + i + n + g -> "sing"	3218
s + h + o + w -> "show"	3219
K + E + Y + _ -> "KEY_"	3220
u + s + ( -> "us("	3221
A + T + I + O + N -> "ATION"	3222
= + FLOAT_LITERAL + ; + <EOL> -> "=FLOAT_LITERAL;<EOL>"	3223
[ + j -> "[j"	3224
r + e + q -> "req"	3225
. + W -> ".W"	3226
A + m + o + u + n + t -> "Amount"	3227
F	3228
u + p + p + l -> "uppl"	3229
r + i + g + h + t -> "right"	3230
continue + ; + <EOL> -> "continue;<EOL>"	3231
j + s + o + n -> "json"	3232
. + s + t + r + i + n + g -> ".string"	3233
C + O + N + T -> "CONT"	3234
a + n + c -> "anc"	3235
T	3236
M + e + m + o + r + y -> "Memory"	3237
A + u + t + o -> "Auto"	3238
V + a + l + i + d + a + t + o + r -> "Validator"	3239
O + P -> "OP"	3240
throw + new + I + l + l + e + g + a + l + A + r + g + u + m + e + n + t -> "thrownewIllegalArgument"	3241
v + a + l + u + e + ) + { + <EOL> -> "value){<EOL>"	3242
r + u + n -> "run"	3243
E + d + g + e -> "Edge"	3244
j + u + p + i + t + e + r + . + a + p + i + . -> "jupiter.api."	3245
U + C -> "UC"	3246
o + o + l -> "ool"	3247
L + o + c + a + l + e -> "Locale"	3248
s + ( + ) + ) + ; + <EOL> -> "s());<EOL>"	3249
b + u + f + f + e + r -> "buffer"	3250
g + l + e -> "gle"	3251
s + . + l -> "s.l"	3252
, + this + . -> ",this."	3253
h + a + n + d + l + e -> "handle"	3254
p + a + t + h -> "path"	3255
. + x -> ".x"	3256
A + f -> "Af"	3257
i + l + e + d -> "iled"	3258
a + r + m -> "arm"	3259
D + a + t + a + ; + <EOL> -> "Data;<EOL>"	3260
S + c + r + e + e + n -> "Screen"	3261
a + s + t + e + r + x + m + l -> "asterxml"	3262
U + B -> "UB"	3263
, + I + n + t + e + g + e + r -> ",Integer"	3264
r + e + s + u + l + t + = -> "result="	3265
L + a + n + g + u + a + g + e -> "Language"	3266
o + l + o + g -> "olog"	3267
P + a + g -> "Pag"	3268
m + a + r + k -> "mark"	3269
. + t + o + S + t + r + i + n + g + ( + ) + ) + ; + <EOL> -> ".toString());<EOL>"	3270
C + o + m + p + a + r + a + t + o + r -> "Comparator"	3271
l + e + g + a + t + e -> "legate"	3272
a + s + t + e + r + x + m + l + . + j + a + c + k + s + o + n -> "asterxml.jackson"	3273
< + I + n + t + e + g + e + r -> "<Integer"	3274
y + t + e + s -> "ytes"	3275
. + k -> ".k"	3276
I + n + s + t + r -> "Instr"	3277
c + o + l + o + r -> "color"	3278
P + r + i + c + e -> "Price"	3279
. + l + a + y + o + u + t -> ".layout"	3280
A + s + s + e + r + t + . + a + s + s + e + r + t + E + q + u + a + l + s -> "Assert.assertEquals"	3281
r + e + g + i + s + t + e + r -> "register"	3282
g + a + m + e -> "game"	3283
R + e + s + p + o + n + s + e + r + e + s + p + o + n + s + e -> "Responseresponse"	3284
1 + 5 -> "15"	3285
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + w + e + b + . + b + i + n + d + . + a + n + n + o + t + a + t + i + o + n + . -> "importorg.springframework.web.bind.annotation."	3286
I + M -> "IM"	3287
C + r + i + t + e + r + i + o + n -> "Criterion"	3288
. + b + a + c + k -> ".back"	3289
e + n + d + i + n + g -> "ending"	3290
C + h + a + i + n -> "Chain"	3291
k + k -> "kk"	3292
A + c + c + e + s + s + o + r -> "Accessor"	3293
F + u + l + l -> "Full"	3294
a + d + d + r + e + s + s -> "address"	3295
S + e + g + m + e + n + t -> "Segment"	3296
if + ( + this + . -> "if(this."	3297
L + O + G + G + E + R -> "LOGGER"	3298
I + N + S + T + A + N + C + E -> "INSTANCE"	3299
u + c + k + e + t -> "ucket"	3300
2 + D -> "2D"	3301
y + t + e -> "yte"	3302
k	3303
e + m + b + e + r -> "ember"	3304
C + o + o + r + d -> "Coord"	3305
( + T + A + G -> "(TAG"	3306
c + o + n + n -> "conn"	3307
E + n + d + p + o + i + n + t -> "Endpoint"	3308
c + r + i + b + e -> "cribe"	3309
i + u + m -> "ium"	3310
s + . + a + d + d + ( -> "s.add("	3311
E + x + c + e + p + t + i + o + n + ( -> "Exception("	3312
B + a + g + C + o + n + s + t + r + a + i + n + t -> "BagConstraint"	3313
e + n + t + i + t + y -> "entity"	3314
F + O + R -> "FOR"	3315
h + e + r + e -> "here"	3316
e + t + r + i + c -> "etric"	3317
r + u + p + t + e + d -> "rupted"	3318
v + a + s -> "vas"	3319
import + j + a + v + a + f + x -> "importjavafx"	3320
d + e + l -> "del"	3321
h + a + s + h -> "hash"	3322
while + ( -> "while("	3323
g + o + r + i + t + h + m -> "gorithm"	3324
. + g + e + t + N + a + m + e + ( + ) + ) + ; + <EOL> -> ".getName());<EOL>"	3325
c + t + x -> "ctx"	3326
N + a + m + e + ( + ) + ; + <EOL> -> "Name();<EOL>"	3327
R + e + s + p + o + n + s + e + ; + <EOL> -> "Response;<EOL>"	3328
e + n + t + r -> "entr"	3329
import + c + o + m + . + f + a + s + t + e + r + x + m + l + . + j + a + c + k + s + o + n -> "importcom.fasterxml.jackson"	3330
h + t + m + l -> "html"	3331
, + boolean -> ",boolean"	3332
i + n + t + e + n + t -> "intent"	3333
} + catch + ( + I + O + E + x + c + e + p + t + i + o + n + e + ) + { + <EOL> -> "}catch(IOExceptione){<EOL>"	3334
a + s + o + n -> "ason"	3335
R + e + q + u + e + s + t + ; + <EOL> -> "Request;<EOL>"	3336
a + u + t + h + o + r -> "author"	3337
P + l + a + c + e -> "Place"	3338
public + static + void + m + a + i + n + ( + S + t + r + i + n + g + [ + ] + a + r + g + s + ) + { + <EOL> -> "publicstaticvoidmain(String[]args){<EOL>"	3339
e + x + a + m + p + l + e -> "example"	3340
C + _ -> "C_"	3341
D + e + b + u + g -> "Debug"	3342
O + n + l + y -> "Only"	3343
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + b + e + a + n -> "importorg.springframework.bean"	3344
1 + . + s + e + t -> "1.set"	3345
m + . -> "m."	3346
private + final -> "privatefinal"	3347
. + n + a + m + e -> ".name"	3348
S + t + r + i + n + g + s -> "Strings"	3349
M + A -> "MA"	3350
A + f + t + e + r -> "After"	3351
import + j + a + v + a + . + u + t + i + l + . + H + a + s + h + M + a + p + ; + <EOL> -> "importjava.util.HashMap;<EOL>"	3352
W + r + i + t -> "Writ"	3353
C + o + m + b + o -> "Combo"	3354
. + p + a + r + s + e + I + n + t -> ".parseInt"	3355
a + l + l + e + r -> "aller"	3356
import + j + a + v + a + . + a + w + t + . -> "importjava.awt."	3357
import + j + a + v + a + . + u + t + i + l + . + C + o + l + l + e + c + t + i + o + n -> "importjava.util.Collection"	3358
A + d + m + i + n -> "Admin"	3359
w + a + r + d -> "ward"	3360
m + a + r -> "mar"	3361
V + a + l + i + d + a + t + i + o + n -> "Validation"	3362
throw + new + R + u + n + t + i + m + e -> "thrownewRuntime"	3363
F + I + E + L -> "FIEL"	3364
d + b + c -> "dbc"	3365
. + i + n + d + e + x -> ".index"	3366
. + e + x + e + c + u + t + e -> ".execute"	3367
e + d + i + t + o + r -> "editor"	3368
b + o + o + l + e + a + n -> "boolean"	3369
P + r + o + p -> "Prop"	3370
f + a + i + l -> "fail"	3371
, + CHAR_LITERAL -> ",CHAR_LITERAL"	3372
E + n + t + i + t + y + M + a + n + a + g + e + r -> "EntityManager"	3373
B + u + i + l + d + e + r + _ -> "Builder_"	3374
A + l + e + r -> "Aler"	3375
1 + = + new -> "1=new"	3376
P + L -> "PL"	3377
C + o + r -> "Cor"	3378
. + e -> ".e"	3379
m + o + c + k + i + t + o + . -> "mockito."	3380
_ + 0 + 0 + 5 + f -> "_005f"	3381
import + j + a + v + a + x + . + p + e + r + s + i + s + t + e + n + c + e + . -> "importjavax.persistence."	3382
= + { -> "={"	3383
R + a + t + e -> "Rate"	3384
= + - + DECIMAL_LITERAL + ; + <EOL> -> "=-DECIMAL_LITERAL;<EOL>"	3385
c + e + p + t + o + r -> "ceptor"	3386
L + O + b + j + e + c + t -> "LObject"	3387
T + e + r + m -> "Term"	3388
u + r + r + e + n + c + y -> "urrency"	3389
, + STRING_LITERAL + , + STRING_LITERAL + , + STRING_LITERAL + , + STRING_LITERAL + , + STRING_LITERAL + , + STRING_LITERAL + , + STRING_LITERAL + , + STRING_LITERAL -> ",STRING_LITERAL,STRING_LITERAL,STRING_LITERAL,STRING_LITERAL,STRING_LITERAL,STRING_LITERAL,STRING_LITERAL,STRING_LITERAL"	3390
d + e + s + c + r + i + p + t + i + o + n -> "description"	3391
y + c + l + e -> "ycle"	3392
T + o + p + i + c -> "Topic"	3393
[ + DECIMAL_LITERAL + ] + ) + ; + <EOL> -> "[DECIMAL_LITERAL]);<EOL>"	3394
C + o + n + s + t + r + u + c + t + o + r -> "Constructor"	3395
s + . + f + a + c + t + o + r + y -> "s.factory"	3396
d + o + w + n -> "down"	3397
p + a -> "pa"	3398
B + U -> "BU"	3399
y + n + a + m + i + c -> "ynamic"	3400
i + g + g + e + r -> "igger"	3401
i + s + i + o + n -> "ision"	3402
import + i + o -> "importio"	3403
T + ) + ; + <EOL> -> "T);<EOL>"	3404
o + d + e + c -> "odec"	3405
p + u + t -> "put"	3406
e + n + c + o + d + e -> "encode"	3407
a + n + v + a + s -> "anvas"	3408
. + d + i + s -> ".dis"	3409
import + c + o + m + . + m -> "importcom.m"	3410
s + . + a + s + s + e + r + t -> "s.assert"	3411
l + o + g + g + i + n + g + . -> "logging."	3412
f + r + o + m -> "from"	3413
i + n + g + ; + <EOL> -> "ing;<EOL>"	3414
> + m -> ">m"	3415
w + e + r -> "wer"	3416
t + o + t + a + l -> "total"	3417
o + c + a + t + i + o + n -> "ocation"	3418
N + E -> "NE"	3419
R + e + l + a + t + i + o + n -> "Relation"	3420
I + n + f + o + r + m -> "Inform"	3421
L + i + m + i + t -> "Limit"	3422
a + c + c + o + u + n + t -> "account"	3423
case + STRING_LITERAL -> "caseSTRING_LITERAL"	3424
S + y + s + t + e + m + . + o + u + t + . + p + r + i + n + t + l + n + ( + STRING_LITERAL + + -> "System.out.println(STRING_LITERAL+"	3425
w + a + r + e -> "ware"	3426
C + h + i + l + d + r + e + n -> "Children"	3427
n + a + m + e + = -> "name="	3428
. + c + o + m + m + a + n + d -> ".command"	3429
V + o + l -> "Vol"	3430
c + h + a + n + g + e -> "change"	3431
S + t + a + n + d + a + r + d -> "Standard"	3432
V + i + e + w + H + o + l + d + e + r -> "ViewHolder"	3433
d + e + f -> "def"	3434
t + i + f + a + c + t -> "tifact"	3435
r + e + a + d -> "read"	3436
( + ) + == -> "()=="	3437
, + null + , + null -> ",null,null"	3438
( + ) + && -> "()&&"	3439
a + c + h + e + d -> "ached"	3440
case + STRING_LITERAL + : + <EOL> -> "caseSTRING_LITERAL:<EOL>"	3441
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + b + e + a + n + s + . + f + a + c + t + o + r + y -> "importorg.springframework.beans.factory"	3442
= + ( + ( -> "=(("	3443
) + throws -> ")throws"	3444
o + j -> "oj"	3445
R + e + c + y + c + l + e + r -> "Recycler"	3446
S + e + c + u + r + i + t + y -> "Security"	3447
l + a -> "la"	3448
C + o + n + t + a + i + n -> "Contain"	3449
. + g + e + t + P + r + o + p + e + r + t + y -> ".getProperty"	3450
i + n + t + e + r + n + a + l -> "internal"	3451
i + t + e + r + a + l -> "iteral"	3452
n + o -> "no"	3453
( + DECIMAL_LITERAL + , + DECIMAL_LITERAL + ) + ; + <EOL> -> "(DECIMAL_LITERAL,DECIMAL_LITERAL);<EOL>"	3454
I + n + f + l -> "Infl"	3455
= + p + r + o -> "=pro"	3456
M + a + p + . -> "Map."	3457
A + M -> "AM"	3458
D + i + r + e + c + t + i + o + n -> "Direction"	3459
. + y -> ".y"	3460
E + x + t + r + a -> "Extra"	3461
S + k -> "Sk"	3462
s + ( + ) + . + g + e + t -> "s().get"	3463
, + DECIMAL_LITERAL + ) + ) + ; + <EOL> -> ",DECIMAL_LITERAL));<EOL>"	3464
A + t + o + m + i + c -> "Atomic"	3465
Q + U + E -> "QUE"	3466
private + L + i + s + t + < -> "privateList<"	3467
o + r + i + g + i + n + a + l -> "original"	3468
u + s + e -> "use"	3469
. + f + i + n + d + V + i + e + w + B + y + I + d + ( + R + . + i + d -> ".findViewById(R.id"	3470
O + b + s + e + r + v -> "Observ"	3471
E + n + t + i + t + y + ; + <EOL> -> "Entity;<EOL>"	3472
O + w -> "Ow"	3473
D + e + t + a + l + l + e -> "Detalle"	3474
I + n + t + e + r + r + u + p + t + e + d -> "Interrupted"	3475
A + x -> "Ax"	3476
. + p + u + t + ( + STRING_LITERAL + , + STRING_LITERAL + ) + ; + <EOL> -> ".put(STRING_LITERAL,STRING_LITERAL);<EOL>"	3477
s + . + t + o -> "s.to"	3478
p + e + r -> "per"	3479
w + r + i + t + e -> "write"	3480
3 + . -> "3."	3481
a + s + e + t -> "aset"	3482
= + new + A + r + r + a + y + L + i + s + t + < -> "=newArrayList<"	3483
P + r + e + d + i + c + a + t + e -> "Predicate"	3484
a + v + i + g -> "avig"	3485
D + a + t + e + F + o + r + m + a + t -> "DateFormat"	3486
. + s + e + t + T + e + x + t + ( + STRING_LITERAL + ) + ; + <EOL> -> ".setText(STRING_LITERAL);<EOL>"	3487
== + null + ? -> "==null?"	3488
V + E -> "VE"	3489
, + float -> ",float"	3490
. + r + e + g -> ".reg"	3491
B + u + i + l + d + e + r + ; + <EOL> -> "Builder;<EOL>"	3492
N + a + m + e + ( + ) -> "Name()"	3493
i + m + u + m -> "imum"	3494
e + r + r + o + r -> "error"	3495
i + s + e -> "ise"	3496
H + a + n + d + l + e + r + ; + <EOL> -> "Handler;<EOL>"	3497
e + t + r + y -> "etry"	3498
s + p -> "sp"	3499
default + : + <EOL> -> "default:<EOL>"	3500
L + i + s + t + ( -> "List("	3501
b + u + i + l + d + e + r -> "builder"	3502
k + e + r -> "ker"	3503
s + . + s + i + z + e + ( + ) -> "s.size()"	3504
o + u + r + s + e -> "ourse"	3505
A + l + e + r + t -> "Alert"	3506
0 + . + g + e + t -> "0.get"	3507
a + t + t + r + i + b + u + t + e -> "attribute"	3508
T + E + X -> "TEX"	3509
. + s + e + r + v + i + c + e + . -> ".service."	3510
. + p + r + e -> ".pre"	3511
. + c + o + n + t + a + i + n + s + K + e + y -> ".containsKey"	3512
. + c + l + i + e + n + t + . -> ".client."	3513
o + c + u + s -> "ocus"	3514
a + t + i + s + t + i + c -> "atistic"	3515
a + m + b -> "amb"	3516
e + l + f -> "elf"	3517
f + i + r + e -> "fire"	3518
c + o + n + n + e + c + t + i + o + n -> "connection"	3519
i + q + u + e -> "ique"	3520
H + a + s + h + S + e + t -> "HashSet"	3521
( + DECIMAL_LITERAL + ) + . -> "(DECIMAL_LITERAL)."	3522
b + e + r + s -> "bers"	3523
N + U + M -> "NUM"	3524
d + e + p -> "dep"	3525
l + o + s + e -> "lose"	3526
a + t + i + n + g -> "ating"	3527
e + l + a + s + t + i + c -> "elastic"	3528
M + a + t + c + h + e + r -> "Matcher"	3529
( + this + , -> "(this,"	3530
e + r + t + i + f -> "ertif"	3531
b + e + a + n -> "bean"	3532
c + l + u + d + e -> "clude"	3533
p + o + r + t + e + r -> "porter"	3534
I + n + t + e + r + v + a + l -> "Interval"	3535
import + j + a + v + a + x + . + s + e + r + v + l + e + t -> "importjavax.servlet"	3536
D + E + _ -> "DE_"	3537
C + l + a + s -> "Clas"	3538
Q + U -> "QU"	3539
T + y + p + e + ( + ) + { + <EOL> -> "Type(){<EOL>"	3540
l + i + n + k -> "link"	3541
P + a + r + a + m + s -> "Params"	3542
U + s + e -> "Use"	3543
( + ) + != -> "()!="	3544
c + o + m + . + b + a + d + l + o + g + i + c + . + g + d + x -> "com.badlogic.gdx"	3545
. + a + n + d + r + o + i + d -> ".android"	3546
_ + n -> "_n"	3547
B + a + s + i + c -> "Basic"	3548
( + L + o + n + g -> "(Long"	3549
e + n + g + i + n + e + . -> "engine."	3550
( + c -> "(c"	3551
E + N + G -> "ENG"	3552
e + n + v -> "env"	3553
W + i + d + g + e + t -> "Widget"	3554
M + E + S + S -> "MESS"	3555
u + c + h -> "uch"	3556
> + l + i + s + t -> ">list"	3557
A + s + s + e + r + t + i + o + n + s + . + a + s + s + e + r + t -> "Assertions.assert"	3558
public + void + a + d + d -> "publicvoidadd"	3559
. + E -> ".E"	3560
a + n + a + l -> "anal"	3561
e + t + o -> "eto"	3562
( + ) + . + i + s -> "().is"	3563
( + s + t -> "(st"	3564
a + t + a + l + o + g -> "atalog"	3565
P + a + r + t + i + t + i + o + n -> "Partition"	3566
e + x + p + e + c + t + e + d -> "expected"	3567
r + e + p + l + a + c + e -> "replace"	3568
private + boolean -> "privateboolean"	3569
) + . + a + p + p + e + n + d -> ").append"	3570
public + O + b + j + e + c + t -> "publicObject"	3571
public + void + r + u + n -> "publicvoidrun"	3572
c + a + s + t -> "cast"	3573
. + t + o + S + t + r + i + n + g + ( + ) + ; + <EOL> -> ".toString();<EOL>"	3574
I + g + n + o + r + e + C + a + s + e -> "IgnoreCase"	3575
i + n + e + s + s -> "iness"	3576
. + g + e + t + D + e + f + a + u + l + t -> ".getDefault"	3577
C + a + l + e + n + d + a + r -> "Calendar"	3578
p + r + i + n + t -> "print"	3579
R + E + D + _ -> "RED_"	3580
u + n + c + h -> "unch"	3581
J + o + i + n -> "Join"	3582
D + e + p + e + n + d -> "Depend"	3583
M + e + n + u + I + t + e + m -> "MenuItem"	3584
R + e + a + l -> "Real"	3585
T + I + M + E -> "TIME"	3586
j + s + p -> "jsp"	3587
T + i + m + e + M + i + l + l + i + s -> "TimeMillis"	3588
S + I + O + N -> "SION"	3589
A + l + i + g + n + m + e + n + t -> "Alignment"	3590
a + d + m + i + n -> "admin"	3591
y	3592
A + D + _ -> "AD_"	3593
s + [ -> "s["	3594
e + s + t + i + n + a + t + i + o + n -> "estination"	3595
a + d + o + o + p -> "adoop"	3596
( + I -> "(I"	3597
. + u + p + d + a + t + e -> ".update"	3598
, + y -> ",y"	3599
. + l + o + g -> ".log"	3600
a + g + e + m + e + n + t -> "agement"	3601
P + r + i + n + t -> "Print"	3602
( + w -> "(w"	3603
S + c + r + i + p + t -> "Script"	3604
I + N + T -> "INT"	3605
a + n + d -> "and"	3606
S + l -> "Sl"	3607
. + b + a + c + k + e + n + d -> ".backend"	3608
private + S -> "privateS"	3609
S + e + c + o + n + d -> "Second"	3610
s + e + a + r + c + h -> "search"	3611
r + o + t -> "rot"	3612
u + a + r + i + o -> "uario"	3613
U + n + s + u + p + p + o + r + t + e + d -> "Unsupported"	3614
V + i + d + e + o -> "Video"	3615
( + v + a + l + u + e -> "(value"	3616
R + E + F + E + R -> "REFER"	3617
. + a + s -> ".as"	3618
O + r + g -> "Org"	3619
V + i + s + i + t + o + r -> "Visitor"	3620
. + x -> ".x"	3621
( + ) + . + e + q + u + a + l + s -> "().equals"	3622
p + l + i + c -> "plic"	3623
d + b -> "db"	3624
l + l + i + j -> "llij"	3625
1 + 7 -> "17"	3626
) + this + ; + <EOL> -> ")this;<EOL>"	3627
L + i + s + t + < + S + t + r + i + n + g + > -> "List<String>"	3628
F + I + X -> "FIX"	3629
1 + 9 -> "19"	3630
n + e + x + t -> "next"	3631
/ + DECIMAL_LITERAL -> "/DECIMAL_LITERAL"	3632
w + h + e + n -> "when"	3633
S + c + a + l + e -> "Scale"	3634
> + ( + ) + { + <EOL> -> ">(){<EOL>"	3635
a + n + n + o + t + a + t + i + o + n + s + . -> "annotations."	3636
E	3637
i + n + i + t -> "init"	3638
S + e + c -> "Sec"	3639
. + s + p + l + i + t -> ".split"	3640
C + O + M -> "COM"	3641
import + j + a + v + a + x + . + s + w + i + n + g + . -> "importjavax.swing."	3642
T + e + x + t + u + r + e -> "Texture"	3643
P + r + e + f + e + r + e + n + c + e + s -> "Preferences"	3644
I + n + f + o + ; + <EOL> -> "Info;<EOL>"	3645
l + e + c + t + ( -> "lect("	3646
C + o + l + l + e + c + t + i + o + n + < -> "Collection<"	3647
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + b + e + a + n + s + . + f + a + c + t + o + r + y + . + a + n + n + o + t + a + t + i + o + n + . -> "importorg.springframework.beans.factory.annotation."	3648
. + r + e + f -> ".ref"	3649
S + y + s + t + e + m + . + o + u + t + . + p + r + i + n + t + l + n + ( + STRING_LITERAL + + -> "System.out.println(STRING_LITERAL+"	3650
_ + ; + <EOL> -> "_;<EOL>"	3651
( + i + t + e + m -> "(item"	3652
m + o + d -> "mod"	3653
import + c + o + m + . + g + o + o + g + l + e + . + c + o + m + m + o + n -> "importcom.google.common"	3654
S + h + o + w -> "Show"	3655
i + c + o + n -> "icon"	3656
3 + 2 -> "32"	3657
V + o + i + d -> "Void"	3658
s + e + n + d -> "send"	3659
I + n + n + e + r -> "Inner"	3660
= + L + o + g + g + e + r -> "=Logger"	3661
e + c + o + d + e -> "ecode"	3662
if + ( + c + o + n -> "if(con"	3663
T + r + e + e + N + o + d + e -> "TreeNode"	3664
, + long -> ",long"	3665
) + . + b + u + i + l + d + ( + ) + ; + <EOL> -> ").build();<EOL>"	3666
i + ; + <EOL> -> "i;<EOL>"	3667
H + i + s + t + o + r + y -> "History"	3668
L + o + g + i + c -> "Logic"	3669
A + n + i + m + a + t + i + o + n -> "Animation"	3670
. + i + n + t + e + r + n + a + l -> ".internal"	3671
C + o + n + t + r + a + c + t -> "Contract"	3672
g + e + n -> "gen"	3673
A + g + e + n + t -> "Agent"	3674
e + r + e + o + t + y + p + e -> "ereotype"	3675
R + e + n + d + e + r + e + r -> "Renderer"	3676
A + T + E -> "ATE"	3677
, + DECIMAL_LITERAL + , + DECIMAL_LITERAL + ) + ; + <EOL> -> ",DECIMAL_LITERAL,DECIMAL_LITERAL);<EOL>"	3678
o + l + o + g + y -> "ology"	3679
F + a + c -> "Fac"	3680
protected + void + o + n -> "protectedvoidon"	3681
a + c + t + i + v + i + t + y -> "activity"	3682
( + i + n + d + e + x -> "(index"	3683
b + u + i + l + d -> "build"	3684
import + o + r + g + . + a + p + a + c + h + e + . + c + o + m + m + o + n + s + . -> "importorg.apache.commons."	3685
s + . + a + d + d + ( + new -> "s.add(new"	3686
( + p + a + t + h -> "(path"	3687
i + r + c -> "irc"	3688
a + i + l + e + d -> "ailed"	3689
C + o + u + n + t + e + r -> "Counter"	3690
a + d + d + C + r + i + t + e + r + i + o + n -> "addCriterion"	3691
s + t + r + e + a + m -> "stream"	3692
= + l -> "=l"	3693
, + g + e + t -> ",get"	3694
j + s + p + x -> "jspx"	3695
= + r -> "=r"	3696
. + s + p -> ".sp"	3697
S + Q + L -> "SQL"	3698
H + a + s -> "Has"	3699
. + m + a + k + e -> ".make"	3700
public + C + r + i + t + e + r + i + a -> "publicCriteria"	3701
N + o + d + e + s -> "Nodes"	3702
l + e + t + o + n -> "leton"	3703
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + s + t -> "importorg.springframework.st"	3704
w + a + r -> "war"	3705
s + a + v + e -> "save"	3706
( + C + r + i + t + e + r + i + a -> "(Criteria"	3707
import + c + o + m + . + g + i + t + h + u + b -> "importcom.github"	3708
extends + A + b + s + t + r + a + c + t -> "extendsAbstract"	3709
e + r + e + o + t + y + p + e + . -> "ereotype."	3710
( + G -> "(G"	3711
i + n + t + e + l + l + i + j -> "intellij"	3712
( + C + o + n + t + e + x + t + c + o + n + t + e + x + t -> "(Contextcontext"	3713
A + U -> "AU"	3714
t + a + s + k -> "task"	3715
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + s + t + e + r + e + o + t + y + p + e + . -> "importorg.springframework.stereotype."	3716
a + f + k + a -> "afka"	3717
this + . + s + e + t -> "this.set"	3718
T + y + p + e + ) + ; + <EOL> -> "Type);<EOL>"	3719
M + o + d + e + l + ; + <EOL> -> "Model;<EOL>"	3720
P + r + e + f + e + r + e + n + c + e -> "Preference"	3721
l + o + u + d -> "loud"	3722
T + i + l + e -> "Tile"	3723
l + e + e + p -> "leep"	3724
A + S + T -> "AST"	3725
N + a + m + e + ( + STRING_LITERAL + ) + ; + <EOL> -> "Name(STRING_LITERAL);<EOL>"	3726
L + I + N -> "LIN"	3727
( + ) + != + null + ) + { + <EOL> -> "()!=null){<EOL>"	3728
S + w + i + n + g -> "Swing"	3729
a + m + p + l -> "ampl"	3730
p + u + t + e -> "pute"	3731
i + d + d -> "idd"	3732
e + x + p -> "exp"	3733
V + a + l + u + e + ( + ) + ; + <EOL> -> "Value();<EOL>"	3734
o + f + t -> "oft"	3735
( + p + a + r + a + m -> "(param"	3736
e + s + s + a + g -> "essag"	3737
( + ) + throws + I + O + E + x + c + e + p + t + i + o + n + { + <EOL> -> "()throwsIOException{<EOL>"	3738
import + a + n + d + r + o + i + d + x -> "importandroidx"	3739
S + e + l + e + c + t + o + r -> "Selector"	3740
u + l + a + r -> "ular"	3741
else + <EOL> -> "else<EOL>"	3742
D + ) + ; + <EOL> -> "D);<EOL>"	3743
r + a + m -> "ram"	3744
Z + o + n + e -> "Zone"	3745
n + g -> "ng"	3746
( + ) + == -> "()=="	3747
n + a + m + e + ) + ; + <EOL> -> "name);<EOL>"	3748
d + a + t + e -> "date"	3749
u + m + m + a + r + y -> "ummary"	3750
v + a -> "va"	3751
( + _ -> "(_"	3752
( + false -> "(false"	3753
o + r + g + . + a + p + a + c + h + e + . -> "org.apache."	3754
A + t + t + r -> "Attr"	3755
r + o + o + t -> "root"	3756
i + c + r + o -> "icro"	3757
l + e + a + s + e -> "lease"	3758
o + t + o + r -> "otor"	3759
L + i + s + t + e + n + e + r + ; + <EOL> -> "Listener;<EOL>"	3760
( + L + i + s + t + < -> "(List<"	3761
private + static + final + int -> "privatestaticfinalint"	3762
s + b + . + a + p + p + e + n + d + ( + STRING_LITERAL + ) + ; + <EOL> -> "sb.append(STRING_LITERAL);<EOL>"	3763
S + t + o + p -> "Stop"	3764
a + n + i + m -> "anim"	3765
( + c + o + n + f + i + g -> "(config"	3766
F + F -> "FF"	3767
c + o + d + e -> "code"	3768
e + r + t + i + f + i + c + a + t + e -> "ertificate"	3769
public + C + r + i + t + e + r + i + a + a + n + d -> "publicCriteriaand"	3770
T + y + p + e + ) + { + <EOL> -> "Type){<EOL>"	3771
a + c + i + t + y -> "acity"	3772
T + i + m + e + ; + <EOL> -> "Time;<EOL>"	3773
) + , -> "),"	3774
. + g + e + t + U + s + e + r -> ".getUser"	3775
, + boolean -> ",boolean"	3776
( + c + u + r + r + e + n + t -> "(current"	3777
S + e + r + i + a + l + i + z + a + b + l + e -> "Serializable"	3778
O + b + s + e + r + v + e + r -> "Observer"	3779
public + final -> "publicfinal"	3780
p + r + o + p + e + r + t + i + e + s -> "properties"	3781
e + l + a + s + t + i + c + s + e + a + r + c + h -> "elasticsearch"	3782
. + g + e + n + e + r -> ".gener"	3783
= + v + a + l + u + e + ; + <EOL> -> "=value;<EOL>"	3784
D	3785
p + r + e + s + s -> "press"	3786
I + n + i + t -> "Init"	3787
I + n + t + e + g + e + r + . + p + a + r + s + e + I + n + t -> "Integer.parseInt"	3788
O + K -> "OK"	3789
r + e + s + e + t -> "reset"	3790
i + n + g + l + e + t + o + n -> "ingleton"	3791
e + n + e + . -> "ene."	3792
( + final + S + t + r + i + n + g -> "(finalString"	3793
_ + 0 -> "_0"	3794
A + B + L + E -> "ABLE"	3795
o + u + n + t + r + y -> "ountry"	3796
e + x + e + c -> "exec"	3797
C + o + l + l + e + c + t + i + o + n + s + . -> "Collections."	3798
p + h + a -> "pha"	3799
c + h + e + d + u + l + e + r -> "cheduler"	3800
. + u + n -> ".un"	3801
o + l + u + t + i + o + n -> "olution"	3802
T + y + p + e + , -> "Type,"	3803
v + a + t + e -> "vate"	3804
f + i + n + d + V + i + e + w + B + y + I + d + ( + R + . + i + d -> "findViewById(R.id"	3805
a + n + e + l -> "anel"	3806
a + t + o + r + ; + <EOL> -> "ator;<EOL>"	3807
E + x + c + e + p + t + i + o + n + ( + STRING_LITERAL + + -> "Exception(STRING_LITERAL+"	3808
i + x + e + l -> "ixel"	3809
u + p + p + l + i + e + r -> "upplier"	3810
F + a + i + l + u + r + e -> "Failure"	3811
s + o + f + t -> "soft"	3812
A + s + s + e + r + t + . + a + s + s + e + r + t + E + q + u + a + l + s + ( -> "Assert.assertEquals("	3813
S + i + n + g + l + e -> "Single"	3814
2 + ) + { + <EOL> -> "2){<EOL>"	3815
b + l + o + c + k -> "block"	3816
= + h + i + k + a + r + i + C + o + n + f + i + g -> "=hikariConfig"	3817
A + l + l + ( -> "All("	3818
s + o + l + u + t + e -> "solute"	3819
m + o + d -> "mod"	3820
P + e + r + i + o + d -> "Period"	3821
i + s + E + m + p + t + y + ( + ) + ) + { + <EOL> -> "isEmpty()){<EOL>"	3822
f + e + r + r + e + d -> "ferred"	3823
. + o + p + e + n -> ".open"	3824
c + o + m + m + a + n + d -> "command"	3825
public + static + class -> "publicstaticclass"	3826
A + T + H -> "ATH"	3827
o + u + t + . + w + r + i + t + e -> "out.write"	3828
p + r + o + j + e + c + t -> "project"	3829
o + r + t + e + d -> "orted"	3830
. + s + q + l + . -> ".sql."	3831
return + ( + C + r + i + t + e + r + i + a -> "return(Criteria"	3832
return + ( + C + r + i + t + e + r + i + a + ) + this + ; + <EOL> -> "return(Criteria)this;<EOL>"	3833
A + c + t + u + a + l -> "Actual"	3834
void + s + e + t -> "voidset"	3835
G + u -> "Gu"	3836
j + a + v + a + x + . + s + w + i + n + g + . + G + r + o + u + p + L + a + y + o + u + t + . -> "javax.swing.GroupLayout."	3837
k + n + o + w + n + F + i + e + l + d -> "knownField"	3838
A + s + s + e + t -> "Asset"	3839
A + C + K -> "ACK"	3840
. + u + s + e + r -> ".user"	3841
. + g + e + t + L + o + g + g + e + r + ( -> ".getLogger("	3842
e + l + e + m + e + n + t -> "element"	3843
c + h + e + c + k -> "check"	3844
S + ) + ; + <EOL> -> "S);<EOL>"	3845
A + p + p + C + o + m + p + a + t -> "AppCompat"	3846
. + p + l + u + g + i + n -> ".plugin"	3847
E + x + t + e + r + n + a + l -> "External"	3848
I + m + p + o + r + t -> "Import"	3849
f + u + n + c + t + i + o + n -> "function"	3850
. + c + u + r + r + e + n + t + T + i + m + e + M + i + l + l + i + s -> ".currentTimeMillis"	3851
S + t + r + i + n + g + B + u + i + l + d + e + r -> "StringBuilder"	3852
T + y + p + e + = -> "Type="	3853
S + t + a + g + e -> "Stage"	3854
i + n + n + e + r -> "inner"	3855
& + HEX_LITERAL -> "&HEX_LITERAL"	3856
h + o -> "ho"	3857
o + t + t + o + m -> "ottom"	3858
_ + 3 -> "_3"	3859
c + e + d -> "ced"	3860
> + p -> ">p"	3861
short + ) -> "short)"	3862
F + i + e + l + d + 0 + _ -> "Field0_"	3863
v + i + d + e + r -> "vider"	3864
f + i + l + t + e + r -> "filter"	3865
E + f + f + e + c + t -> "Effect"	3866
B + y + t + e + B + u + f + f + e + r -> "ByteBuffer"	3867
H + e + a + d + e + r + s -> "Headers"	3868
i + n + s + t + a + n + c + e -> "instance"	3869
D + r + a + w + a + b + l + e -> "Drawable"	3870
F + o + r + e -> "Fore"	3871
a + l + t + h -> "alth"	3872
t + h + r + e + a + d -> "thread"	3873
i + ) + { + <EOL> -> "i){<EOL>"	3874
L + o + w + e + r -> "Lower"	3875
L + i + n + e + a + r -> "Linear"	3876
u + s + e + F + o + o -> "useFoo"	3877
( + c + o + m + . + g + o + o + g + l + e + . + p + r + o + t + o + b + u + f + . -> "(com.google.protobuf."	3878
public + static + final -> "publicstaticfinal"	3879
C + o + m + b + o + B + o + x -> "ComboBox"	3880
R + e + g + i + s + t + e + r -> "Register"	3881
h + e + a + d + e + r -> "header"	3882
i + t + e + . -> "ite."	3883
s + p + a + c + e -> "space"	3884
S + a + m + e -> "Same"	3885
. + d + e + l + e + t + e -> ".delete"	3886
r + i + e -> "rie"	3887
i + n + d + e + r -> "inder"	3888
S + p + a + c + e -> "Space"	3889
( + STRING_LITERAL + , + e + ) + ; + <EOL> -> "(STRING_LITERAL,e);<EOL>"	3890
. + b + a + s + e + . -> ".base."	3891
w + t -> "wt"	3892
e + s + ) + { + <EOL> -> "es){<EOL>"	3893
g + i + n -> "gin"	3894
> + s -> ">s"	3895
y + m -> "ym"	3896
. + p + e + r -> ".per"	3897
private + static + final + long -> "privatestaticfinallong"	3898
c + o + m + . -> "com."	3899
P + o + p -> "Pop"	3900
. + c + o + p + y -> ".copy"	3901
T + i + c + k -> "Tick"	3902
e + d + ; + <EOL> -> "ed;<EOL>"	3903
e + n + d -> "end"	3904
< + DECIMAL_LITERAL + ) + { + <EOL> -> "<DECIMAL_LITERAL){<EOL>"	3905
!= + DECIMAL_LITERAL + ) + { + <EOL> -> "!=DECIMAL_LITERAL){<EOL>"	3906
S + o + r + t -> "Sort"	3907
i + f + t -> "ift"	3908
. + R -> ".R"	3909
E + R + R + O + R -> "ERROR"	3910
J + s + o + n + O + b + j + e + c + t -> "JsonObject"	3911
M + e + s + s + a + g + e + s -> "Messages"	3912
g + o + v -> "gov"	3913
c + h + i + l + d -> "child"	3914
. + g + e + t + ( + i -> ".get(i"	3915
n + e + c + t -> "nect"	3916
B + i + n + a + r + y -> "Binary"	3917
P + o + w + e + r -> "Power"	3918
e + n + u + m -> "enum"	3919
R + e + s + p + o + n + s + e + E + n + t + i + t + y -> "ResponseEntity"	3920
public + static + S + t + r + i + n + g -> "publicstaticString"	3921
o + ) + { + <EOL> -> "o){<EOL>"	3922
b + u + f + f + e + r -> "buffer"	3923
A + c + t + i + v + i + t + y + ; + <EOL> -> "Activity;<EOL>"	3924
u + s + t + o + m + e + r -> "ustomer"	3925
. + f + l -> ".fl"	3926
o + t + h + e + r -> "other"	3927
V + I + C -> "VIC"	3928
import + a + n + d + r + o + i + d + . + s + u + p + p + o + r + t + . + v -> "importandroid.support.v"	3929
public + double -> "publicdouble"	3930
, + T -> ",T"	3931
v + i + o + u + s -> "vious"	3932
( + - + DECIMAL_LITERAL -> "(-DECIMAL_LITERAL"	3933
m + a -> "ma"	3934
import + c + o + m + . + b -> "importcom.b"	3935
l + i + s + t + e + n + e + r -> "listener"	3936
p + a + r + s + e -> "parse"	3937
+ + DECIMAL_LITERAL + ) + ; + <EOL> -> "+DECIMAL_LITERAL);<EOL>"	3938
N + a + m + e + s + p + a + c + e -> "Namespace"	3939
. + e + x + c + e + p + t + i + o + n -> ".exception"	3940
s + T + o -> "sTo"	3941
D + e + c + l + a + r -> "Declar"	3942
i + d + ) + ; + <EOL> -> "id);<EOL>"	3943
v + i + s + i + o + n -> "vision"	3944
N + A + M + E + _ -> "NAME_"	3945
I + n + v + e + n + t + o + r + y -> "Inventory"	3946
[ + ] + { + STRING_LITERAL -> "[]{STRING_LITERAL"	3947
L + i + s + t + ( + ) + ; + <EOL> -> "List();<EOL>"	3948
> + c -> ">c"	3949
. + J -> ".J"	3950
. + c + o + d + e -> ".code"	3951
v + a + r + i -> "vari"	3952
p + o + s + i + t + e -> "posite"	3953
. + e + q + u + a + l + s + ( + STRING_LITERAL + ) + ) + { + <EOL> -> ".equals(STRING_LITERAL)){<EOL>"	3954
R	3955
Q + u + a + l -> "Qual"	3956
C + u + r + s + o + r -> "Cursor"	3957
V + E + _ -> "VE_"	3958
r + i + f + t -> "rift"	3959
import + o + r + g + . + o + p + e + n -> "importorg.open"	3960
s + e + r + i + a + l + V + e + r + s + i + o + n -> "serialVersion"	3961
p + a + r + e + d -> "pared"	3962
o + w + i + r + e -> "owire"	3963
E + N + G + T + H -> "ENGTH"	3964
C + h + a + r + s + e + t -> "Charset"	3965
, + R -> ",R"	3966
. + R + E -> ".RE"	3967
O + r + i + g -> "Orig"	3968
( + STRING_LITERAL + , + STRING_LITERAL + , + STRING_LITERAL -> "(STRING_LITERAL,STRING_LITERAL,STRING_LITERAL"	3969
R + e + f + r + e + s + h -> "Refresh"	3970
s + . + r -> "s.r"	3971
2 + 5 -> "25"	3972
3 + ) + ; + <EOL> -> "3);<EOL>"	3973
t + i + c + k -> "tick"	3974
s + e + r + i + a + l + V + e + r + s + i + o + n + U + I + D -> "serialVersionUID"	3975
o + r + i + t + y -> "ority"	3976
G + e -> "Ge"	3977
B + u + f + f + e + r + e + d + R + e + a + d + e + r -> "BufferedReader"	3978
V + i + e + w + . + s + e + t -> "View.set"	3979
w + o -> "wo"	3980
S + c + o + p + e -> "Scope"	3981
e + m + o -> "emo"	3982
import + c + o + m + . + h -> "importcom.h"	3983
P + e + r + f + o + r + m + e + d + ( -> "Performed("	3984
( + J -> "(J"	3985
T + O + _ -> "TO_"	3986
t + h + e -> "the"	3987
. + c + o + m + p + a + r + e -> ".compare"	3988
o + t + o -> "oto"	3989
if + ( + d -> "if(d"	3990
b + t + n -> "btn"	3991
. + q + u + e + r + y -> ".query"	3992
( + a + 0 + ) + ; + <EOL> -> "(a0);<EOL>"	3993
= + n -> "=n"	3994
A + u + t + o + w + i + r + e -> "Autowire"	3995
. + u + i + . -> ".ui."	3996
m + o -> "mo"	3997
r + o + w -> "row"	3998
p + r + o + p -> "prop"	3999
I + n + p + u + t + S + t + r + e + a + m + ; + <EOL> -> "InputStream;<EOL>"	4000
s + h + o + u + l + d -> "should"	4001
a + c + k + e + t -> "acket"	4002
. + c + o + m + p + o + n + e + n + t -> ".component"	4003
= + M + a + t + h -> "=Math"	4004
a + c + h + m + e + n + t -> "achment"	4005
r + u -> "ru"	4006
L	4007
i + d + = -> "id="	4008
y + s + i + s -> "ysis"	4009
O + R + T -> "ORT"	4010
l + o + y + e + e -> "loyee"	4011
( + p -> "(p"	4012
I + n + f + o + r + m + a + t + i + o + n -> "Information"	4013
C + h + a + n + g + e + d + ( + ) + ; + <EOL> -> "Changed();<EOL>"	4014
I + D + ) + ; + <EOL> -> "ID);<EOL>"	4015
D + i + g -> "Dig"	4016
b + r + e -> "bre"	4017
c + l + e + a + r -> "clear"	4018
. + a + n + n + o + t + a + t + i + o + n + s + . -> ".annotations."	4019
import + j + a + v + a + . + n + e + t + . -> "importjava.net."	4020
C + o + m + p + a + r -> "Compar"	4021
i + l + e + r -> "iler"	4022
import + c + o + m + . + i + n + t + e + l + l + i + j -> "importcom.intellij"	4023
. + c + o + l + l + e + c + t + ( -> ".collect("	4024
) + f + i + n + d + V + i + e + w + B + y + I + d + ( + R + . + i + d -> ")findViewById(R.id"	4025
P + a + y + m + e + n + t -> "Payment"	4026
[ + j + ] -> "[j]"	4027
, + null + , -> ",null,"	4028
S + l + o + t -> "Slot"	4029
C + O + U + N -> "COUN"	4030
e + s + ( -> "es("	4031
s + e + r + v + i + c + e -> "service"	4032
T + h + r + e + a + d -> "Thread"	4033
= + r + e -> "=re"	4034
import + j + a + v + a + . + i + o + . + F + i + l + e + ; + <EOL> -> "importjava.io.File;<EOL>"	4035
i + s + t + i + c -> "istic"	4036
u + l + o -> "ulo"	4037
import + static + c + o + m + . -> "importstaticcom."	4038
. + d + e + s -> ".des"	4039
S + h + a + r + e + d -> "Shared"	4040
return + STRING_LITERAL -> "returnSTRING_LITERAL"	4041
) + . + a + d + d + C + o + m + p + o + n + e + n + t -> ").addComponent"	4042
p + r + o + p + e + r + t + y -> "property"	4043
e + n + s + e -> "ense"	4044
s + t + o + r + e -> "store"	4045
. + c + h + a + r + A + t -> ".charAt"	4046
h + a + d + o + o + p -> "hadoop"	4047
G + a + p -> "Gap"	4048
= + new + H + a + s + h + M + a + p + < + > + ( + ) + ; + <EOL> -> "=newHashMap<>();<EOL>"	4049
v + m -> "vm"	4050
W + O + R -> "WOR"	4051
m + _ -> "m_"	4052
P + a + i + n + t -> "Paint"	4053
O + B -> "OB"	4054
M + e + s + s + a + g + e + ( -> "Message("	4055
V + a + l + u + e + ( + ) + ) + ; + <EOL> -> "Value());<EOL>"	4056
A + u + t + o + w + i + r + e + d + ; + <EOL> -> "Autowired;<EOL>"	4057
l + o + a + d -> "load"	4058
A + G + E -> "AGE"	4059
C + E + _ -> "CE_"	4060
E + n + c + o + d + e + r -> "Encoder"	4061
S + t + a + t + i + c -> "Static"	4062
public + void + r + u + n + ( + ) + { + <EOL> -> "publicvoidrun(){<EOL>"	4063
i + d + a + d -> "idad"	4064
public + long -> "publiclong"	4065
a + z + o + n -> "azon"	4066
private + boolean -> "privateboolean"	4067
c + e + n + t -> "cent"	4068
e + t + a + i + l -> "etail"	4069
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + b + e + a + n + s + . + f + a + c + t + o + r + y + . + a + n + n + o + t + a + t + i + o + n + . + A + u + t + o + w + i + r + e + d + ; + <EOL> -> "importorg.springframework.beans.factory.annotation.Autowired;<EOL>"	4070
i + n + s + t + a + n + c + e -> "instance"	4071
i + p + e + l + i + n + e -> "ipeline"	4072
( + n + e + w -> "(new"	4073
C + O + L + U + M -> "COLUM"	4074
. + f + r + a + m + e + w + o + r + k -> ".framework"	4075
i + p + a + l -> "ipal"	4076
G + e + n -> "Gen"	4077
C + o + r + e -> "Core"	4078
a + m + i + l -> "amil"	4079
C + h + u + n + k -> "Chunk"	4080
. + s + t + r + e + a + m + . -> ".stream."	4081
( + s + c -> "(sc"	4082
l + e + n -> "len"	4083
. + l + i + s + t -> ".list"	4084
S + t + r + u + c + t + u + r + e -> "Structure"	4085
+ + DECIMAL_LITERAL + ] -> "+DECIMAL_LITERAL]"	4086
I + p -> "Ip"	4087
i + g + n + e + d -> "igned"	4088
u + m + p -> "ump"	4089
B + y + t + e + S + t + r + i + n + g -> "ByteString"	4090
o + p + t + i + o + n -> "option"	4091
L + a + y + e + r -> "Layer"	4092
private + static + final + long + s + e + r + i + a + l + V + e + r + s + i + o + n + U + I + D -> "privatestaticfinallongserialVersionUID"	4093
r + e + m + o + v + e -> "remove"	4094
s + ( + ) + . -> "s()."	4095
M + a + n + a + g + e + r + . + g + e + t -> "Manager.get"	4096
C + a + r -> "Car"	4097
A + u + d + i + o -> "Audio"	4098
r + e + t + u + r + n -> "return"	4099
S + I + O + N + _ -> "SION_"	4100
i + m + g -> "img"	4101
N + O + T + _ -> "NOT_"	4102
O + N + E -> "ONE"	4103
, + ( + int + ) -> ",(int)"	4104
A + v + a + i + l -> "Avail"	4105
h + a + n + d + l + e + r -> "handler"	4106
i + t + o -> "ito"	4107
1 + _ -> "1_"	4108
o + t + h + e + r + . -> "other."	4109
( + B -> "(B"	4110
L + o + o + k -> "Look"	4111
P + a + t + h + ; + <EOL> -> "Path;<EOL>"	4112
S + e + r + v + i + c + e + . + g + e + t -> "Service.get"	4113
import + j + a + v + a + . + u + t + i + l + . + A + r + r + a + y + s + ; + <EOL> -> "importjava.util.Arrays;<EOL>"	4114
u + b + j + e + c + t -> "ubject"	4115
. + s + i + z + e + ( + ) + ; + <EOL> -> ".size();<EOL>"	4116
. + b + a + c + k + e + n + d + s + . + l -> ".backends.l"	4117
i + n + g + s -> "ings"	4118
A + X + _ + V + A + L + U + E -> "AX_VALUE"	4119
import + e + d + u -> "importedu"	4120
import + c + o + m + . + g + o + o + g + l + e + . + g -> "importcom.google.g"	4121
I + T + E -> "ITE"	4122
E + v + e + n + t + e + v + e + n + t -> "Eventevent"	4123
C + l + o + s + e -> "Close"	4124
o + l + l -> "oll"	4125
( + boolean -> "(boolean"	4126
p + o + s + t -> "post"	4127
w + j + g + l + 3 + . + L -> "wjgl3.L"	4128
. + b + a + c + k + e + n + d + s + . + l + w + j + g + l + 3 + . + L -> ".backends.lwjgl3.L"	4129
O + f + ( -> "Of("	4130
r + o + a + d -> "road"	4131
C + o + n + f + i + g + ; + <EOL> -> "Config;<EOL>"	4132
, + STRING_LITERAL + + -> ",STRING_LITERAL+"	4133
I + n + t + e + r + n + a + l + F + r + a + m + e -> "InternalFrame"	4134
U + s + e + r -> "User"	4135
i + n + c + i + p + a + l -> "incipal"	4136
R + e + g + i + s + t + r -> "Registr"	4137
d + e + v + i + c + e -> "device"	4138
M + a + t + e + r + i + a + l -> "Material"	4139
R + o + u + t + e -> "Route"	4140
m + s + . -> "ms."	4141
import + j + a + v + a + x + . + x + m + l -> "importjavax.xml"	4142
r + t + u + a + l -> "rtual"	4143
f + l -> "fl"	4144
T + e + s + t + s -> "Tests"	4145
N + o + n + N + u + l + l -> "NonNull"	4146
M + a + p + < + S + t + r + i + n + g + , + O + b + j + e + c + t + > -> "Map<String,Object>"	4147
T + y + p + e + s + . -> "Types."	4148
C + o + n + f + i + g + u + r + a + t + i + o + n + ; + <EOL> -> "Configuration;<EOL>"	4149
l + w + j + g + l + 3 + A + p + p + l + i + c + a + t + i + o + n + C + o + n + f + i + g + u + r + a + t + i + o + n + 0 + . + s + e + t -> "lwjgl3ApplicationConfiguration0.set"	4150
A + b + s + o + l + u + t + e -> "Absolute"	4151
t + r + i + m -> "trim"	4152
A + g + g + r + e + g -> "Aggreg"	4153
i + x + i + n -> "ixin"	4154
C + o + p + y -> "Copy"	4155
C + r + e + d + e + n + t + i + a + l -> "Credential"	4156
A + l + g + o + r + i + t + h + m -> "Algorithm"	4157
a + l + l + e + l -> "allel"	4158
( + STRING_LITERAL + ) + ) + ) + ; + <EOL> -> "(STRING_LITERAL)));<EOL>"	4159
( + T -> "(T"	4160
( + DECIMAL_LITERAL + ) + , -> "(DECIMAL_LITERAL),"	4161
( + ) + - -> "()-"	4162
r + e + m + e + n + t -> "rement"	4163
( + r + e + s + p + o + n + s + e -> "(response"	4164
this + . + f -> "this.f"	4165
HEX_LITERAL + , + HEX_LITERAL + , + HEX_LITERAL + , + HEX_LITERAL + , -> "HEX_LITERAL,HEX_LITERAL,HEX_LITERAL,HEX_LITERAL,"	4166
- + DECIMAL_LITERAL + ) + { + <EOL> -> "-DECIMAL_LITERAL){<EOL>"	4167
o + p -> "op"	4168
i + a + l + i + z + e -> "ialize"	4169
. + s + h + o + w + ( + ) + ; + <EOL> -> ".show();<EOL>"	4170
2 + . + g + e + t -> "2.get"	4171
I + n + f + o + . -> "Info."	4172
s + e + r + v + e + r -> "server"	4173
I + n + s -> "Ins"	4174
I + R -> "IR"	4175
, + p + r + o -> ",pro"	4176
h + o + s + t -> "host"	4177
, + L + i + s + t + < -> ",List<"	4178
N	4179
a + d + e + d -> "aded"	4180
S + t + a + t + u + s + ( -> "Status("	4181
f + r + o + m -> "from"	4182
j + a + v + a + . + l + a + n + g + . + S + t + r + i + n + g -> "java.lang.String"	4183
S + n + a + p + s + h + o + t -> "Snapshot"	4184
( + a -> "(a"	4185
U + n + i + t + . -> "Unit."	4186
L + i + s + t + < + S + t + r + i + n + g + > -> "List<String>"	4187
F + u + n + c + i + o + n + e + s -> "Funciones"	4188
t + e + r + ; + <EOL> -> "ter;<EOL>"	4189
b + l + e + m -> "blem"	4190
import + o + r + g + . + j + u + n + i + t + . + j + u + p + i + t + e + r + . + a + p + i + . -> "importorg.junit.jupiter.api."	4191
if + ( + v + a + l + u + e -> "if(value"	4192
R + e + s + u + l + t + ; + <EOL> -> "Result;<EOL>"	4193
l + i + s + t + e + n + e + r -> "listener"	4194
( + ) + + + STRING_LITERAL + ) + ; + <EOL> -> "()+STRING_LITERAL);<EOL>"	4195
L + o + g + g + e + r + l + o + g -> "Loggerlog"	4196
c + h + a + r -> "char"	4197
int + [ + ] -> "int[]"	4198
D + i + s + c -> "Disc"	4199
j + a + v + a -> "java"	4200
s + t + r + a + i + n + t -> "straint"	4201
C + O + M + P -> "COMP"	4202
m + a + t + c + h -> "match"	4203
N + u + l + l + P + o + i + n + t + e + r -> "NullPointer"	4204
t + a + x -> "tax"	4205
. + b + o + o + t -> ".boot"	4206
. + d + a + t + a + b -> ".datab"	4207
. + D -> ".D"	4208
M + o + v + e -> "Move"	4209
O + k -> "Ok"	4210
return + d -> "returnd"	4211
H	4212
R + E + F + E + R + R + E + D + _ -> "REFERRED_"	4213
. + s + e + l + e + c + t -> ".select"	4214
t + i + l + e -> "tile"	4215
( + ! -> "(!"	4216
V + e -> "Ve"	4217
r + o + l + e -> "role"	4218
p + r -> "pr"	4219
a + f + e -> "afe"	4220
l + o + g + . + i + n + f + o -> "log.info"	4221
o + r + i + z -> "oriz"	4222
g + e + n + e + r + a + t + e -> "generate"	4223
i + u + s -> "ius"	4224
) + * -> ")*"	4225
K + i + n + d -> "Kind"	4226
. + g + e + t + I + d + ( + ) + ) + ; + <EOL> -> ".getId());<EOL>"	4227
!= + null + ? -> "!=null?"	4228
E + x + a + m + p + l + e -> "Example"	4229
. + p + a + r + a + m -> ".param"	4230
M + e + a + s + u + r + e -> "Measure"	4231
M + a + p + p + e + r + ; + <EOL> -> "Mapper;<EOL>"	4232
j + a + v + a + . + i + o + . -> "java.io."	4233
s + t + a + t + u + s -> "status"	4234
l + a + b + e + l -> "label"	4235
R + e + c + e + i + v + e + r -> "Receiver"	4236
R + e + s + u + l + t + S + e + t -> "ResultSet"	4237
a + d + o + r -> "ador"	4238
a + m + o + u + n + t -> "amount"	4239
( + c + l -> "(cl"	4240
S + t + a + t + i + s + t + i + c -> "Statistic"	4241
w + o + r + l + d -> "world"	4242
A + B + L + E + _ -> "ABLE_"	4243
t + e + m + p -> "temp"	4244
t + ) + ; + <EOL> -> "t);<EOL>"	4245
a + l + l + b + a + c + k -> "allback"	4246
c + o + n + v + e + r + t -> "convert"	4247
o + o + k + i + e -> "ookie"	4248
a + b + l + e + . -> "able."	4249
import + j + a + v + a + . + u + t + i + l + . + S + e + t + ; + <EOL> -> "importjava.util.Set;<EOL>"	4250
2 + = + new -> "2=new"	4251
b + l + o + c + k -> "block"	4252
B + u + n + d + l + e + ; + <EOL> -> "Bundle;<EOL>"	4253
. + t + o + o + l -> ".tool"	4254
S + t + u + d + e + n + t -> "Student"	4255
i + m + a + g + e -> "image"	4256
; + j -> ";j"	4257
. + this -> ".this"	4258
public + void + o + n + C + l + i + c + k -> "publicvoidonClick"	4259
+ + DECIMAL_LITERAL + ; + <EOL> -> "+DECIMAL_LITERAL;<EOL>"	4260
A + r + c + h -> "Arch"	4261
l + o + n + g -> "long"	4262
D + E + R -> "DER"	4263
M + a + p + < + S + t + r + i + n + g + , + O + b + j + e + c + t + > -> "Map<String,Object>"	4264
s + . + r + e -> "s.re"	4265
R + E + F + E + R + R + E + D + _ + S + I + Z + E -> "REFERRED_SIZE"	4266
. + m + a + x -> ".max"	4267
s + ( + S + t + r + i + n + g -> "s(String"	4268
c + o + m + p -> "comp"	4269
T + E + S + T + _ -> "TEST_"	4270
. + P + R + E + F + E + R + R + E + D + _ + S + I + Z + E -> ".PREFERRED_SIZE"	4271
U + t + i + l + . + g + e + t -> "Util.get"	4272
import + j + a + v + a + . + l + a + n + g -> "importjava.lang"	4273
y + ; + <EOL> -> "y;<EOL>"	4274
G + r + o + u + p + ( -> "Group("	4275
S + u + b + j + e + c + t -> "Subject"	4276
l + i + n + e -> "line"	4277
A + s + s + i + g + n + m + e + n + t -> "Assignment"	4278
e + n + d + e + d -> "ended"	4279
e + s + ) + ; + <EOL> -> "es);<EOL>"	4280
L + o + g + . + d -> "Log.d"	4281
t + e + a + m -> "team"	4282
P + r + o + g + r + a + m -> "Program"	4283
I + d + e + n + t + i + t + y -> "Identity"	4284
. + s + e + a + r + c + h -> ".search"	4285
s + h + i + p -> "ship"	4286
i + r + e + c + t -> "irect"	4287
j + o + b -> "job"	4288
A + x + i + s -> "Axis"	4289
e + n + c + h -> "ench"	4290
< + > + ( -> "<>("	4291
a + c + c + e + s + s -> "access"	4292
o + r + e + d -> "ored"	4293
U + t + i + l + s + . + i + s -> "Utils.is"	4294
a + c + t + i + o + n -> "action"	4295
g + e + n + e + r -> "gener"	4296
o + o + r + d -> "oord"	4297
N + o + d + e + ; + <EOL> -> "Node;<EOL>"	4298
R + o + o + m -> "Room"	4299
C + o + n + t + e + x + t + c + t + x -> "Contextctx"	4300
v + ) + { + <EOL> -> "v){<EOL>"	4301
L + E + ) + ; + <EOL> -> "LE);<EOL>"	4302
F + I + E + L + D + _ -> "FIELD_"	4303
u + e + t + o -> "ueto"	4304
( + n + o + d + e -> "(node"	4305
u + e + t + o + o + t + h -> "uetooth"	4306
= + f + i + n + d -> "=find"	4307
. + m + a + n -> ".man"	4308
C + o + n + s + t + a + n + t + e + s -> "Constantes"	4309
G + e + n + e + r + a + t + e + d + M + e + s + s + a + g + e -> "GeneratedMessage"	4310
v + i + e -> "vie"	4311
s + q + l -> "sql"	4312
. + a + b -> ".ab"	4313
t + r + o + y -> "troy"	4314
( + ) + : -> "():"	4315
( + ) + + + STRING_LITERAL + + -> "()+STRING_LITERAL+"	4316
j + L + a + b + e + l -> "jLabel"	4317
d + p + i -> "dpi"	4318
s + = + new + A + r + r + a + y + L + i + s + t + < + > + ( + ) + ; + <EOL> -> "s=newArrayList<>();<EOL>"	4319
j + e + c + t + i + o + n -> "jection"	4320
h + i + c -> "hic"	4321
d + a + t -> "dat"	4322
= + new + int -> "=newint"	4323
D + e + l + a + y -> "Delay"	4324
( + s + o + u + r + c + e -> "(source"	4325
if + ( + g + e + t -> "if(get"	4326
F + i + x -> "Fix"	4327
r + i + c + e -> "rice"	4328
V + i + s + i + b + i + l + i + t + y + ( + V + i + e + w -> "Visibility(View"	4329
t + i + c + a + l -> "tical"	4330
T + o + ( -> "To("	4331
u + p + e + r -> "uper"	4332
s + o + u + p -> "soup"	4333
D + i + s + t + a + n + c + e -> "Distance"	4334
V + i + e + w + G + r + o + u + p -> "ViewGroup"	4335
L + a + y + o + u + t + I + n + f + l -> "LayoutInfl"	4336
V + a + l + u + e + ) + ; + <EOL> -> "Value);<EOL>"	4337
F + r -> "Fr"	4338
P + l + a + t + f + o + r + m -> "Platform"	4339
S + c + h + e + d + u + l + e -> "Schedule"	4340
e + n + a + n + t -> "enant"	4341
= + S + y + s + t + e + m -> "=System"	4342
T + i + m + e + r -> "Timer"	4343
S + y + s + t + e + m + . + o + u + t + . + p + r + i + n + t + l + n + ( -> "System.out.println("	4344
S + E + C + O + N -> "SECON"	4345
J + S + O + N + A + r + r + a + y -> "JSONArray"	4346
E + v + a + l + u -> "Evalu"	4347
E + n + c + o + d + i + n + g -> "Encoding"	4348
. + p + r + o + t + o + c + o + l -> ".protocol"	4349
i + d + ) + { + <EOL> -> "id){<EOL>"	4350
a + d + d + C + r + i + t + e + r + i + o + n + ( + STRING_LITERAL + , -> "addCriterion(STRING_LITERAL,"	4351
O + _ -> "O_"	4352
( + STRING_LITERAL + ) + , + <EOL> -> "(STRING_LITERAL),<EOL>"	4353
a + t + e + w + a + y -> "ateway"	4354
s + e + l + e + c + t -> "select"	4355
private + final + S + t + r + i + n + g -> "privatefinalString"	4356
F + o + c + u + s -> "Focus"	4357
. + a + p + p + . -> ".app."	4358
if + ( + d + e + b + u + g -> "if(debug"	4359
o + k + e -> "oke"	4360
R + a + w -> "Raw"	4361
= + r + e + s + p + o + n + s + e -> "=response"	4362
( + e + v + e + n + t -> "(event"	4363
d + p + i + M + o + d + e -> "dpiMode"	4364
S + e + c + t + i + o + n -> "Section"	4365
M + i + s -> "Mis"	4366
e + x + t + e + n + s + i + o + n + R + e + g + i + s + t + r + y -> "extensionRegistry"	4367
_ + p + r + o -> "_pro"	4368
, + I -> ",I"	4369
S + e + r + i + a + l + i + z + e + r -> "Serializer"	4370
. + e + n + t + i + t + y + . -> ".entity."	4371
l + o + g + g + e + r + . + i + n + f + o -> "logger.info"	4372
C + O + M + M -> "COMM"	4373
private + I + n + t + e + g + e + r -> "privateInteger"	4374
p + a + r + s + e + r -> "parser"	4375
a + i -> "ai"	4376
( + T -> "(T"	4377
L + i + t + e + r + a + l -> "Literal"	4378
C + o + n + n + e + c + t + o + r -> "Connector"	4379
C + o + m + p + l + e + t + e -> "Complete"	4380
b + r + a + i + n -> "brain"	4381
I + n + c -> "Inc"	4382
) + g + e + t -> ")get"	4383
l + o + y + m + e + n + t + E + n + t + i + t + y + M + a + n + a + g + e + r -> "loymentEntityManager"	4384
I + n + v + o + c + a + t + i + o + n -> "Invocation"	4385
r + e + s + o + l + v + e -> "resolve"	4386
extends + B + a + s + e -> "extendsBase"	4387
C + r + e + a + t + e + d -> "Created"	4388
A + C + T + I + O + N + _ -> "ACTION_"	4389
g + u -> "gu"	4390
. + r + e + p + l + a + c + e -> ".replace"	4391
I + m + a + g + e + V + i + e + w -> "ImageView"	4392
a + b + l + e + < -> "able<"	4393
Q + u + e + s + t + i + o + n -> "Question"	4394
import + a + n + d + r + o + i + d + . + v + i + e + w + . + V + i + e + w + ; + <EOL> -> "importandroid.view.View;<EOL>"	4395
A + r + g + s -> "Args"	4396
L + o + c + a + l + D + a + t + e -> "LocalDate"	4397
a + p + p + . -> "app."	4398
j + a + v + a + . + u + t + i + l + . -> "java.util."	4399
M + a + p + < + S + t + r + i + n + g + , + S + t + r + i + n + g + > -> "Map<String,String>"	4400
( + f + i + e + l + d -> "(field"	4401
C + o + m + m + i + t -> "Commit"	4402
a + r + g + u + m + e + n + t -> "argument"	4403
, + - + FLOAT_LITERAL -> ",-FLOAT_LITERAL"	4404
, + e + ) + ; + <EOL> -> ",e);<EOL>"	4405
G + r + a + p + h + i + c -> "Graphic"	4406
( + ) + , + i + s -> "(),is"	4407
a + p + p + e + n + d + ( + STRING_LITERAL + ) + ; + <EOL> -> "append(STRING_LITERAL);<EOL>"	4408
e + l + p -> "elp"	4409
( + new + F + i + l + e -> "(newFile"	4410
O + p + t + i + o + n + a + l + < -> "Optional<"	4411
= + new + S + t + r + i + n + g + B + u + i + l + d + e + r + ( + ) + ; + <EOL> -> "=newStringBuilder();<EOL>"	4412
A + S + S -> "ASS"	4413
e + x + t + e + r + n -> "extern"	4414
I + l + l + e + g + a + l + S + t + a + t + e -> "IllegalState"	4415
( + m + a + p -> "(map"	4416
_ + t -> "_t"	4417
R + e + m + o + v + e -> "Remove"	4418
. + g + e + t + D + a + t + a -> ".getData"	4419
R + E + F + I + X -> "REFIX"	4420
P + r + i + m + a + r + y -> "Primary"	4421
. + p + r + o + c + e + s + s -> ".process"	4422
public + I + n + t + e + g + e + r -> "publicInteger"	4423
X + _ -> "X_"	4424
. + c + o + l + l + e + c + t + ( + C + o + l + l + e + c + t + o + r -> ".collect(Collector"	4425
. + I + N -> ".IN"	4426
e + n + a + b + l + e -> "enable"	4427
s + L + i + s + t -> "sList"	4428
e + x + i + o + n -> "exion"	4429
T + u + p + l + e -> "Tuple"	4430
. + f + o + r -> ".for"	4431
I + n + d + i + c -> "Indic"	4432
A + r + r + a + y + L + i + s + t + < -> "ArrayList<"	4433
e + . + g + e + t + M + e + s + s + a + g + e + ( + ) + ) + ; + <EOL> -> "e.getMessage());<EOL>"	4434
t + f -> "tf"	4435
e + m + e + n + t -> "ement"	4436
, + C -> ",C"	4437
E + d + i + t + T + e + x + t -> "EditText"	4438
t + r + e + e -> "tree"	4439
( + new + j + a + v + a + . + a + w + t + . -> "(newjava.awt."	4440
R + E + C -> "REC"	4441
O + w + n + e + r -> "Owner"	4442
J + E + C -> "JEC"	4443
S + y + s + t + e + m + . + o + u + t + . + p + r + i + n + t -> "System.out.print"	4444
l + a + y -> "lay"	4445
e + r + c -> "erc"	4446
. + R -> ".R"	4447
O + L -> "OL"	4448
v + e + n -> "ven"	4449
s + t + r + e + a + m -> "stream"	4450
o + i + c + e -> "oice"	4451
a + n + d + i + d -> "andid"	4452
, + n -> ",n"	4453
d + e + l + e + t + e -> "delete"	4454
) + / -> ")/"	4455
, + FLOAT_LITERAL + , + FLOAT_LITERAL + , + FLOAT_LITERAL + , + FLOAT_LITERAL -> ",FLOAT_LITERAL,FLOAT_LITERAL,FLOAT_LITERAL,FLOAT_LITERAL"	4456
, + v + a + l + u + e + ) + ; + <EOL> -> ",value);<EOL>"	4457
f + l + a + g -> "flag"	4458
. + m + a + t + h -> ".math"	4459
a + l + a + n + c + e -> "alance"	4460
. + class + ) + ) + ; + <EOL> -> ".class));<EOL>"	4461
i + k + e -> "ike"	4462
) + . + w + i + t + h -> ").with"	4463
e + t + r + o -> "etro"	4464
; + ++ -> ";++"	4465
t + o + p + i + c -> "topic"	4466
. + h + e -> ".he"	4467
D + a + t + a + ( -> "Data("	4468
M + a + p + . + E + n + t + r + y -> "Map.Entry"	4469
v + e + r + s + e -> "verse"	4470
M + o + n + i + t + o + r -> "Monitor"	4471
j + a + v + a + x + . + s + w + i + n + g + . + G + r + o + u + p + L + a + y + o + u + t + . + P + R + E + F + E + R + R + E + D + _ + S + I + Z + E -> "javax.swing.GroupLayout.PREFERRED_SIZE"	4472
A + c + t + i + o + n + E + v + e + n + t -> "ActionEvent"	4473
u + l + a + t + i + o + n -> "ulation"	4474
( + boolean -> "(boolean"	4475
y + z -> "yz"	4476
d + i + a + l + o + g -> "dialog"	4477
A + T + E + _ -> "ATE_"	4478
e + e + r -> "eer"	4479
p + l + e + m + e + n + t -> "plement"	4480
A + n + s -> "Ans"	4481
this + . + d -> "this.d"	4482
. + i + s + E + m + p + t + y + ( + ) + ) + { + <EOL> -> ".isEmpty()){<EOL>"	4483
c + c -> "cc"	4484
( + ) + + + STRING_LITERAL + + -> "()+STRING_LITERAL+"	4485
( + R + . + l + a + y + o + u + t -> "(R.layout"	4486
i + n + i + t + i + a + l -> "initial"	4487
C + o + n + s -> "Cons"	4488
( + t + a + r + g + e + t -> "(target"	4489
S + h + a + p + e -> "Shape"	4490
. + r + e + g + i + s + t + e + r -> ".register"	4491
S + e + t + < -> "Set<"	4492
e + m + e -> "eme"	4493
S + e + t + ( + ) + ) + { + <EOL> -> "Set()){<EOL>"	4494
I + n + t + e + g + e + r -> "Integer"	4495
c + h + a + n + n + e + l -> "channel"	4496
import + j + a + v + a + . + n + i + o + . -> "importjava.nio."	4497
s + a + v + e + d + I + n + s + t + a + n + c + e + S + t + a + t + e -> "savedInstanceState"	4498
a + y + m + e + n + t -> "ayment"	4499
s + . + n + e + w -> "s.new"	4500
d + e + f + a + u + l + t -> "default"	4501
, + i -> ",i"	4502
s + B + y -> "sBy"	4503
E + n + t + r -> "Entr"	4504
( + b -> "(b"	4505
. + b + a + c + k + e + n + d + s + . + l + w + j + g + l + 3 + . + L + w + j + g + l + 3 + A + p + p + l + i + c + a + t + i + o + n + C + o + n + f + i + g + u + r + a + t + i + o + n -> ".backends.lwjgl3.Lwjgl3ApplicationConfiguration"	4506
U + T + _ -> "UT_"	4507
g + r + o + u + p -> "group"	4508
this + . -> "this."	4509
T + h + a + n -> "Than"	4510
s + . + m + o + d + e + l -> "s.model"	4511
u + n + i + t -> "unit"	4512
t + h + r + i + f + t -> "thrift"	4513
. + a + d + d + ( + STRING_LITERAL + ) + ; + <EOL> -> ".add(STRING_LITERAL);<EOL>"	4514
( + S + t + r + i + n + g + n + a + m + e + ) + { + <EOL> -> "(Stringname){<EOL>"	4515
( + ) + ) + , -> "()),"	4516
import + o + r + g + . + h -> "importorg.h"	4517
= + new + A + r + r + a + y + L + i + s + t -> "=newArrayList"	4518
return + super -> "returnsuper"	4519
( + t + y + p + e -> "(type"	4520
import + j -> "importj"	4521
Y + e + a + r -> "Year"	4522
r + e + g + i + s + t + e + r -> "register"	4523
. + p + u + t + ( + STRING_LITERAL + , + DECIMAL_LITERAL + ) + ; + <EOL> -> ".put(STRING_LITERAL,DECIMAL_LITERAL);<EOL>"	4524
B + o + u + n + d + s -> "Bounds"	4525
t + a + g -> "tag"	4526
= + c + o + n + t + e + x + t -> "=context"	4527
M + o + n + t + h -> "Month"	4528
t + h + a + t -> "that"	4529
( + ) + ) + . + t + h + e + n + R + e + t + u + r + n -> "()).thenReturn"	4530
l + a + b + e + l -> "label"	4531
E + N + T + I -> "ENTI"	4532
private + j + a + v + a + x + . + s + w + i + n + g + . + J -> "privatejavax.swing.J"	4533
I + n + t + e + r + c + e + p + t + o + r -> "Interceptor"	4534
d + a -> "da"	4535
( + short + ) -> "(short)"	4536
c + o + m + p + o + n + e + n + t -> "component"	4537
S + e + r + v + i + c + e + { + <EOL> -> "Service{<EOL>"	4538
( + F -> "(F"	4539
f + i + r + m -> "firm"	4540
S + c + a + n + n + e + r -> "Scanner"	4541
m + o + c + k + i + t + o + . + M + o + c + k -> "mockito.Mock"	4542
C + R + E -> "CRE"	4543
z	4544
import + a + n + d + r + o + i + d + . + c + o + n + t + e + n + t + . + C + o + n + t + e + x + t + ; + <EOL> -> "importandroid.content.Context;<EOL>"	4545
s + o + l + e -> "sole"	4546
e + n + g + i + n + e -> "engine"	4547
( + ) + ) + . + i + s + E + q + u + a + l + T + o -> "()).isEqualTo"	4548
a + c + t + i + v -> "activ"	4549
P + r + o + v + i + d + e + r + ; + <EOL> -> "Provider;<EOL>"	4550
for + ( + S + t + r + i + n + g -> "for(String"	4551
= + c + o + m -> "=com"	4552
C + u + s + t + o + m + e + r -> "Customer"	4553
( + F + i + l + e -> "(File"	4554
a + i + n + i + n + g -> "aining"	4555
A + d + a + p + t + e + r + ; + <EOL> -> "Adapter;<EOL>"	4556
C + a + n + c + e + l -> "Cancel"	4557
a + t + h + e + r -> "ather"	4558
T + r + i -> "Tri"	4559
a + c + h + i + n + e -> "achine"	4560
. + g + e + t + C + u + r + r + e + n + t -> ".getCurrent"	4561
R + E + Q + U + E -> "REQUE"	4562
import + c + o + m + . + c -> "importcom.c"	4563
a + l + t -> "alt"	4564
d + u + c -> "duc"	4565
h + t + t + p -> "http"	4566
R + e + q + u + i + r + e + d -> "Required"	4567
import + o + r + g + . + s + l + f + 4 + j + . + L + o + g + g + e + r + ; + <EOL> -> "importorg.slf4j.Logger;<EOL>"	4568
r + i + g + h + t -> "right"	4569
s + . + i + s -> "s.is"	4570
s + . + p -> "s.p"	4571
. + r + e + p + o + s + i + t + o + r + y -> ".repository"	4572
B + u + n + d + l + e + s + a + v + e + d + I + n + s + t + a + n + c + e + S + t + a + t + e -> "BundlesavedInstanceState"	4573
. + h + a + s + h -> ".hash"	4574
e + t + b + r + a + i + n -> "etbrain"	4575
a + v + i -> "avi"	4576
b + u + k + k -> "bukk"	4577
N + a + t + i + v + e -> "Native"	4578
A + r + t + i + f + a + c + t -> "Artifact"	4579
I + s + s -> "Iss"	4580
S + E + T -> "SET"	4581
5 + 0 -> "50"	4582
o + w + n + e + r -> "owner"	4583
, + t -> ",t"	4584
l + a + t + e -> "late"	4585
u + t + i + l + . -> "util."	4586
F + o + r + m + u + l -> "Formul"	4587
c + a + r + d -> "card"	4588
b + a + s + e -> "base"	4589
( + ) + . + t + o -> "().to"	4590
S + y + n -> "Syn"	4591
u + k -> "uk"	4592
. + m + y -> ".my"	4593
. + g + l -> ".gl"	4594
= + L + o + g + g + e + r + F + a + c + t + o + r + y -> "=LoggerFactory"	4595
public + abstract + class -> "publicabstractclass"	4596
+ + CHAR_LITERAL -> "+CHAR_LITERAL"	4597
a + p + p -> "app"	4598
j + a + v + a + . + l + a + n + g + . + O + b + j + e + c + t -> "java.lang.Object"	4599
C + o + n + t + r + o + l + l + e + r + ; + <EOL> -> "Controller;<EOL>"	4600
) + . + i + s -> ").is"	4601
U + s + u + a + r + i + o -> "Usuario"	4602
. + g + e + t + I + t + e + m -> ".getItem"	4603
C + o + n + s + t + a + n + t + e + s + . -> "Constantes."	4604
I + Z -> "IZ"	4605
o + r + i + z + o + n + t -> "orizont"	4606
t + o + S + t + r + i + n + g + ( + ) + ) + ; + <EOL> -> "toString());<EOL>"	4607
s + v -> "sv"	4608
( + STRING_LITERAL + , + STRING_LITERAL + ) + ) + ; + <EOL> -> "(STRING_LITERAL,STRING_LITERAL));<EOL>"	4609
a + m + e + s + p + a + c + e -> "amespace"	4610
e + x + e + c -> "exec"	4611
C + o + n + f -> "Conf"	4612
B + u + n + d + l + e + s + a + v + e + d + I + n + s + t + a + n + c + e + S + t + a + t + e + ) + { + <EOL> -> "BundlesavedInstanceState){<EOL>"	4613
== + DECIMAL_LITERAL + ) + <EOL> -> "==DECIMAL_LITERAL)<EOL>"	4614
. + i + t + e + m -> ".item"	4615
( + S + t + r + i + n + g + ) -> "(String)"	4616
public + final + class -> "publicfinalclass"	4617
for + ( + int + j -> "for(intj"	4618
f + i + l + e + . -> "file."	4619
I + n + s + t + a + n -> "Instan"	4620
( + i + d + ) + ; + <EOL> -> "(id);<EOL>"	4621
, + ( -> ",("	4622
O + U + T -> "OUT"	4623
W + T -> "WT"	4624
e + r + g -> "erg"	4625
v + i + c + e + s + . -> "vices."	4626
( + m + o + c + k -> "(mock"	4627
C + l + i + e + n + t + ; + <EOL> -> "Client;<EOL>"	4628
p + r + o + d + u + c + t -> "product"	4629
p + a + r + a + m + e + t + e + r -> "parameter"	4630
I + d + ( + ) + ; + <EOL> -> "Id();<EOL>"	4631
t + o + t + a + l -> "total"	4632
L + A + Y -> "LAY"	4633
b + u + f -> "buf"	4634
if + ( + d + e + b + u + g + ) + <EOL> -> "if(debug)<EOL>"	4635
- + DECIMAL_LITERAL + ] -> "-DECIMAL_LITERAL]"	4636
C + h + a + r + t -> "Chart"	4637
F + i + e + l + d + s -> "Fields"	4638
p + e + d -> "ped"	4639
W + N -> "WN"	4640
l + o + c + a + l + V + a + r -> "localVar"	4641
, + STRING_LITERAL + + -> ",STRING_LITERAL+"	4642
u + m + b -> "umb"	4643
( + D -> "(D"	4644
i + m + e + n + t -> "iment"	4645
R + E + N -> "REN"	4646
O + U + R -> "OUR"	4647
>= + DECIMAL_LITERAL -> ">=DECIMAL_LITERAL"	4648
a + u + n + c + h -> "aunch"	4649
e + q -> "eq"	4650
p + a + r + e + d + S + t + a + t + e + m + e + n + t -> "paredStatement"	4651
s + . + c -> "s.c"	4652
t + i + m + e -> "time"	4653
l + i + n + g -> "ling"	4654
( + S + t + r + i + n + g + k + e + y -> "(Stringkey"	4655
C + o + d + e + ; + <EOL> -> "Code;<EOL>"	4656
a + v + i + g + a + t + i + o + n -> "avigation"	4657
h + a + n + d + l + e -> "handle"	4658
, + ? -> ",?"	4659
F + a + c + t + o + r + y + . + c + r + e + a + t + e -> "Factory.create"	4660
import + c + o + m + . + j -> "importcom.j"	4661
import + o + r + g + . + s + l + f + 4 + j + . + L + o + g + g + e + r + F + a + c + t + o + r + y + ; + <EOL> -> "importorg.slf4j.LoggerFactory;<EOL>"	4662
P + a + r + c + e + l -> "Parcel"	4663
S + u + c + h -> "Such"	4664
u + b + s -> "ubs"	4665
, + STRING_LITERAL + , + STRING_LITERAL + ) + ; + <EOL> -> ",STRING_LITERAL,STRING_LITERAL);<EOL>"	4666
H + o + m + e -> "Home"	4667
static	4668
_ + t + h -> "_th"	4669
O + f + f -> "Off"	4670
h + o + l + d + e + r -> "holder"	4671
A + s + s + e + r + t + . + a + s + s + e + r + t + T + r + u + e -> "Assert.assertTrue"	4672
o + r + i + z + o + n + t + a + l -> "orizontal"	4673
( + e -> "(e"	4674
S + h -> "Sh"	4675
b + r -> "br"	4676
D + o + w + n + l + o + a + d -> "Download"	4677
o + t + e -> "ote"	4678
DECIMAL_LITERAL + : -> "DECIMAL_LITERAL:"	4679
. + i + m + p + l -> ".impl"	4680
A + l + i + a + s -> "Alias"	4681
c + t -> "ct"	4682
C + o + o + r + d + i + n -> "Coordin"	4683
S + p + a + n -> "Span"	4684
o + r + g + . + j + u + n + i + t + . + A + s + s + e + r + t + . + a + s + s + e + r + t + N + u + l + l + ( -> "org.junit.Assert.assertNull("	4685
b + i + t -> "bit"	4686
i + b + e + r + n -> "ibern"	4687
i + n + f -> "inf"	4688
L + o + g + ; + <EOL> -> "Log;<EOL>"	4689
b + u + t + t + o + n -> "button"	4690
2 + . + s + e + t -> "2.set"	4691
o + v -> "ov"	4692
L + i + s + t + ) + ; + <EOL> -> "List);<EOL>"	4693
m + a + r + t -> "mart"	4694
i + f + f -> "iff"	4695
2 + 4 -> "24"	4696
u + e + n + t -> "uent"	4697
S + a + v + e -> "Save"	4698
t + e + x + t + . -> "text."	4699
S + y + s + t + e + m + . + o + u + t + . + f + o + r + m + a + t -> "System.out.format"	4700
K + e + y + w + o + r + d -> "Keyword"	4701
H + a + n + d + l + e + r + . -> "Handler."	4702
S + i + g + n + a + t + u + r + e -> "Signature"	4703
i + b + e + r + n + a + t + e -> "ibernate"	4704
D + e + c + l + a + r + a + t + i + o + n -> "Declaration"	4705
r + e + q + u + e + s + t + . + g + e + t -> "request.get"	4706
e + n + e + r + . -> "ener."	4707
F + a + c + t + o + r -> "Factor"	4708
a + c + k + a + g + e -> "ackage"	4709
I + D + , -> "ID,"	4710
t + y + p + e + ; + <EOL> -> "type;<EOL>"	4711
S + u + b + L + O + b + j + e + c + t -> "SubLObject"	4712
N + o + S + u + c + h -> "NoSuch"	4713
= + d + a + t + a -> "=data"	4714
c + l + o + s + e -> "close"	4715
= + STRING_LITERAL + + -> "=STRING_LITERAL+"	4716
N + U + M + B -> "NUMB"	4717
for + ( + int -> "for(int"	4718
m + e + n + u -> "menu"	4719
this + . + i + s -> "this.is"	4720
o + r + g + . + a + p + a + c + h + e + . -> "org.apache."	4721
v + o + l -> "vol"	4722
M + A + T -> "MAT"	4723
m + u + n -> "mun"	4724
o + f + f -> "off"	4725
( + S + t + r + i + n + g + v + a + l + u + e + ) + { + <EOL> -> "(Stringvalue){<EOL>"	4726
r + o + w + s + e + r -> "rowser"	4727
e + r + s + ; + <EOL> -> "ers;<EOL>"	4728
i + c + t + i + o + n + a + r + y -> "ictionary"	4729
n + t -> "nt"	4730
a + f + f -> "aff"	4731
T + r + i + g + g + e + r -> "Trigger"	4732
c + h + e + m + e -> "cheme"	4733
F + i + r + e -> "Fire"	4734
private + static + void -> "privatestaticvoid"	4735
P + r + e + s + s -> "Press"	4736
( + s + e -> "(se"	4737
, + final -> ",final"	4738
N + e + t -> "Net"	4739
D + E + S + C -> "DESC"	4740
i + n + s -> "ins"	4741
( + C + o + l + o + r -> "(Color"	4742
S + I + B -> "SIB"	4743
E + D + _ -> "ED_"	4744
e + x + i + s + t -> "exist"	4745
B + u + t + t + o + n + ; + <EOL> -> "Button;<EOL>"	4746
s + . + d -> "s.d"	4747
. + m + o + d -> ".mod"	4748
l + u + c -> "luc"	4749
P + u + b + l + i + c -> "Public"	4750
, + CHAR_LITERAL + , + CHAR_LITERAL -> ",CHAR_LITERAL,CHAR_LITERAL"	4751
S + y + n + c -> "Sync"	4752
( + ) + , + STRING_LITERAL + ) + ; + <EOL> -> "(),STRING_LITERAL);<EOL>"	4753
r + o + b + o + t -> "robot"	4754
return + f -> "returnf"	4755
P + a + t + h + ) + ; + <EOL> -> "Path);<EOL>"	4756
C + o + n + c + e + p + t -> "Concept"	4757
K + n -> "Kn"	4758
a + n + i + z + a + t + i + o + n -> "anization"	4759
U + n + i + q + u + e -> "Unique"	4760
e + t + b + r + a + i + n + s + . -> "etbrains."	4761
s + ) + ) + ; + <EOL> -> "s));<EOL>"	4762
M + e + t + a + D + a + t + a -> "MetaData"	4763
v + e + r + i + f + y -> "verify"	4764
i + n + f + o -> "info"	4765
a + t + e + g + o + r -> "ategor"	4766
C + e + r + t + i + f + i + c + a + t + e -> "Certificate"	4767
w + a + r + e + . -> "ware."	4768
a + s + s + e + r + t + N + o + t + N + u + l + l -> "assertNotNull"	4769
A + p + p + l + i + c + a + t + i + o + n + C + o + n + t + e + x + t -> "ApplicationContext"	4770
. + c + o + l + o + r -> ".color"	4771
E + N + D -> "END"	4772
t + i + m + e + s -> "times"	4773
v + a + l + i + d + a + t + i + o + n -> "validation"	4774
S + y + s + t + e + m + . + o + u + t + . + f + o + r + m + a + t + ( + STRING_LITERAL + , + STRING_LITERAL + ) + ; + <EOL> -> "System.out.format(STRING_LITERAL,STRING_LITERAL);<EOL>"	4775
&& + ! -> "&&!"	4776
. + r + u + n + t + i + m + e + . -> ".runtime."	4777
C + o + m + p + o + n + e + n + t + ; + <EOL> -> "Component;<EOL>"	4778
L + i + s + t + ) + { + <EOL> -> "List){<EOL>"	4779
E + v + e + n + t + . -> "Event."	4780
a + r + n + i + n + g -> "arning"	4781
L + o + w + e + r + C + a + s + e -> "LowerCase"	4782
S + t + a + t + u + s + ; + <EOL> -> "Status;<EOL>"	4783
t + i + p -> "tip"	4784
0 + . -> "0."	4785
r + i + v + e -> "rive"	4786
i + f + i + c -> "ific"	4787
( + u + r + l -> "(url"	4788
I + T + _ -> "IT_"	4789
S + e + n + d -> "Send"	4790
N + o + d + e -> "Node"	4791
P + a + r + a + l + l + e + l -> "Parallel"	4792
T + E + _ -> "TE_"	4793
. + r + e + f + l + e + c + t + . -> ".reflect."	4794
T + , -> "T,"	4795
R + e + c + i + p + e -> "Recipe"	4796
_ + h -> "_h"	4797
( + ( + ) + -> -> "(()->"	4798
L + i + g + h + t -> "Light"	4799
package + n -> "packagen"	4800
t + i + m + e + s + t + a + m + p -> "timestamp"	4801
. + p + o + s + t -> ".post"	4802
public + S + t + r + i + n + g -> "publicString"	4803
w + i + t + h -> "with"	4804
( + ( + ( -> "((("	4805
V + 3 -> "V3"	4806
S + c + a + n -> "Scan"	4807
T + e + m + p -> "Temp"	4808
S + i + z + e + ; + <EOL> -> "Size;<EOL>"	4809
. + g + e + t + S + t + a + t + u + s -> ".getStatus"	4810
S + T + A + R -> "STAR"	4811
A + n + a + l + y + s + i + s -> "Analysis"	4812
( + v -> "(v"	4813
= + t -> "=t"	4814
( + m + s + g -> "(msg"	4815
C + o + m + p + o + u + n + d -> "Compound"	4816
P + a + y + l + o + a + d -> "Payload"	4817
P + r + o + d + u + c + t + o -> "Producto"	4818
T + e -> "Te"	4819
U + s + e + r + n + a + m + e -> "Username"	4820
, + - + DECIMAL_LITERAL + , + - + DECIMAL_LITERAL -> ",-DECIMAL_LITERAL,-DECIMAL_LITERAL"	4821
C + o + s + t -> "Cost"	4822
p + o + r + t -> "port"	4823
c + o + n + t + r + o + l -> "control"	4824
S + u + m + m + a + r + y -> "Summary"	4825
import + a + n + d + r + o + i + d + . + o + s + . + B + u + n + d + l + e + ; + <EOL> -> "importandroid.os.Bundle;<EOL>"	4826
p + l + e + x -> "plex"	4827
) + -> + { + <EOL> -> ")->{<EOL>"	4828
D + i + f + f -> "Diff"	4829
P + i + c + k -> "Pick"	4830
if + ( + f -> "if(f"	4831
if + ( + null -> "if(null"	4832
t + u + r + e -> "ture"	4833
( + i + s -> "(is"	4834
a + g + e + n + t -> "agent"	4835
import + j + a + v + a + x + . + s + e + r + v + l + e + t + . + h + t + t + p + . -> "importjavax.servlet.http."	4836
i + n + t + e + r -> "inter"	4837
. + s + t + r + i + n + g + . -> ".string."	4838
r + e + s + h + o + l + d -> "reshold"	4839
= + S + t + r + i + n + g -> "=String"	4840
t + a + c + t -> "tact"	4841
. + p + a + r + s + e + r -> ".parser"	4842
C + O + D + E -> "CODE"	4843
a + s + e + d -> "ased"	4844
byte + [ + ] -> "byte[]"	4845
( + j + s + o + n -> "(json"	4846
int + g + e + t -> "intget"	4847
|	4848
s + t + r + u + c + t -> "struct"	4849
L + a + t -> "Lat"	4850
E + s -> "Es"	4851
l + o + o + k -> "look"	4852
o + r + d + e + r -> "order"	4853
C + o + n + t + e + x + t + . + g + e + t -> "Context.get"	4854
_ + s + t + a + t + i + c -> "_static"	4855
M + o + t + o + r -> "Motor"	4856
u + s + h + ( + ) + ; + <EOL> -> "ush();<EOL>"	4857
B + l + a + n + k -> "Blank"	4858
S + e + n + d + e + r -> "Sender"	4859
i + n + i + t + i + a + l -> "initial"	4860
u + r + f + a + c + e -> "urface"	4861
C + l + a + s + s + L + o + a + d + e + r -> "ClassLoader"	4862
C + o + n + s + t + a + n + t + e + s + . + I + S -> "Constantes.IS"	4863
. + g + e + t + I + n + s + t + a + n + c + e + ( + ) + . + g + e + t -> ".getInstance().get"	4864
q + u + a + r + e -> "quare"	4865
F + L -> "FL"	4866
E + x + c + e + p + t + i + o + n + ( + STRING_LITERAL + + -> "Exception(STRING_LITERAL+"	4867
e + v + t -> "evt"	4868
K + e + y + ; + <EOL> -> "Key;<EOL>"	4869
p + r + i + n + t -> "print"	4870
i + v + e + d -> "ived"	4871
o + c + i -> "oci"	4872
) + ) + ) + { + <EOL> -> "))){<EOL>"	4873
. + d + t + o -> ".dto"	4874
} + else + if + ( -> "}elseif("	4875
C + h + a + n + g + e + L + i + s + t + e + n + e + r -> "ChangeListener"	4876
P + a + s + s -> "Pass"	4877
r + y + p + t + o -> "rypto"	4878
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + d + a + t + a -> "importorg.springframework.data"	4879
C + o + n + c + u + r + r + e + n + t -> "Concurrent"	4880
import + a + n + d + r + o + i + d + . + g + r + a + p + h + i + c + s + . -> "importandroid.graphics."	4881
t + e + x + t + ) + ; + <EOL> -> "text);<EOL>"	4882
] + [ -> "]["	4883
import + static + o + r + g + . + j + u + n + i + t + . + A + s + s + e + r + t + . + a + s + s + e + r + t -> "importstaticorg.junit.Assert.assert"	4884
b + u + f -> "buf"	4885
if + ( + STRING_LITERAL -> "if(STRING_LITERAL"	4886
) + == -> ")=="	4887
private + static + final + long + s + e + r + i + a + l + V + e + r + s + i + o + n + U + I + D + = + DECIMAL_LITERAL + ; + <EOL> -> "privatestaticfinallongserialVersionUID=DECIMAL_LITERAL;<EOL>"	4888
D + y + n + a + m + i + c -> "Dynamic"	4889
e + r + . + h -> "er.h"	4890
a + m + a + z + o + n -> "amazon"	4891
a + r + s + h -> "arsh"	4892
P + h + o + n + e -> "Phone"	4893
a + y + l + o + a + d -> "ayload"	4894
:: + g + e + t -> "::get"	4895
b + a + s + e + . -> "base."	4896
O + r + B + u + i + l + d + e + r -> "OrBuilder"	4897
N + e + x + t + ( + ) + ) + { + <EOL> -> "Next()){<EOL>"	4898
< + S + t + r + i + n + g + > + g + e + t -> "<String>get"	4899
( + CHAR_LITERAL + ) + ; + <EOL> -> "(CHAR_LITERAL);<EOL>"	4900
I + n + j + e + c + t -> "Inject"	4901
a + c + h + e + . -> "ache."	4902
T + e + r + m + i + n -> "Termin"	4903
C + o + l + l + e + c + t + i + o + n + s + . + s -> "Collections.s"	4904
S + p + l + i + t -> "Split"	4905
( + final -> "(final"	4906
M + o + u + s + e -> "Mouse"	4907
( + c + o + n + t + e + x + t + , -> "(context,"	4908
D + i + s + p -> "Disp"	4909
g + r + i + d + B + a + g + C + o + n + s + t + r + a + i + n + t -> "gridBagConstraint"	4910
import + o + r + g + . + b + u + k + k -> "importorg.bukk"	4911
I + O + E + x + c + e + p + t + i + o + n + , -> "IOException,"	4912
. + c + o + l + l + e + c + t + ( + C + o + l + l + e + c + t + o + r + s + . + t + o -> ".collect(Collectors.to"	4913
T + r + a + n + s + f + e + r -> "Transfer"	4914
e + r + i + a + l + i + z -> "erializ"	4915
W + h -> "Wh"	4916
) + + -> ")+"	4917
i + n + e + d -> "ined"	4918
T + O + R -> "TOR"	4919
F + e + e + d -> "Feed"	4920
import + c + n -> "importcn"	4921
a + f + t + e + r -> "after"	4922
c + a + l + l + b + a + c + k -> "callback"	4923
( + ( + int + ) -> "((int)"	4924
B + o + a + r + d -> "Board"	4925
. + r + e + q + u + e + s + t -> ".request"	4926
. + g + e + t + I + n + t -> ".getInt"	4927
N + a + m + e + ( + ) + , -> "Name(),"	4928
o + o + s + e + r -> "ooser"	4929
s + r + c -> "src"	4930
a + t + i + e + n + t -> "atient"	4931
U + p + l + o + a + d -> "Upload"	4932
Y + ) + ; + <EOL> -> "Y);<EOL>"	4933
e + s + c -> "esc"	4934
t + r + a + c + k -> "track"	4935
b + ; + <EOL> -> "b;<EOL>"	4936
R + e + d + i + s -> "Redis"	4937
!=	4938
import + j + a + v + a + f + x + . + s + c -> "importjavafx.sc"	4939
p + h -> "ph"	4940
m + a + n -> "man"	4941
a + v + e + n -> "aven"	4942
< + K -> "<K"	4943
A + v + a + i + l + a + b + l + e -> "Available"	4944
P + r + e + f + e + r + r + e + d -> "Preferred"	4945
private + J -> "privateJ"	4946
. + r + e + s + t -> ".rest"	4947
S + u + b + s + c + r + i + p + t + i + o + n -> "Subscription"	4948
a + n + t + i + t + y -> "antity"	4949
i + d + ) + { + <EOL> -> "id){<EOL>"	4950
c + o + p + y -> "copy"	4951
A + S + E + _ -> "ASE_"	4952
H + t + m + l -> "Html"	4953
S + c -> "Sc"	4954
. + c + o + n + v + e + r + t -> ".convert"	4955
. + c + o + l + l + e + c + t + . -> ".collect."	4956
i + o -> "io"	4957
u + k + . -> "uk."	4958
. + o + k -> ".ok"	4959
t + o + k + e + n -> "token"	4960
. + b + l + o + c + k -> ".block"	4961
S + t + a + r -> "Star"	4962
i + e + s + . -> "ies."	4963
S + a + m + p + l + e -> "Sample"	4964
e + k -> "ek"	4965
l + e + x -> "lex"	4966
import + c + o + m + . + a + l -> "importcom.al"	4967
o + u -> "ou"	4968
C + o + m + p + o + s + i + t + e -> "Composite"	4969
= + s + c -> "=sc"	4970
E + l + e + m + e + n + t + ; + <EOL> -> "Element;<EOL>"	4971
, + c + o + l -> ",col"	4972
L + i + b + r + a + r + y -> "Library"	4973
import + j + a + v + a + . + u + t + i + l + . + D + a + t + e + ; + <EOL> -> "importjava.util.Date;<EOL>"	4974
a + d + d + i + n + g -> "adding"	4975
. + s + t + r + e + a + m + ( + ) -> ".stream()"	4976
M + o + r + e -> "More"	4977
j + s + o + u + p -> "jsoup"	4978
if + ( + this -> "if(this"	4979
S + Q + L + E + x + c + e + p + t + i + o + n + { + <EOL> -> "SQLException{<EOL>"	4980
L + i + n + e + a + r + L + a + y + o + u + t -> "LinearLayout"	4981
( + S + t + r + i + n + g + . + f + o + r + m + a + t + ( + STRING_LITERAL + , -> "(String.format(STRING_LITERAL,"	4982
C + h + e + c + k + B + o + x -> "CheckBox"	4983
, + r + e + s + u + l + t -> ",result"	4984
U + n + s + u + p + p + o + r + t + e + d + O + p + e + r + a + t + i + o + n -> "UnsupportedOperation"	4985
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + c + o + n + t + e + x + t -> "importorg.springframework.context"	4986
r + t -> "rt"	4987
a + m + l -> "aml"	4988
import + o + r + g + . + a + p + a + c + h + e + . + h + a + d + o + o + p -> "importorg.apache.hadoop"	4989
B + u + f + f + e + r + . -> "Buffer."	4990
, + r + e -> ",re"	4991
A + l + l + o + w -> "Allow"	4992
v + o + i + c + e -> "voice"	4993
import + static + o + r + g + . + j + u + n + i + t + . -> "importstaticorg.junit."	4994
p + a + s + s + w + o + r + d -> "password"	4995
o + l + l + o + w -> "ollow"	4996
( + ) + , + new -> "(),new"	4997
V + I + S + I + B -> "VISIB"	4998
U + S + E + R + _ -> "USER_"	4999
T + e + s + t + C + a + s + e -> "TestCase"	5000
T + P -> "TP"	5001
p + o + s + e -> "pose"	5002
d + r + a + w -> "draw"	5003
b + e + d -> "bed"	5004
. + g + r + a + p + h + i + c + s + . -> ".graphics."	5005
. + s + e + t + O + n + C + l + i + c + k + L + i + s + t + e + n + e + r -> ".setOnClickListener"	5006
= + DECIMAL_LITERAL + ; + j -> "=DECIMAL_LITERAL;j"	5007
3 + 0 -> "30"	5008
L + i + s + t + ( + ) + ) + ; + <EOL> -> "List());<EOL>"	5009
public + static + int -> "publicstaticint"	5010
r + i + t + e + r + . -> "riter."	5011
C + a + m + e + r + a -> "Camera"	5012
. + i + n + t + e + r -> ".inter"	5013
a + i + m -> "aim"	5014
!= + null + && + ! -> "!=null&&!"	5015
W + o + r + k + f + l + o + w -> "Workflow"	5016
( + m + o + d + e + l -> "(model"	5017
O + n + C + l + i + c + k + L + i + s + t + e + n + e + r + ( + ) + { + <EOL> -> "OnClickListener(){<EOL>"	5018
. + n + e + x + t + ( + ) + ; + <EOL> -> ".next();<EOL>"	5019
if + ( + r + e + s + u + l + t -> "if(result"	5020
G + L -> "GL"	5021
S + p + e + e + d -> "Speed"	5022
= + new + byte -> "=newbyte"	5023
d + o + c -> "doc"	5024
D + a + t + a + s + e + t -> "Dataset"	5025
o + v + e + r + y -> "overy"	5026
= + new + I + n + t + e + n + t -> "=newIntent"	5027
a + d + d + C + r + i + t + e + r + i + o + n + ( + STRING_LITERAL + , + v + a + l + u + e -> "addCriterion(STRING_LITERAL,value"	5028
, + c + o + m -> ",com"	5029
L + o + g + g -> "Logg"	5030
W + e + i + g + h + t -> "Weight"	5031
b + o + u + n + d -> "bound"	5032
< + ? + > -> "<?>"	5033
a + a -> "aa"	5034
2 + 6 -> "26"	5035
l + i + g + h + t -> "light"	5036
E + x + c + e + p + t + i + o + n + ( + e + ) + ; + <EOL> -> "Exception(e);<EOL>"	5037
( + new + S + t + r + i + n + g -> "(newString"	5038
C + S -> "CS"	5039
r + e + c + t -> "rect"	5040
( + g -> "(g"	5041
. + l + e + n + g + t + h + ; + i + ++ + ) + { + <EOL> -> ".length;i++){<EOL>"	5042
h + a + v + i -> "havi"	5043
. + w + s + . + r -> ".ws.r"	5044
a + t + t + r + i + b + u + t + e + s -> "attributes"	5045
. + o + p -> ".op"	5046
a + c + c + e + p + t -> "accept"	5047
= + m + o + c + k -> "=mock"	5048
p + u -> "pu"	5049
a + p + p + i + n + g -> "apping"	5050
import + j + a + v + a + . + t + i + m + e + . -> "importjava.time."	5051
F + I + N -> "FIN"	5052
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + b + o + o + t -> "importorg.springframework.boot"	5053
I + n + s + t + a + n + t -> "Instant"	5054
O + N + E + ) + ; + <EOL> -> "ONE);<EOL>"	5055
A + T + T + R -> "ATTR"	5056
package + i + o + . -> "packageio."	5057
r + e + s + o + u + r + c + e -> "resource"	5058
e + s + = -> "es="	5059
( + c + l + i + e + n + t -> "(client"	5060
( + ) + . + w + i + t + h -> "().with"	5061
i + f + e + s + t -> "ifest"	5062
F + i + n + a + l -> "Final"	5063
p + a + r + t -> "part"	5064
V + i + r + t + u + a + l -> "Virtual"	5065
U + u + i + d -> "Uuid"	5066
M + I + N -> "MIN"	5067
T + r + a + n + s + p + o + r + t -> "Transport"	5068
o + b + i + l + e -> "obile"	5069
E + n + a + b + l + e -> "Enable"	5070
T + o + S + t + r + i + n + g -> "ToString"	5071
c + a + t -> "cat"	5072
E + x + p + e + c + t -> "Expect"	5073
( + c + o + l + o + r -> "(color"	5074
T + E + R + N -> "TERN"	5075
. + g + e + t + C + o + l + u + m + n -> ".getColumn"	5076
. + s + l + e + e + p -> ".sleep"	5077
U + s + a + g + e -> "Usage"	5078
o + m + e + t + r + y -> "ometry"	5079
S + T + R + I + N + G -> "STRING"	5080
!= + DECIMAL_LITERAL -> "!=DECIMAL_LITERAL"	5081
. + g + e + t + P -> ".getP"	5082
N + A + M + E + ) + ; + <EOL> -> "NAME);<EOL>"	5083
L + i + f -> "Lif"	5084
W + E -> "WE"	5085
s + e + l + e + c + t + e + d -> "selected"	5086
U + t + i + l + s + . + i + s + E + m + p + t + y -> "Utils.isEmpty"	5087
. + d + o + m + a + i + n + . -> ".domain."	5088
_ + r -> "_r"	5089
j + e + c + t + . -> "ject."	5090
A + n + g + l + e -> "Angle"	5091
T + r + a + n + s + i + t + i + o + n -> "Transition"	5092
V + a + l + u + e + ) + { + <EOL> -> "Value){<EOL>"	5093
p + o + r + t + e -> "porte"	5094
N + a + m + e + , + S + t + r + i + n + g -> "Name,String"	5095
e + x + i + t -> "exit"	5096
A + N + D -> "AND"	5097
. + a + n + n + o + t + a + t + i + o + n + . + J + s + o + n -> ".annotation.Json"	5098
HEX_LITERAL + ) + ; + <EOL> -> "HEX_LITERAL);<EOL>"	5099
_ + i + n -> "_in"	5100
j + o -> "jo"	5101
, + r -> ",r"	5102
, + P -> ",P"	5103
l + e + f + t -> "left"	5104
H + t + t + p -> "Http"	5105
I + n + t + e + n + t -> "Intent"	5106
r + e + d + i + t -> "redit"	5107
. + s + e + t + T + e + x + t + ( -> ".setText("	5108
P + r + e + f -> "Pref"	5109
b + o + d + y -> "body"	5110
s + e + r + i + a + l + i + z -> "serializ"	5111
( + ) + ) + ) + . -> "()))."	5112
d + l -> "dl"	5113
A + r + r -> "Arr"	5114
H + a + s + h + M + a + p + < + S + t + r + i + n + g + , -> "HashMap<String,"	5115
d + a + y -> "day"	5116
t + y + p -> "typ"	5117
o + d + e + s + . -> "odes."	5118
c + l + a + s + s -> "class"	5119
P + r + o + p + e + r + t + i + e + s + ; + <EOL> -> "Properties;<EOL>"	5120
U + t + i + l + . -> "Util."	5121
s + t + o + p -> "stop"	5122
G + R + O -> "GRO"	5123
M + e + s + s + a + g + e + ; + <EOL> -> "Message;<EOL>"	5124
, + V -> ",V"	5125
C + e + n + t + e + r -> "Center"	5126
( + n + a + m + e + ) + ; + <EOL> -> "(name);<EOL>"	5127
F + I + L + E + _ -> "FILE_"	5128
v + a + l -> "val"	5129
import + j + a + v + a + . + u + t + i + l + . + C + o + l + l + e + c + t + i + o + n + s + ; + <EOL> -> "importjava.util.Collections;<EOL>"	5130
S + e + r + v + i + c + e + I + m + p + l -> "ServiceImpl"	5131
= + n + e + w -> "=new"	5132
. + m + o + d + e + l + s + . -> ".models."	5133
I + n + s + t -> "Inst"	5134
( + s + h -> "(sh"	5135
import + j + a + v + a + x + . + s + e + r + v + l + e + t + . + h + t + t + p + . + H + t + t + p + S + e + r + v + l + e + t -> "importjavax.servlet.http.HttpServlet"	5136
B + i + n + d -> "Bind"	5137
f + r + a + m + e -> "frame"	5138
i + t + i + e + s + . -> "ities."	5139
N + o + t + e -> "Note"	5140
. + R + ; + <EOL> -> ".R;<EOL>"	5141
i + n + t + e + r + n + a + l -> "internal"	5142
i + t + a + l -> "ital"	5143
public + long + g + e + t -> "publiclongget"	5144
. + c + o + m + . -> ".com."	5145
M + u + t + a + b + l + e -> "Mutable"	5146
E + X + P -> "EXP"	5147
N + a + m + e + d -> "Named"	5148
public + final + static -> "publicfinalstatic"	5149
. + d + o -> ".do"	5150
C + E + S + S -> "CESS"	5151
n + e + s + s -> "ness"	5152
I + t + e + m + ; + <EOL> -> "Item;<EOL>"	5153
p + . -> "p."	5154
	5155
e + s + ( + ) + ; + <EOL> -> "es();<EOL>"	5156
E + l + s + e -> "Else"	5157
F + o + r + m + a + t + t + e + r -> "Formatter"	5158
F + a + i + l + e + d -> "Failed"	5159
F + r + o + m + ( -> "From("	5160
import + j + a + v + a + . + u + t + i + l + . + s + t + r + e + a + m + . -> "importjava.util.stream."	5161
this + . + p + r + o -> "this.pro"	5162
2 + 3 -> "23"	5163
< + ? + > -> "<?>"	5164
n + e -> "ne"	5165
S + t + a + t + s -> "Stats"	5166
R + e + a + d + e + r + ; + <EOL> -> "Reader;<EOL>"	5167
J + S + O + N + O + b + j + e + c + t -> "JSONObject"	5168
E + n + t + i -> "Enti"	5169
T + E + D -> "TED"	5170
H + e + l + p + e + r + ; + <EOL> -> "Helper;<EOL>"	5171
S + o + l -> "Sol"	5172
a + x + x -> "axx"	5173
W + a + i + t -> "Wait"	5174
> + f + i + n + d -> ">find"	5175
( + q + u + e + r + y -> "(query"	5176
f + g -> "fg"	5177
T + y + p + e + t + y + p + e -> "Typetype"	5178
C + o + n + n + e + c + t + i + o + n + . -> "Connection."	5179
s + t + a + c + k -> "stack"	5180
v + e + l + o -> "velo"	5181
f + a + i + l + ( + STRING_LITERAL + ) + ; + <EOL> -> "fail(STRING_LITERAL);<EOL>"	5182
. + s + e + t + V + i + s + i + b + i + l + i + t + y + ( + V + i + e + w -> ".setVisibility(View"	5183
o + n + C + h + a + n + g + e + d + ( + ) + ; + <EOL> -> "onChanged();<EOL>"	5184
s + w -> "sw"	5185
for + ( + int + j + = + DECIMAL_LITERAL + ; + j -> "for(intj=DECIMAL_LITERAL;j"	5186
f + i + t -> "fit"	5187
d + e + s + c + r + i + p + t + o + r -> "descriptor"	5188
u + r + v + e -> "urve"	5189
U + S + _ -> "US_"	5190
F + i + n + i + s + h -> "Finish"	5191
m + o + c + k -> "mock"	5192
r + i + e + n + d -> "riend"	5193
S + u + m -> "Sum"	5194
m + o + n -> "mon"	5195
. + h + a + n + d -> ".hand"	5196
M + A + P -> "MAP"	5197
. + h + e + l + p + e + r -> ".helper"	5198
A + t + t + a + c + h + m + e + n + t -> "Attachment"	5199
R + e + q -> "Req"	5200
b + o + s -> "bos"	5201
. + h + a + s + h + C + o + d + e -> ".hashCode"	5202
L + e + g -> "Leg"	5203
( + c + r + e + a + t + e -> "(create"	5204
_ + w -> "_w"	5205
M + e + t + h + o + d + ; + <EOL> -> "Method;<EOL>"	5206
V + A + L + I + D + _ -> "VALID_"	5207
U + i -> "Ui"	5208
t + i + c + i + p -> "ticip"	5209
V + e + c + t + o + r + 3 -> "Vector3"	5210
t + ; + <EOL> -> "t;<EOL>"	5211
a + h -> "ah"	5212
( + t + o -> "(to"	5213
. + e + q + u + a + l + s + I + g + n + o + r + e + C + a + s + e -> ".equalsIgnoreCase"	5214
T + y + p + e + ( + ) + ; + <EOL> -> "Type();<EOL>"	5215
_ + C -> "_C"	5216
public + void + o + n + C + l + i + c + k + ( + V + i + e + w -> "publicvoidonClick(View"	5217
u + r + l -> "url"	5218
v + e + r + t + e + r -> "verter"	5219
d + r + a + w -> "draw"	5220
f + o + r + g -> "forg"	5221
. + t + y + p + e -> ".type"	5222
t + m + p -> "tmp"	5223
r + u + n + n -> "runn"	5224
_ + l + i + s + t -> "_list"	5225
( + t + e + s + t -> "(test"	5226
. + p + l + a + y -> ".play"	5227
I + n + s + t + r + u + c + t + i + o + n -> "Instruction"	5228
a + r + g + i + n -> "argin"	5229
I + d + ( + ) + , -> "Id(),"	5230
W + r + i + t + e + r + ; + <EOL> -> "Writer;<EOL>"	5231
v + i + s + i + t -> "visit"	5232
o + r + g + . + j + u + n + i + t + . + A + s + s + e + r + t + . + a + s + s + e + r + t + T + r + u + e + ( + STRING_LITERAL + + -> "org.junit.Assert.assertTrue(STRING_LITERAL+"	5233
o + p + e + r + a + t + i + o + n -> "operation"	5234
r + e + c + o + r + d -> "record"	5235
A + L + L -> "ALL"	5236
[ + ] + [ + ] -> "[][]"	5237
; + j + ++ + ) + { + <EOL> -> ";j++){<EOL>"	5238
S + H -> "SH"	5239
import + a + n + d + r + o + i + d + . + u + t + i + l + . -> "importandroid.util."	5240
. + p + o + s -> ".pos"	5241
super + ( + ) + ; + <EOL> -> "super();<EOL>"	5242
t + r + a + n + s -> "trans"	5243
j + a + v + a + . + l + a + n + g + . + S + t + r + i + n + g + s + t + r -> "java.lang.Stringstr"	5244
U + s + e + r + ; + <EOL> -> "User;<EOL>"	5245
B + u + c + k + e + t -> "Bucket"	5246
j + o + b -> "job"	5247
( + s + t + r -> "(str"	5248
a + v + a + i + l -> "avail"	5249
e + d + i -> "edi"	5250
x + ; + <EOL> -> "x;<EOL>"	5251
E + l + e + m + e + n + t + ( -> "Element("	5252
T + R + A + N -> "TRAN"	5253
u + f -> "uf"	5254
o + u + t + . + w + r + i + t + e + ( + STRING_LITERAL + ) + ; + <EOL> -> "out.write(STRING_LITERAL);<EOL>"	5255
. + m + o -> ".mo"	5256
if + ( + S + t + r + i + n + g -> "if(String"	5257
a + w + n -> "awn"	5258
A + V -> "AV"	5259
V + I + D -> "VID"	5260
S + E + C + O + N + D + S -> "SECONDS"	5261
S + i + m -> "Sim"	5262
. + u + i -> ".ui"	5263
c + o + n + t + a + i + n + e + r -> "container"	5264
V + o + l + u + m + e -> "Volume"	5265
I + t + e + m + s -> "Items"	5266
t + v -> "tv"	5267
g + a + m + e -> "game"	5268
C + o + n + s + t -> "Const"	5269
== + DECIMAL_LITERAL + ) + ; + <EOL> -> "==DECIMAL_LITERAL);<EOL>"	5270
u + t + d + o + w + n -> "utdown"	5271
public + enum -> "publicenum"	5272
package + o + r + g -> "packageorg"	5273
U + p + p + e + r -> "Upper"	5274
R + o + b -> "Rob"	5275
z + a + x + x -> "zaxx"	5276
o + s + . -> "os."	5277
V + a + r + i + a + b + l + e + s -> "Variables"	5278
< + E -> "<E"	5279
( + U + s + e + r -> "(User"	5280
r + o + a + d + c + a + s + t -> "roadcast"	5281
public + L + i + s + t -> "publicList"	5282
e + r + . + h + i + k + a + r + i -> "er.hikari"	5283
z + a + x + x + e + r + . + h + i + k + a + r + i -> "zaxxer.hikari"	5284
< + S + t + r + i + n + g + > + ( + ) + ; + <EOL> -> "<String>();<EOL>"	5285
R + e + c + t + a + n + g + l + e -> "Rectangle"	5286
P + C -> "PC"	5287
k + i + p -> "kip"	5288
. + g + e + t + B + y + t + e + s -> ".getBytes"	5289
( + v + a + r -> "(var"	5290
this + . + n + a + m + e + = -> "this.name="	5291
package + c -> "packagec"	5292
M + a + p + p + i + n + g + ; + <EOL> -> "Mapping;<EOL>"	5293
B + u + f -> "Buf"	5294
A + n + s + w + e + r -> "Answer"	5295
C + o + n + n + e + c + t -> "Connect"	5296
( + v + i + e + w -> "(view"	5297
( + j -> "(j"	5298
throw + new + I + l + l + e + g + a + l + A + r + g + u + m + e + n + t + E + x + c + e + p + t + i + o + n + ( + STRING_LITERAL + ) + ; + <EOL> -> "thrownewIllegalArgumentException(STRING_LITERAL);<EOL>"	5299
M + v + c -> "Mvc"	5300
if + ( + i -> "if(i"	5301
> + r + e + s + u + l + t -> ">result"	5302
a + p + p + e + d -> "apped"	5303
A + c + c + e + s + s + o + r + T + a + b + l + e -> "AccessorTable"	5304
. + s + p + r + i + n + g -> ".spring"	5305
public + I + n + t + e + g + e + r + g + e + t -> "publicIntegerget"	5306
o + l + a + t + i + o + n -> "olation"	5307
. + g + e + t + ( + ) + ; + <EOL> -> ".get();<EOL>"	5308
T + x -> "Tx"	5309
< + O + b + j + e + c + t -> "<Object"	5310
M + a + n + a + g + e + m + e + n + t -> "Management"	5311
E + M -> "EM"	5312
super + . + o + n + C + r + e + a + t + e -> "super.onCreate"	5313
w + r + i + t + e + r -> "writer"	5314
a + r + g + e -> "arge"	5315
. + o + f + ( -> ".of("	5316
I + n + f + o + . + g + e + t -> "Info.get"	5317
t + r + a -> "tra"	5318
E + N + _ -> "EN_"	5319
. + g + e + t + C + l + a + s + s + ( + ) + . + g + e + t -> ".getClass().get"	5320
m + a + l + l -> "mall"	5321
E + v + e + n + t + e + v + e + n + t + ) + { + <EOL> -> "Eventevent){<EOL>"	5322
l + o + a + d + e + r -> "loader"	5323
a + b + l -> "abl"	5324
a + l + k -> "alk"	5325
A + n + y -> "Any"	5326
j + s + o + n + . -> "json."	5327
c + o + n + d + i + t + i + o + n -> "condition"	5328
l + o + g + i + n -> "login"	5329
b + l + e -> "ble"	5330
E + n + t + r + i + e + s -> "Entries"	5331
B + o + o + t -> "Boot"	5332
N + o + r + m + a + l -> "Normal"	5333
STRING_LITERAL + : -> "STRING_LITERAL:"	5334
F + a + c + t -> "Fact"	5335
( + L + e + v + e + l -> "(Level"	5336
( + byte + ) + DECIMAL_LITERAL -> "(byte)DECIMAL_LITERAL"	5337
c + h + a + r -> "char"	5338
protected + static -> "protectedstatic"	5339
C + h + e + c + k + e + d -> "Checked"	5340
g + r + p + c -> "grpc"	5341
import + j + a + v + a + . + s + q + l + . -> "importjava.sql."	5342
, + final + S + t + r + i + n + g -> ",finalString"	5343
. + s + t + r + e + a + m + ( + ) + . -> ".stream()."	5344
f + r -> "fr"	5345
j + o + i + n -> "join"	5346
B + T -> "BT"	5347
F + u + n + c + i + o + n + e + s + S + w + i + n + g -> "FuncionesSwing"	5348
a + t + o + r + . -> "ator."	5349
a + u + t + h + e + n + t + i + c + a + t + i + o + n -> "authentication"	5350
[ + ] + { + DECIMAL_LITERAL -> "[]{DECIMAL_LITERAL"	5351
t + e + r + m -> "term"	5352
_ + S + H -> "_SH"	5353
. + n + o -> ".no"	5354
f + i + r + s + t -> "first"	5355
C + P -> "CP"	5356
= + new + j + a + v + a + x + . + s + w + i + n + g + . + J -> "=newjavax.swing.J"	5357
i + g + n + a + t + u + r + e -> "ignature"	5358
E + m + p + l + o + y + e + e -> "Employee"	5359
. + L + E -> ".LE"	5360
( + m + e + t + h + o + d -> "(method"	5361
( + p + r + e -> "(pre"	5362
s + t + e + p -> "step"	5363
I + n + i + t + i + a + l + i + z + e + d -> "Initialized"	5364
A + T + O + R -> "ATOR"	5365
c + l + a + z + z -> "clazz"	5366
A + N + G -> "ANG"	5367
o + g + n -> "ogn"	5368
I + n + p + u + t + S + t + r + e + a + m + i + n + p + u + t -> "InputStreaminput"	5369
p + s -> "ps"	5370
= + c + o + l -> "=col"	5371
. + S + E -> ".SE"	5372
. + S + i + m + p + l + e -> ".Simple"	5373
( + float + ) -> "(float)"	5374
G + u + i -> "Gui"	5375
c + a + c + h + e -> "cache"	5376
. + m + a + t + c + h -> ".match"	5377
a + v + e + d + I + n + s + t + a + n + c + e + S + t + a + t + e + ) + ; + <EOL> -> "avedInstanceState);<EOL>"	5378
b + y + t + e + s -> "bytes"	5379
, + L + o + n + g -> ",Long"	5380
u + s + i + c -> "usic"	5381
O + u + t + p + u + t + S + t + r + e + a + m + ; + <EOL> -> "OutputStream;<EOL>"	5382
I + D + ; + <EOL> -> "ID;<EOL>"	5383
O + b + s + e + r + v + a + b + l + e -> "Observable"	5384
c + o + m + p + a + r + e -> "compare"	5385
. + d + b -> ".db"	5386
e + v + t + ) + { + <EOL> -> "evt){<EOL>"	5387
t + r + i + b + u + t + i + o + n -> "tribution"	5388
. + m + e + s + s + a + g + e -> ".message"	5389
L + o + o + k + u + p -> "Lookup"	5390
S + e + q + u -> "Sequ"	5391
u + r + a -> "ura"	5392
( + DECIMAL_LITERAL + * -> "(DECIMAL_LITERAL*"	5393
a + l + c + u + l + a + t + e -> "alculate"	5394
C + o + m + p + i + l + e + r -> "Compiler"	5395
U + E + _ -> "UE_"	5396
R + e + l + a + t + i + v + e -> "Relative"	5397
S + u + p + p + l + i + e + r -> "Supplier"	5398
S + t + u + b -> "Stub"	5399
z + a + x + x + e + r + . + h + i + k + a + r + i + . + H -> "zaxxer.hikari.H"	5400
P + A + T + H -> "PATH"	5401
c + ; + <EOL> -> "c;<EOL>"	5402
h + e + a + d -> "head"	5403
D + e + c + o + r -> "Decor"	5404
l + i + b -> "lib"	5405
P + r + o + p + e + r + t + y + ; + <EOL> -> "Property;<EOL>"	5406
. + g + e + t + X -> ".getX"	5407
e + n + t + i + t + y + . -> "entity."	5408
. + f + a + i + l -> ".fail"	5409
w + o + r + k -> "work"	5410
T + o + u + c + h -> "Touch"	5411
s + { + <EOL> -> "s{<EOL>"	5412
N + e -> "Ne"	5413
D + F -> "DF"	5414
V + E + R + S + I + O + N -> "VERSION"	5415
t + o + S + t + r + i + n + g + ( + ) + ; + <EOL> -> "toString();<EOL>"	5416
S + u + b -> "Sub"	5417
D + e + e + p -> "Deep"	5418
S + t + a + t + e + ; + <EOL> -> "State;<EOL>"	5419
p + e + r + i + m + e + n + t -> "periment"	5420
import + j + a + v + a + . + l + a + n + g + . + r + e + f + l + e + c + t + . -> "importjava.lang.reflect."	5421
import + c + o + m + . + f + a + s + t + e + r + x + m + l + . + j + a + c + k + s + o + n + . + a + n + n + o + t + a + t + i + o + n + . + J + s + o + n -> "importcom.fasterxml.jackson.annotation.Json"	5422
( + t + a + b + l + e -> "(table"	5423
import + j + a + v + a + x + . + w + s + . + r -> "importjavax.ws.r"	5424
public + void + t + e + s + t + 0 -> "publicvoidtest0"	5425
S + t + r + i + n + g + ( + R -> "String(R"	5426
i + r + c + l + e -> "ircle"	5427
P + L + I + C -> "PLIC"	5428
e + m + o + r + y -> "emory"	5429
e + s + h -> "esh"	5430
i + r + e + c + t + i + o + n -> "irection"	5431
H + i + g + h -> "High"	5432
C + l + o + u + d -> "Cloud"	5433
i + r + e + d -> "ired"	5434
z + a + x + x + e + r + . + h + i + k + a + r + i + . + H + i + k + a + r + i + C + o + n + f + i + g -> "zaxxer.hikari.HikariConfig"	5435
boolean + b + o + o + l + e + a + n -> "booleanboolean"	5436
S + e + r + i + e + s -> "Series"	5437
l + o + g + . + d + e + b + u + g -> "log.debug"	5438
v + a + l + u + e + s -> "values"	5439
p + l + u + g + i + n -> "plugin"	5440
import + j + a + v + a + x + . + s + w + i + n + g + . + J -> "importjavax.swing.J"	5441
C + O + N + F + I -> "CONFI"	5442
S + t + r + i + n + g + [ + ] -> "String[]"	5443
S + e + r + i + a + l + i + z + a + b + l + e + ; + <EOL> -> "Serializable;<EOL>"	5444
C + o + u + n + t + ; + <EOL> -> "Count;<EOL>"	5445
L + i + s + t + = -> "List="	5446
d + s -> "ds"	5447
l + a + n + g + I + m + p + l -> "langImpl"	5448
} + , + { + STRING_LITERAL -> "},{STRING_LITERAL"	5449
C + o + d + e + c -> "Codec"	5450
b + i + n + d -> "bind"	5451
f + r + e + q -> "freq"	5452
_ + P + R + O -> "_PRO"	5453
import + c + o + m + . + g + o + o + g + l + e + . + c + o + m + m + o + n + . + c + o + l + l + e + c + t + . -> "importcom.google.common.collect."	5454
A + s + s + i + g + n -> "Assign"	5455
c + p -> "cp"	5456
O	5457
( + DECIMAL_LITERAL + , + DECIMAL_LITERAL + ) + ) + ; + <EOL> -> "(DECIMAL_LITERAL,DECIMAL_LITERAL));<EOL>"	5458
D + e + l + e + g + a + t + e -> "Delegate"	5459
c + e + l + l -> "cell"	5460
R + e + g + i + s + t + r + a + t + i + o + n -> "Registration"	5461
d + o + c + u + m + e + n + t -> "document"	5462
i + t + i -> "iti"	5463
i + v + e + n -> "iven"	5464
g + r + a + t + i + o + n -> "gration"	5465
y + y -> "yy"	5466
d + e + p + l + o + y + m + e + n + t + E + n + t + i + t + y + M + a + n + a + g + e + r -> "deploymentEntityManager"	5467
return + i + s -> "returnis"	5468
H + t + t + p + S + e + r + v + l + e + t + R + e + q + u + e + s + t + r + e + q + u + e + s + t -> "HttpServletRequestrequest"	5469
D + e + p + e + n + d + e + n + c + y -> "Dependency"	5470
N + I + L -> "NIL"	5471
s + t + o + r + e + . -> "store."	5472
) + . + b + u + i + l + d -> ").build"	5473
u + u + i + d -> "uuid"	5474
= + ( + int + ) -> "=(int)"	5475
p + l + a + y -> "play"	5476
public + void + u + p + d + a + t + e -> "publicvoidupdate"	5477
_ + n + a + m + e -> "_name"	5478
public + boolean + e + q + u + a + l + s + ( -> "publicbooleanequals("	5479
2 + d -> "2d"	5480
C + h + o + i + c + e -> "Choice"	5481
( + int + i + n + d + e + x -> "(intindex"	5482
E + x + p + o + r + t -> "Export"	5483
( + c + t + x -> "(ctx"	5484
u + d + y -> "udy"	5485
e + d + g + e -> "edge"	5486
( + byte + [ + ] -> "(byte[]"	5487
u + b + l + i + s + h -> "ublish"	5488
D + a + t + a + S + e + t -> "DataSet"	5489
n + e + t + w + o + r + k -> "network"	5490
d + i + s + p + l + a + y -> "display"	5491
O + b + j + e + c + t + ; + <EOL> -> "Object;<EOL>"	5492
i + n + s + e + r + t -> "insert"	5493
T + i + m + e + U + n + i + t + . -> "TimeUnit."	5494
B + e + a + n + ; + <EOL> -> "Bean;<EOL>"	5495
e + a + t + u + r + e + s -> "eatures"	5496
c + h + i + l + d -> "child"	5497
i + n + a + r + y -> "inary"	5498
. + c + h + a + n + n + e + l -> ".channel"	5499
C + l + a + s + s + . -> "Class."	5500
public + boolean + h + a + s -> "publicbooleanhas"	5501
p + r + o + j + e + c + t -> "project"	5502
i + s + o + n -> "ison"	5503
a + b + i + l -> "abil"	5504
l + o + c + a + l -> "local"	5505
( + c + o + n + t + e + x + t + ) + ; + <EOL> -> "(context);<EOL>"	5506
l + i + n -> "lin"	5507
) + -> -> ")->"	5508
h + a + s + h + C + o + d + e + ( + ) + { + <EOL> -> "hashCode(){<EOL>"	5509
R + . + i + d -> "R.id"	5510
T + ; + <EOL> -> "T;<EOL>"	5511
e + m -> "em"	5512
c + . + g + e + t -> "c.get"	5513
A + b + s + o + l + u + t + e + P + a + t + h -> "AbsolutePath"	5514
T + e + a + m -> "Team"	5515
S + h + e + e + t -> "Sheet"	5516
import + c + o + m + . + g + o + o + g + l + e + . + g + s + o + n -> "importcom.google.gson"	5517
. + s + e + t + V + i + s + i + b + l + e -> ".setVisible"	5518
. + s + e + t + E + n + a + b + l + e + d -> ".setEnabled"	5519
0 + = -> "0="	5520
. + H + t + t + p -> ".Http"	5521
S + t + r + o + k + e -> "Stroke"	5522
, + p + a + r + a + m -> ",param"	5523
( + ) + -> + { + <EOL> -> "()->{<EOL>"	5524
a + c + l + e -> "acle"	5525
r + e + q + u -> "requ"	5526
O + u + t + e + r -> "Outer"	5527
r + y + p + t -> "rypt"	5528
u + l + e + s + . -> "ules."	5529
public + S -> "publicS"	5530
A + C + E -> "ACE"	5531
t + i + m + e + o + u + t -> "timeout"	5532
B + t + n -> "Btn"	5533
p + a + r + k -> "park"	5534
s + b + . + a + p + p + e + n + d + ( + STRING_LITERAL + ) + . + a + p + p + e + n + d -> "sb.append(STRING_LITERAL).append"	5535
) + : -> "):"	5536
T + e + s + t -> "Test"	5537
1 + ) + { + <EOL> -> "1){<EOL>"	5538
I + n + t + e + g + e + r + > -> "Integer>"	5539
a + s + s + e + r + t + N + o + t + N + u + l + l + ( -> "assertNotNull("	5540
a + u -> "au"	5541
P + r + i + m + i + t + i + v + e -> "Primitive"	5542
L + i + s + t + . + g + e + t -> "List.get"	5543
l + f + 4 + j -> "lf4j"	5544
( + DECIMAL_LITERAL + , -> "(DECIMAL_LITERAL,"	5545
L + o + g + g + e + r + l + o + g + g + e + r -> "Loggerlogger"	5546
import + a + n + d + r + o + i + d + . + a + p + p + . -> "importandroid.app."	5547
I + n + s + e + r + t -> "Insert"	5548
e + x + ) + ; + <EOL> -> "ex);<EOL>"	5549
R + e + p + o + s + i + t + o + r + y + . + f + i + n + d -> "Repository.find"	5550
( + STRING_LITERAL + , + DECIMAL_LITERAL -> "(STRING_LITERAL,DECIMAL_LITERAL"	5551
F + a + m + i + l -> "Famil"	5552
C + l + a + s + s + < + ? + > -> "Class<?>"	5553
E + n + v -> "Env"	5554
e + s + ( + ) + { + <EOL> -> "es(){<EOL>"	5555
== + CHAR_LITERAL -> "==CHAR_LITERAL"	5556
= + I + n + t + e + g + e + r + . + p + a + r + s + e + I + n + t -> "=Integer.parseInt"	5557
F + a + c + t + o + r + y + . + g + e + t -> "Factory.get"	5558
&&	5559
a + ) + ; + <EOL> -> "a);<EOL>"	5560
C + o + l + o + r + ; + <EOL> -> "Color;<EOL>"	5561
d + e + v + i + c + e -> "device"	5562
S + e + r + v + i + c + e + s -> "Services"	5563
A + n + d + r + o + i + d -> "Android"	5564
C + l + a + s + s + ; + <EOL> -> "Class;<EOL>"	5565
, + i + s -> ",is"	5566
4 + ) + ; + <EOL> -> "4);<EOL>"	5567
I + n + e + t -> "Inet"	5568
L + L -> "LL"	5569
. + z -> ".z"	5570
R + e + s + u + l + t + s -> "Results"	5571
t + o + c + o + l -> "tocol"	5572
S + i + d + e -> "Side"	5573
M + a + t + h -> "Math"	5574
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + s + e + c + u + r + i + t + y -> "importorg.springframework.security"	5575
a + c + y -> "acy"	5576
l + a + y + o + u + t -> "layout"	5577
throw + new + I + l + l + e + g + a + l + S + t + a + t + e -> "thrownewIllegalState"	5578
r + e + a + d + e + r -> "reader"	5579
L + i + s + t + e + n + e + r + ( + ) + { + <EOL> -> "Listener(){<EOL>"	5580
a + g + e + r + . -> "ager."	5581
a + l + l + o + w -> "allow"	5582
C + h + o + o + s + e + r -> "Chooser"	5583
W + h + e + n -> "When"	5584
p + r + o + g + r + e + s + s -> "progress"	5585
N + u + l + l + a + b + l + e + ; + <EOL> -> "Nullable;<EOL>"	5586
p + . + g + e + t -> "p.get"	5587
u + b + e -> "ube"	5588
( + S + t + r + i + n + g + s -> "(Strings"	5589
import + j + a + v + a + . + i + o + . + S + e + r + i + a + l + i + z + a + b + l + e + ; + <EOL> -> "importjava.io.Serializable;<EOL>"	5590
f + u + l -> "ful"	5591
o + n + y -> "ony"	5592
R + o + t + a + t + i + o + n -> "Rotation"	5593
R + e + t + r + y -> "Retry"	5594
( + c + o + l + u + m + n -> "(column"	5595
E + x + p + e + c + t + e + d -> "Expected"	5596
e + n + s + u + r + e -> "ensure"	5597
a + d + o + w -> "adow"	5598
M + E + S + S + A + G + E + _ -> "MESSAGE_"	5599
public + int + h + a + s + h + C + o + d + e + ( + ) + { + <EOL> -> "publicinthashCode(){<EOL>"	5600
o + m + b + r + e -> "ombre"	5601
l + o + c + i + t + y -> "locity"	5602
. + c + o + m + m + i + t -> ".commit"	5603
a + l + l + e + t -> "allet"	5604
f + a + c -> "fac"	5605
( + B + u + n + d + l + e + s + a + v + e + d + I + n + s + t + a + n + c + e + S + t + a + t + e + ) + { + <EOL> -> "(BundlesavedInstanceState){<EOL>"	5606
L + i + t + e -> "Lite"	5607
L + i + n + e + s -> "Lines"	5608
a + m + c -> "amc"	5609
q + u + e + s + t + i + o + n -> "question"	5610
T + S -> "TS"	5611
E + V -> "EV"	5612
f + o + r + E + a + c + h -> "forEach"	5613
( + r -> "(r"	5614
C + o + n + s + t + a + n + t + s + ; + <EOL> -> "Constants;<EOL>"	5615
V + i + e + w -> "View"	5616
s + u + m -> "sum"	5617
C + o + n + f + i + g + u + r -> "Configur"	5618
. + g + e + t + M -> ".getM"	5619
p + a + n -> "pan"	5620
import + j + a + v + a + . + u + t + i + l + . + C + o + l + l + e + c + t + i + o + n + ; + <EOL> -> "importjava.util.Collection;<EOL>"	5621
, + this + ) + ; + <EOL> -> ",this);<EOL>"	5622
S + y + s + t + e + m + . + e + r + r -> "System.err"	5623
P + A -> "PA"	5624
F + o + r + e + i + g + n -> "Foreign"	5625
( + e -> "(e"	5626
w + e + e + n -> "ween"	5627
U + R + E + _ -> "URE_"	5628
S + c + o + p -> "Scop"	5629
h + a -> "ha"	5630
l + a + b -> "lab"	5631
W + o + r + k + e + r -> "Worker"	5632
f + i + l -> "fil"	5633
e + n + t + r + y -> "entry"	5634
d + e + s + t -> "dest"	5635
e + x + p + r + e + s + s + i + o + n -> "expression"	5636
u + b + l + i + c -> "ublic"	5637
F + E -> "FE"	5638
N + A + M + E + = + STRING_LITERAL + ; + <EOL> -> "NAME=STRING_LITERAL;<EOL>"	5639
e + r + i + c -> "eric"	5640
if + ( + STRING_LITERAL + . + e + q + u + a + l + s + ( -> "if(STRING_LITERAL.equals("	5641
this + . + n + a + m + e + = + n + a + m + e + ; + <EOL> -> "this.name=name;<EOL>"	5642
( + s + a + v + e + d + I + n + s + t + a + n + c + e + S + t + a + t + e + ) + ; + <EOL> -> "(savedInstanceState);<EOL>"	5643
. + e + x + i + s + t -> ".exist"	5644
r + e + q -> "req"	5645
m + e + s + s + a + g + e + ) + { + <EOL> -> "message){<EOL>"	5646
o + p + e + r -> "oper"	5647
o + l + d -> "old"	5648
r + o + k + e + r -> "roker"	5649
. + c + o + n + f + i + g + . -> ".config."	5650
r + o + u + t -> "rout"	5651
Y + ; + <EOL> -> "Y;<EOL>"	5652
u + r + c + h -> "urch"	5653
j + a + v + a + x + . + s + w + i + n + g + . + G + r + o + u + p + L + a + y + o + u + t + . + A + l + i + g + n + m + e + n + t -> "javax.swing.GroupLayout.Alignment"	5654
throw + new + U + n + s + u + p + p + o + r + t + e + d + O + p + e + r + a + t + i + o + n -> "thrownewUnsupportedOperation"	5655
T + o + a + s + t -> "Toast"	5656
S + c + h + e + d + u + l + e + r -> "Scheduler"	5657
H + e + x -> "Hex"	5658
P + r + o + c + e + s + s + i + n + g -> "Processing"	5659
i + d + e + r -> "ider"	5660
D + i + s + k -> "Disk"	5661
A + u + d + i + t -> "Audit"	5662
E + q + u + a + l + s + ; + <EOL> -> "Equals;<EOL>"	5663
( + ) + . + t + o + S + t + r + i + n + g + ( + ) + ) + ; + <EOL> -> "().toString());<EOL>"	5664
e + c + y + c + l + e -> "ecycle"	5665
2 + _ -> "2_"	5666
L + o + o + p -> "Loop"	5667
a + n + d + i + d + a + t + e -> "andidate"	5668
. + M + A + X + _ + V + A + L + U + E -> ".MAX_VALUE"	5669
T + H + _ -> "TH_"	5670
V + e + c -> "Vec"	5671
S + e + n + s + o + r -> "Sensor"	5672
private + L + o + n + g -> "privateLong"	5673
W	5674
o + l + i + c + y -> "olicy"	5675
( + STRING_LITERAL + ) + ) + . -> "(STRING_LITERAL))."	5676
P + r + e + p + a + r + e + d + S + t + a + t + e + m + e + n + t -> "PreparedStatement"	5677
. + L + E + N + G + T + H -> ".LENGTH"	5678
e + e + . -> "ee."	5679
] + = -> "]="	5680
s + t + a + t -> "stat"	5681
a + r + t + m + e + n + t -> "artment"	5682
s + . + g + e + t + ( -> "s.get("	5683
q + u + e + d -> "qued"	5684
d + ) + ; + <EOL> -> "d);<EOL>"	5685
o + d + u + l + e -> "odule"	5686
( + c + o + m + . -> "(com."	5687
. + e + n + d -> ".end"	5688
I + t + e + r + a + t + o + r + < -> "Iterator<"	5689
M + o + d + i + f + i + e + d -> "Modified"	5690
f + r + e + q + . + p + u + t + ( + STRING_LITERAL + , + DECIMAL_LITERAL + ) + ; + <EOL> -> "freq.put(STRING_LITERAL,DECIMAL_LITERAL);<EOL>"	5691
B + r + a + n + c + h -> "Branch"	5692
l + o + o + k + u + p -> "lookup"	5693
, + d + a + t + a -> ",data"	5694
I + d + x -> "Idx"	5695
o + n + e + . -> "one."	5696
S + e + c + r + e + t -> "Secret"	5697
H + t + t + p + S + t + a + t + u + s + . -> "HttpStatus."	5698
( + c + l + a + s + s -> "(class"	5699
o + o + d -> "ood"	5700
) + . + s + h + o + w + ( + ) + ; + <EOL> -> ").show();<EOL>"	5701
I + N + D + E -> "INDE"	5702
u + f + f -> "uff"	5703
e + d + ( + ) + ; + <EOL> -> "ed();<EOL>"	5704
( + c + o + n + t + e + n + t -> "(content"	5705
= + u + s + e + r -> "=user"	5706
. + a + d + d + A + c + t + i + o + n + L + i + s + t + e + n + e + r -> ".addActionListener"	5707
j + P + a + n + e + l -> "jPanel"	5708
( + p + r + o + p + e + r + t + i + e + s -> "(properties"	5709
r + e + a + k -> "reak"	5710
. + c + l + a + s + s -> ".class"	5711
A + s + s + e + r + t + i + o + n + s + . + a + s + s + e + r + t -> "Assertions.assert"	5712
l + o + g + . + e + r + r + o + r -> "log.error"	5713
C + o + m + p + l + e + t + i + o + n -> "Completion"	5714
I + n + t + ( + ) + ; + <EOL> -> "Int();<EOL>"	5715
C + H + A + R -> "CHAR"	5716
public + S + t + r + i + n + g + g + e + t + N + a + m + e + ( + ) + { + <EOL> -> "publicStringgetName(){<EOL>"	5717
L + i + s + t + e + n + e + r + ( + new -> "Listener(new"	5718
L + o + c + a + l + D + a + t + e + T + i + m + e -> "LocalDateTime"	5719
a + c + c -> "acc"	5720
A + S + E -> "ASE"	5721
public + C -> "publicC"	5722
f + l + a + t + e -> "flate"	5723
r + i + d + e -> "ride"	5724
S + e + r + i + a + l + i + z + a + b + l + e + { + <EOL> -> "Serializable{<EOL>"	5725
import + j + a + v + a + . + n + i + o + . + f + i + l + e + . -> "importjava.nio.file."	5726
h + a + n + d + l + e + r -> "handler"	5727
( + FLOAT_LITERAL + ) + ; + <EOL> -> "(FLOAT_LITERAL);<EOL>"	5728
E + x + c + h + a + n + g + e -> "Exchange"	5729
N + O + _ -> "NO_"	5730
M + e + t + r + i + c + s -> "Metrics"	5731
+ + DECIMAL_LITERAL + , -> "+DECIMAL_LITERAL,"	5732
= + new + C -> "=newC"	5733
c + o + m + . + g + o + o + g + l + e + . + p + r + o + t + o + b + u + f + . + G + e + n + e + r + a + t + e + d + M + e + s + s + a + g + e -> "com.google.protobuf.GeneratedMessage"	5734
b + a + c + k -> "back"	5735
private + double -> "privatedouble"	5736
e + v + e + n + t + . + g + e + t -> "event.get"	5737
R + e + a + s + o + n -> "Reason"	5738
try + ( -> "try("	5739
S + e + p + a + r + a + t + o + r -> "Separator"	5740
E + M + P -> "EMP"	5741
B + u + s + i + n + e + s + s -> "Business"	5742
a + s + s + e + r + t + F + a + l + s + e + ( -> "assertFalse("	5743
c + o + n + f + i + g -> "config"	5744
a + v + o + r -> "avor"	5745
= + L + o + g + g + e + r + F + a + c + t + o + r + y + . + g + e + t + L + o + g + g + e + r + ( -> "=LoggerFactory.getLogger("	5746
R + e + p + o -> "Repo"	5747
D + a + t + a + T + y + p + e -> "DataType"	5748
R + E + G -> "REG"	5749
. + s + i + z + e + ( + ) + ; + i + ++ + ) + { + <EOL> -> ".size();i++){<EOL>"	5750
i + m + a + r + y -> "imary"	5751
= + i + n + p + u + t -> "=input"	5752
p + a + r + s + e + r -> "parser"	5753
Z + i + p -> "Zip"	5754
c + o + m + . + g + o + o + g + l + e -> "com.google"	5755
this + . + i + d + = -> "this.id="	5756
. + r + a + n + d + o + m -> ".random"	5757
n + o + w -> "now"	5758
( + ) + + -> "()+"	5759
s + m -> "sm"	5760
. + k + e + y -> ".key"	5761
0 + , -> "0,"	5762
b + o -> "bo"	5763
A + c + t + i + v -> "Activ"	5764
S + u + p + p + o + r + t + e + d -> "Supported"	5765
T + e + x + t + V + i + e + w -> "TextView"	5766
B + u + s + q + u + e + d -> "Busqued"	5767
public + L + o + n + g -> "publicLong"	5768
public + J -> "publicJ"	5769
i + s + h + e + r -> "isher"	5770
u + t + t + e + r -> "utter"	5771
o + f + f + s + e + t -> "offset"	5772
( + new -> "(new"	5773
T + w + o -> "Two"	5774
N + a + m -> "Nam"	5775
D + e + p + l + o + y + m + e + n + t -> "Deployment"	5776
. + g + e + t + N + a + m + e + ( + ) + , -> ".getName(),"	5777
N + U + M + B + E + R -> "NUMBER"	5778
I + n + t + e + n + t + ; + <EOL> -> "Intent;<EOL>"	5779
P + r + i + o + r + i + t + y -> "Priority"	5780
S + e + r + v + i + c + e + ( -> "Service("	5781
d + i + r -> "dir"	5782
i + v + e + r + y -> "ivery"	5783
G + r + i + d + B + a + g + C + o + n + s + t + r + a + i + n + t -> "GridBagConstraint"	5784
public + void + g + e + t -> "publicvoidget"	5785
. + v + a + l + u + e + O + f + ( -> ".valueOf("	5786
. + m + e + t + h + o + d -> ".method"	5787
D + r + o + p -> "Drop"	5788
F + i + l + e + ) + ; + <EOL> -> "File);<EOL>"	5789
= + _ -> "=_"	5790
o + r + g + . + j + u + n + i + t + . + A + s + s + e + r + t + . + a + s + s + e + r + t + N + o + t + N + u + l + l + ( -> "org.junit.Assert.assertNotNull("	5791
a + m + c + r + e + s + t -> "amcrest"	5792
public + double + g + e + t -> "publicdoubleget"	5793
D + e + s + e + r + i + a + l + i + z -> "Deserializ"	5794
c + u + r -> "cur"	5795
L + O + W -> "LOW"	5796
e + t + w + e + e + n -> "etween"	5797
w + r + i + t + e + r + . -> "writer."	5798
M + a + c + h + i + n + e -> "Machine"	5799
[ + ] + g + e + t -> "[]get"	5800
H + i + n + t -> "Hint"	5801
s + u + m + e + r -> "sumer"	5802
s + = + new + A + r + r + a + y + L + i + s + t + < -> "s=newArrayList<"	5803
C + o + l + l + e + c + t + i + o + n + s + . + e + m + p + t + y -> "Collections.empty"	5804
R + E + S + U + L -> "RESUL"	5805
B + i -> "Bi"	5806
I + t + e + r + a + t + o + r + ; + <EOL> -> "Iterator;<EOL>"	5807
u + l + a + t + o + r -> "ulator"	5808
import + a + n + d + r + o + i + d + . + s + u + p + p + o + r + t + . + v + 7 -> "importandroid.support.v7"	5809
i + t + e + r + a + t + o + r + ( + ) + ; + <EOL> -> "iterator();<EOL>"	5810
< + ? + extends -> "<?extends"	5811
( + STRING_LITERAL + ) + . + g + e + t -> "(STRING_LITERAL).get"	5812
l + o + g + g + e + r -> "logger"	5813
v + i + d + e + o -> "video"	5814
V + M -> "VM"	5815
this + . + c + o + n -> "this.con"	5816
L + E + C -> "LEC"	5817
T + h + e + m + e -> "Theme"	5818
I + n + t + e + g + e + r + . + v + a + l + u + e -> "Integer.value"	5819
H + o + r + i + z + o + n + t + a + l -> "Horizontal"	5820
H + e + a + l + t + h -> "Health"	5821
void	5822
a + n + i + s -> "anis"	5823
o + ) + ; + <EOL> -> "o);<EOL>"	5824
R + e + s + o + u + r + c + e + s + ( + ) + . + g + e + t -> "Resources().get"	5825
import + o + r + g + . + a + p + a + c + h + e + . + c + o + m + m + o + n + s + . + l + a + n + g -> "importorg.apache.commons.lang"	5826
. + g + r + a + p + h + i + c + s + . + C + o + l + o + r -> ".graphics.Color"	5827
a + u + d -> "aud"	5828
f + o + r + m + a + t -> "format"	5829
N + A + M + E + , -> "NAME,"	5830
b + o + d + y -> "body"	5831
i + m + p + o + r + t -> "import"	5832
= + new + L + i + n + k + e + d -> "=newLinked"	5833
H + i + t -> "Hit"	5834
p + o + p -> "pop"	5835
o + r + E + l + s + e -> "orElse"	5836
n + d -> "nd"	5837
_ + 7 -> "_7"	5838
. + c + l + o + u + d + s -> ".clouds"	5839
M + A + X + _ -> "MAX_"	5840
c + a + n -> "can"	5841
if + ( + b -> "if(b"	5842
R + u + n + n + a + b + l + e + ( + ) + { + <EOL> -> "Runnable(){<EOL>"	5843
. + s + t + r + e + a + m + ( + ) + . + m + a + p -> ".stream().map"	5844
S + i + t + e -> "Site"	5845
import + c + o + m + . + e + x + a + m + p + l + e -> "importcom.example"	5846
A + c + t + o + r -> "Actor"	5847
. + l + i + b -> ".lib"	5848
> + f -> ">f"	5849
h + i + r -> "hir"	5850
( + e + n + t + i + t + y -> "(entity"	5851
a + m + a + g + e -> "amage"	5852
z + i + p -> "zip"	5853
( + ) + + -> "()+"	5854
p + m -> "pm"	5855
e + n + v + i + r + o + n + m + e + n + t -> "environment"	5856
D + A + T + E + _ -> "DATE_"	5857
r + e + d + i + e + n + t -> "redient"	5858
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + w + e + b + . + b + i + n + d + . + a + n + n + o + t + a + t + i + o + n + . + R + e + q + u + e + s + t -> "importorg.springframework.web.bind.annotation.Request"	5859
r + o + w + a + b + l + e -> "rowable"	5860
A + r + r + a + y + 0 -> "Array0"	5861
a + d -> "ad"	5862
. + n + e + t + w + o + r + k -> ".network"	5863
i + a + r -> "iar"	5864
m + y -> "my"	5865
F + i + l + e + ; + <EOL> -> "File;<EOL>"	5866
. + p + r + e + p + a + r + e -> ".prepare"	5867
import + j + a + v + a + . + u + t + i + l + . + * + ; + <EOL> -> "importjava.util.*;<EOL>"	5868
P + r + i + n + c + i + p + a + l -> "Principal"	5869
C + R -> "CR"	5870
[ + DECIMAL_LITERAL + ] + [ + DECIMAL_LITERAL + ] -> "[DECIMAL_LITERAL][DECIMAL_LITERAL]"	5871
for + ( + int + i + = + DECIMAL_LITERAL + ; + i + < + DECIMAL_LITERAL -> "for(inti=DECIMAL_LITERAL;i<DECIMAL_LITERAL"	5872
( + v -> "(v"	5873
import + j + a + v + a + x + . + a + n + n + o + t + a + t + i + o + n + . -> "importjavax.annotation."	5874
import + static + o + r + g + . + m + o + c + k + i + t + o + . + M + o + c + k -> "importstaticorg.mockito.Mock"	5875
. + t + r + i + m -> ".trim"	5876
c + r -> "cr"	5877
i + n + a -> "ina"	5878
U + S + E + R -> "USER"	5879
3 + ; + <EOL> -> "3;<EOL>"	5880
public + boolean + e + q + u + a + l + s + ( + O + b + j + e + c + t -> "publicbooleanequals(Object"	5881
v + a + n + c + e -> "vance"	5882
l + i -> "li"	5883
T + h + r + e + a + d + . + s + l + e + e + p -> "Thread.sleep"	5884
h + a + v + i + o + r -> "havior"	5885
G + B -> "GB"	5886
A + r + t + i + c + l + e -> "Article"	5887
V + I + S + I + B + L + E + ) + ; + <EOL> -> "VISIBLE);<EOL>"	5888
V + a + l + u + e + ( + ) + { + <EOL> -> "Value(){<EOL>"	5889
t + h + e + r -> "ther"	5890
C + o + n + t + e + n + t + V + i + e + w -> "ContentView"	5891
D + e + c + o + d + e + r -> "Decoder"	5892
M + a + p + < + S + t + r + i + n + g + , -> "Map<String,"	5893
M + a + p + . + g + e + t -> "Map.get"	5894
F + i + e + l + d + ; + <EOL> -> "Field;<EOL>"	5895
e + r + i + a + l + i + z + e -> "erialize"	5896
O + R + T + _ -> "ORT_"	5897
p + r + o + c + e + s + s -> "process"	5898
i + t + y + ; + <EOL> -> "ity;<EOL>"	5899
h + e + a + d + e + r -> "header"	5900
t + s -> "ts"	5901
s + e + c + o + n + d -> "second"	5902
F + i + x + e + d -> "Fixed"	5903
+ + STRING_LITERAL + , + b -> "+STRING_LITERAL,b"	5904
C + l + a + s + s -> "Class"	5905
. + w + o + r + l + d -> ".world"	5906
private + long -> "privatelong"	5907
import + c + o + m + . + d -> "importcom.d"	5908
t + i + v + i -> "tivi"	5909
public + B + o + o + l + e + a + n -> "publicBoolean"	5910
U + N + D -> "UND"	5911
A + u + t + h + o + r + i + z + a + t + i + o + n -> "Authorization"	5912
s + F + o + r -> "sFor"	5913
>= + DECIMAL_LITERAL + ) + { + <EOL> -> ">=DECIMAL_LITERAL){<EOL>"	5914
L + O + N -> "LON"	5915
R + e + p + o + r + t + e -> "Reporte"	5916
u + t + i + l + s + . -> "utils."	5917
a + s + y + n + c -> "async"	5918
u + p + l + o + a + d -> "upload"	5919
a + s + t + r -> "astr"	5920
M + a + p + < + S + t + r + i + n + g + , + S + t + r + i + n + g + > -> "Map<String,String>"	5921
D + A + T + A -> "DATA"	5922
S + y + s + t + e + m + . + e + r + r + . + p + r + i + n + t + l + n -> "System.err.println"	5923
A + M + E -> "AME"	5924
A + t + t + r + i + b + u + t + e + ( + STRING_LITERAL + , -> "Attribute(STRING_LITERAL,"	5925
O + b + j + e + c + t + s + . -> "Objects."	5926
S + u + p + e + r -> "Super"	5927
( + STRING_LITERAL + ) + . + s + e + t -> "(STRING_LITERAL).set"	5928
l + o + g + g + e + r + . + d + e + b + u + g -> "logger.debug"	5929
r + e + p + o + r + t -> "report"	5930
A + P + P + L + I + C -> "APPLIC"	5931
( + M + a + t + h -> "(Math"	5932
e + d + i + t + o + r -> "editor"	5933
E + q + u -> "Equ"	5934
J + B -> "JB"	5935
M + a + r + k + e + r -> "Marker"	5936
( + n -> "(n"	5937
= + new + S -> "=newS"	5938
( + l + i + s + t -> "(list"	5939
P + r + i + v + a + t + e -> "Private"	5940
( + r + o + o + t -> "(root"	5941
c + o + n + f + i + g + u + r + a + t + i + o + n -> "configuration"	5942
a + g + n -> "agn"	5943
M + E + N + T + _ -> "MENT_"	5944
. + d + a + t + a + b + i + n + d -> ".databind"	5945
p + o + i + n + t -> "point"	5946
. + g + e + t + V + a + l + u + e + ( + ) + ) + ; + <EOL> -> ".getValue());<EOL>"	5947
. + g + e + t + T + i + m + e -> ".getTime"	5948
2 + 7 -> "27"	5949
e + d + ( + ) + { + <EOL> -> "ed(){<EOL>"	5950
G + r + o + u + p + ( + j + a + v + a + x + . + s + w + i + n + g + . + G + r + o + u + p + L + a + y + o + u + t + . + A + l + i + g + n + m + e + n + t -> "Group(javax.swing.GroupLayout.Alignment"	5951
( + S + y + s + t + e + m -> "(System"	5952
, + l -> ",l"	5953
n + e + t + t + y -> "netty"	5954
p + l + e + t + e -> "plete"	5955
M + o + v -> "Mov"	5956
A + D + D -> "ADD"	5957
. + c + l + o + u + d + s + l + a + n + g -> ".cloudslang"	5958
( + m + y -> "(my"	5959
. + s + t + a + r + t + s + W + i + t + h -> ".startsWith"	5960
] + ) + ; + <EOL> -> "]);<EOL>"	5961
I + m + p + l + ; + <EOL> -> "Impl;<EOL>"	5962
P + r + e + c + o + n + d + i + t + i + o + n -> "Precondition"	5963
( + x -> "(x"	5964
S + y + s + t + e + m -> "System"	5965
K + e + y + ) + ; + <EOL> -> "Key);<EOL>"	5966
H + o + u + r -> "Hour"	5967
a + v + e + r -> "aver"	5968
= + ( + T + e + x + t + V + i + e + w -> "=(TextView"	5969
import + o + r + g + . + j + u + n + i + t + . + B + e + f + o + r + e -> "importorg.junit.Before"	5970
A + N + D + _ -> "AND_"	5971
l + a + s -> "las"	5972
i + t + u + d + e -> "itude"	5973
v + i + s + i + t + o + r -> "visitor"	5974
O + F + _ -> "OF_"	5975
= + c + l + i + e + n + t -> "=client"	5976
. + c + o + u + n + t -> ".count"	5977
, + r + e + s + p + o + n + s + e -> ",response"	5978
A + s + S + t + r + i + n + g -> "AsString"	5979
t + i + c + i + p + a + n + t -> "ticipant"	5980
P + s + i -> "Psi"	5981
public + static + S + t + r + i + n + g + g + e + t -> "publicstaticStringget"	5982
( + ) + , + g + e + t -> "(),get"	5983
, + j -> ",j"	5984
A + C + T + I -> "ACTI"	5985
D + I + S -> "DIS"	5986
private + boolean + i + s -> "privatebooleanis"	5987
( + s + q + l -> "(sql"	5988
a + d + d + C + r + i + t + e + r + i + o + n + ( + STRING_LITERAL + , + v + a + l + u + e + , + STRING_LITERAL + ) + ; + <EOL> -> "addCriterion(STRING_LITERAL,value,STRING_LITERAL);<EOL>"	5989
f + ) + ; + <EOL> -> "f);<EOL>"	5990
. + n + e + t -> ".net"	5991
, + n + e + w -> ",new"	5992
E + R + R + O + R + _ -> "ERROR_"	5993
i + p + h + e + r -> "ipher"	5994
( + int + ) -> "(int)"	5995
( + final + S + t + r + i + n + g -> "(finalString"	5996
O + N + T -> "ONT"	5997
s + = -> "s="	5998
( + ) + || -> "()||"	5999
s + . + r + e + m + o + v + e -> "s.remove"	6000
. + a + c + t + i + v + i + t + y -> ".activity"	6001
l + o + n + g -> "long"	6002
. + c + o + n + f + i + g + u + r + a + t + i + o + n -> ".configuration"	6003
I + m + g -> "Img"	6004
) + + -> ")+"	6005
. + c + r + e + a + t + e + P + a + r + a + l + l + e + l -> ".createParallel"	6006
W + r + i + t + a + b + l + e -> "Writable"	6007
Q + N + a + m + e -> "QName"	6008
import + o + r + g + . + w -> "importorg.w"	6009
( + STRING_LITERAL + + + b + o + o + l + e + a + n -> "(STRING_LITERAL+boolean"	6010
+ + STRING_LITERAL + , + b + o + o + l + e + a + n -> "+STRING_LITERAL,boolean"	6011
L + o + n + g -> "Long"	6012
C + O + N + T + R + O -> "CONTRO"	6013
_ + B -> "_B"	6014
T + h + r + e + s + h + o + l + d -> "Threshold"	6015
return + b -> "returnb"	6016
D + a + o + ; + <EOL> -> "Dao;<EOL>"	6017
_ + ) + ; + <EOL> -> "_);<EOL>"	6018
M + a + i + l -> "Mail"	6019
this + . + a + d + d -> "this.add"	6020
L + i + s + t + . + a + d + d -> "List.add"	6021
S + w + i + t + c + h -> "Switch"	6022
super + . + o + n + C + r + e + a + t + e + ( + s + a + v + e + d + I + n + s + t + a + n + c + e + S + t + a + t + e + ) + ; + <EOL> -> "super.onCreate(savedInstanceState);<EOL>"	6023
p + a + n + e + l -> "panel"	6024
5 + ) + ; + <EOL> -> "5);<EOL>"	6025
s + . + g + e + t + S + t + r + i + n + g -> "s.getString"	6026
P + r + o + d + u + c + e + r -> "Producer"	6027
import + o + r + g + . + s + p + r + i + n + g + f + r + a + m + e + w + o + r + k + . + c + o + n + t + e + x + t + . + a + n + n + o + t + a + t + i + o + n + . -> "importorg.springframework.context.annotation."	6028
l + o + g + g + e + r + . + e + r + r + o + r -> "logger.error"	6029
C + r + e + a + t + e + ( + B + u + n + d + l + e + s + a + v + e + d + I + n + s + t + a + n + c + e + S + t + a + t + e + ) + { + <EOL> -> "Create(BundlesavedInstanceState){<EOL>"	6030
int + i -> "inti"	6031
. + s + p + l + i + t + ( + STRING_LITERAL + ) + ; + <EOL> -> ".split(STRING_LITERAL);<EOL>"	6032
import + s -> "imports"	6033
L + a + y + o + u + t + ; + <EOL> -> "Layout;<EOL>"	6034
c + ) + ; + <EOL> -> "c);<EOL>"	6035
G + u + a + r + d -> "Guard"	6036
a + . + g + e + t -> "a.get"	6037
C + a + n -> "Can"	6038
( + o + b + j -> "(obj"	6039
. + s + u + b + s -> ".subs"	6040
e + m + o + n -> "emon"	6041
d + e + p + l + o + y + m + e + n + t + E + n + t + i + t + y + M + a + n + a + g + e + r + 0 -> "deploymentEntityManager0"	6042
I + d + , + S + t + r + i + n + g -> "Id,String"	6043
O + b + j + e + c + t + s + . -> "Objects."	6044
. + r + e + c -> ".rec"	6045
. + p + u + t + E + x + t + r + a -> ".putExtra"	6046
j + u + s + t -> "just"	6047
c + ) + { + <EOL> -> "c){<EOL>"	6048
A + l + l + ( + ) + ; + <EOL> -> "All();<EOL>"	6049
_ + v -> "_v"	6050
s + t + a + r + t + A + c + t + i + v + i + t + y -> "startActivity"	6051
( + D + a + t + e -> "(Date"	6052
. + y -> ".y"	6053
if + ( + ! + i + s -> "if(!is"	6054
c + l + i + e + n + t -> "client"	6055
b + y + t + e -> "byte"	6056
t + l -> "tl"	6057
. + f + l + u + s + h + ( + ) + ; + <EOL> -> ".flush();<EOL>"	6058
( + C + a + l + e + n + d + a + r -> "(Calendar"	6059
final + L + i + s + t + < -> "finalList<"	6060
M + a + s + t + e + r -> "Master"	6061
T + o + a + s + t + . + L + E + N + G + T + H -> "Toast.LENGTH"	6062
E + x + e + c + u + t + e -> "Execute"	6063
B + o + t + t + o + m -> "Bottom"	6064
8 + ) + ; + <EOL> -> "8);<EOL>"	6065
a + l + ; + <EOL> -> "al;<EOL>"	6066
T + E + R + _ -> "TER_"	6067
s + t + o + r + a + g + e -> "storage"	6068
D + e + s + c + r + i + p + t + o + r + s + . -> "Descriptors."	6069
. + r + e + n + d + e + r -> ".render"	6070
c + r + i + b + e + r -> "criber"	6071
c + o + n + t + a + i + n -> "contain"	6072
e + x + e + c + u + t + e -> "execute"	6073
l + o + o + p -> "loop"	6074
. + O -> ".O"	6075
this + . + i + d + = + i + d + ; + <EOL> -> "this.id=id;<EOL>"	6076
S + e -> "Se"	6077
[ + i + ] + ; + <EOL> -> "[i];<EOL>"	6078
a + r + r + a + y -> "array"	6079
s + . + p + u + t + ( + STRING_LITERAL + , -> "s.put(STRING_LITERAL,"	6080
S + t + a + t + e + ( -> "State("	6081
H + a + s + h + S + e + t + ; + <EOL> -> "HashSet;<EOL>"	6082
i + g + r -> "igr"	6083
I + n + d + e + x + ) + ; + <EOL> -> "Index);<EOL>"	6084
g + r + i + d + B + a + g + C + o + n + s + t + r + a + i + n + t + s -> "gridBagConstraints"	6085
P + R + O + P + E + R -> "PROPER"	6086
A + E -> "AE"	6087
import + j + a + v + a + . + u + t + i + l + . + f + u + n + c + t + i + o + n -> "importjava.util.function"	6088
i + c + r + o + s + o + f + t -> "icrosoft"	6089
s + e + t + t + i + n + g -> "setting"	6090
g + r + e -> "gre"	6091
A + c + t + i + v + i + t + y + . + this -> "Activity.this"	6092
package + d + e -> "packagede"	6093
e + d + ) + { + <EOL> -> "ed){<EOL>"	6094
s + I + n -> "sIn"	6095
L + A + B -> "LAB"	6096
this + . + b -> "this.b"	6097
( + p + r + o + j + e + c + t -> "(project"	6098
N + o + t + N + u + l + l + ; + <EOL> -> "NotNull;<EOL>"	6099
. + s + o + u + r + c + e -> ".source"	6100
T + H + O -> "THO"	6101
C + o + n + s + t + r + u + c + t + o + r + ; + <EOL> -> "Constructor;<EOL>"	6102
= + r + e + a + d -> "=read"	6103
( + t + a + s + k -> "(task"	6104
. + v + 1 -> ".v1"	6105
T + r + a + n + s + f + o + r + m + e + r -> "Transformer"	6106
. + i + n + d + e + x + O + f -> ".indexOf"	6107
h + o + l + d + e + r -> "holder"	6108
. + s + e + r + v + i + c + e + s + . -> ".services."	6109
= + new + S + i + m + p + l + e -> "=newSimple"	6110
r + e + n + d + e + r -> "render"	6111
= + f + i + n + d + V + i + e + w + B + y + I + d + ( + R + . + i + d -> "=findViewById(R.id"	6112
. + m + a + k + e + T + e + x + t -> ".makeText"	6113
public + void + s + h + o + u + l + d -> "publicvoidshould"	6114
( + s + t + a + r + t -> "(start"	6115
c + h + a + n + g + e -> "change"	6116
. + c + o + l + l + e + c + t + i + o + n -> ".collection"	6117
t + e + c + h -> "tech"	6118
. + c + l + o + s + e -> ".close"	6119
C + l + a + s + s + ( + ) + . + g + e + t -> "Class().get"	6120
g + r + a + d + e -> "grade"	6121
C + r + e + a + t + o + r -> "Creator"	6122
P + a + r + s + e + r + . -> "Parser."	6123
O + p + t + i + o + n + a + l + ; + <EOL> -> "Optional;<EOL>"	6124
A + c + c -> "Acc"	6125
m + a + t + c + h -> "match"	6126
( + STRING_LITERAL + ) + || -> "(STRING_LITERAL)||"	6127
R + o + l -> "Rol"	6128
F + i + n + d -> "Find"	6129
L + a + y + o + u + t + I + n + f + l + a + t -> "LayoutInflat"	6130
s + . + c + o + r + e + . -> "s.core."	6131
a + g + r + a + m -> "agram"	6132
u + m + m + y -> "ummy"	6133
( + B + o + o + l + e + a + n -> "(Boolean"	6134
a + . + s -> "a.s"	6135
a + v + a + i + l + a + b + l + e -> "available"	6136
o + o + m -> "oom"	6137
R + a + d + i + o -> "Radio"	6138
M + E + N + T -> "MENT"	6139
b + o + r -> "bor"	6140
I + S + T -> "IST"	6141
C + o + u + n + t + ( + ) + { + <EOL> -> "Count(){<EOL>"	6142
= + w -> "=w"	6143
